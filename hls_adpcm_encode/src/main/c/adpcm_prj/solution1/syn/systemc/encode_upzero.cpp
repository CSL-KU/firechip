// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "encode_upzero.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic encode_upzero::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic encode_upzero::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> encode_upzero::ap_ST_st1_fsm_0 = "1";
const sc_lv<13> encode_upzero::ap_ST_st2_fsm_1 = "10";
const sc_lv<13> encode_upzero::ap_ST_st3_fsm_2 = "100";
const sc_lv<13> encode_upzero::ap_ST_st4_fsm_3 = "1000";
const sc_lv<13> encode_upzero::ap_ST_st5_fsm_4 = "10000";
const sc_lv<13> encode_upzero::ap_ST_st6_fsm_5 = "100000";
const sc_lv<13> encode_upzero::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<13> encode_upzero::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<13> encode_upzero::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<13> encode_upzero::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<13> encode_upzero::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<13> encode_upzero::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<13> encode_upzero::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<32> encode_upzero::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> encode_upzero::ap_const_lv1_1 = "1";
const sc_lv<32> encode_upzero::ap_const_lv32_2 = "10";
const sc_lv<32> encode_upzero::ap_const_lv32_8 = "1000";
const sc_lv<32> encode_upzero::ap_const_lv32_9 = "1001";
const sc_lv<32> encode_upzero::ap_const_lv32_A = "1010";
const sc_lv<1> encode_upzero::ap_const_lv1_0 = "0";
const sc_lv<32> encode_upzero::ap_const_lv32_1 = "1";
const sc_lv<32> encode_upzero::ap_const_lv32_3 = "11";
const sc_lv<32> encode_upzero::ap_const_lv32_5 = "101";
const sc_lv<32> encode_upzero::ap_const_lv32_6 = "110";
const sc_lv<3> encode_upzero::ap_const_lv3_0 = "000";
const sc_lv<32> encode_upzero::ap_const_lv32_7 = "111";
const sc_lv<64> encode_upzero::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> encode_upzero::ap_const_lv64_4 = "100";
const sc_lv<64> encode_upzero::ap_const_lv64_3 = "11";
const sc_lv<64> encode_upzero::ap_const_lv64_2 = "10";
const sc_lv<64> encode_upzero::ap_const_lv64_1 = "1";
const sc_lv<64> encode_upzero::ap_const_lv64_5 = "101";
const sc_lv<32> encode_upzero::ap_const_lv32_B = "1011";
const sc_lv<32> encode_upzero::ap_const_lv32_C = "1100";
const sc_lv<3> encode_upzero::ap_const_lv3_6 = "110";
const sc_lv<3> encode_upzero::ap_const_lv3_1 = "1";
const sc_lv<32> encode_upzero::ap_const_lv32_3F = "111111";
const sc_lv<32> encode_upzero::ap_const_lv32_FFFFFF80 = "11111111111111111111111110000000";
const sc_lv<32> encode_upzero::ap_const_lv32_80 = "10000000";
const sc_lv<8> encode_upzero::ap_const_lv8_0 = "00000000";
const sc_lv<32> encode_upzero::ap_const_lv32_27 = "100111";

encode_upzero::encode_upzero(sc_module_name name) : sc_module(name), mVcdFile(0) {
    encode_mul_32s_32s_64_3_U1 = new encode_mul_32s_32s_64_3<1,3,32,32,64>("encode_mul_32s_32s_64_3_U1");
    encode_mul_32s_32s_64_3_U1->clk(ap_clk);
    encode_mul_32s_32s_64_3_U1->reset(ap_rst);
    encode_mul_32s_32s_64_3_U1->din0(grp_fu_221_p0);
    encode_mul_32s_32s_64_3_U1->din1(grp_fu_221_p1);
    encode_mul_32s_32s_64_3_U1->ce(grp_fu_221_ce);
    encode_mul_32s_32s_64_3_U1->dout(grp_fu_221_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_ap_sig_bdd_110);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_149);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_158);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_173);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_183);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_204);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_217);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_79 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_86 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_204 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_217 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_31 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_110 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_64 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_149 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_158 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_173 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_183 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_71 );

    SC_METHOD(thread_bli_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( bli_addr_1_reg_338 );
    sensitive << ( bli_addr_reg_351 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( tmp_41_fu_212_p1 );

    SC_METHOD(thread_bli_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_bli_d0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( tmp_48_fu_269_p2 );
    sensitive << ( tmp_42_fu_288_p2 );

    SC_METHOD(thread_bli_we0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_dlti_addr_1_gep_fu_95_p3);
    sensitive << ( tmp_reg_316 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_fu_182_p2 );
    sensitive << ( exitcond1_fu_200_p2 );

    SC_METHOD(thread_dlti_addr_3_gep_fu_104_p3);
    sensitive << ( tmp_reg_316 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_fu_182_p2 );
    sensitive << ( exitcond1_fu_200_p2 );

    SC_METHOD(thread_dlti_addr_4_gep_fu_116_p3);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_dlti_addr_5_gep_fu_125_p3);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_dlti_addr_gep_fu_56_p3);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_dlti_address0);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( dlti_addr_reg_310 );
    sensitive << ( tmp_reg_316 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_fu_182_p2 );
    sensitive << ( exitcond1_fu_200_p2 );
    sensitive << ( dlti_addr_3_reg_362 );
    sensitive << ( dlti_addr_5_reg_388 );
    sensitive << ( tmp_44_fu_194_p1 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_dlti_address1);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( dlti_addr_reg_310 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( dlti_addr_1_reg_356 );
    sensitive << ( dlti_addr_4_reg_383 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_dlti_ce0);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( tmp_reg_316 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_fu_182_p2 );
    sensitive << ( exitcond1_fu_200_p2 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_dlti_ce1);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_dlti_d0);
    sensitive << ( reg_165 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_dlti_d1);
    sensitive << ( dlt );
    sensitive << ( reg_165 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( dlti_load_2_reg_378 );
    sensitive << ( dlti_load_4_reg_393 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_dlti_we0);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_dlti_we1);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_exitcond1_fu_200_p2);
    sensitive << ( tmp_reg_316 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_154 );

    SC_METHOD(thread_exitcond_fu_182_p2);
    sensitive << ( tmp_reg_316 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_1_reg_143 );

    SC_METHOD(thread_grp_fu_221_ce);

    SC_METHOD(thread_grp_fu_221_p0);
    sensitive << ( tmp_s_reg_320 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_fu_221_p1);
    sensitive << ( reg_165 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_i_4_fu_206_p2);
    sensitive << ( i_reg_154 );

    SC_METHOD(thread_i_5_fu_188_p2);
    sensitive << ( i_1_reg_143 );

    SC_METHOD(thread_p_shl1_fu_245_p3);
    sensitive << ( bli_q0 );

    SC_METHOD(thread_p_shl_fu_280_p3);
    sensitive << ( bli_q0 );

    SC_METHOD(thread_tmp_41_fu_212_p1);
    sensitive << ( i_reg_154 );

    SC_METHOD(thread_tmp_42_fu_288_p2);
    sensitive << ( p_shl_fu_280_p3 );
    sensitive << ( tmp_49_cast_fu_276_p1 );

    SC_METHOD(thread_tmp_44_fu_194_p1);
    sensitive << ( i_1_reg_143 );

    SC_METHOD(thread_tmp_47_fu_253_p2);
    sensitive << ( p_shl1_fu_245_p3 );
    sensitive << ( tmp_57_cast_fu_241_p1 );

    SC_METHOD(thread_tmp_48_fu_269_p2);
    sensitive << ( wd2_cast_cast_fu_234_p3 );
    sensitive << ( wd3_fu_259_p4 );

    SC_METHOD(thread_tmp_49_cast_fu_276_p1);
    sensitive << ( bli_q0 );

    SC_METHOD(thread_tmp_57_cast_fu_241_p1);
    sensitive << ( bli_q0 );

    SC_METHOD(thread_tmp_fu_172_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( dlt );

    SC_METHOD(thread_tmp_s_fu_178_p1);
    sensitive << ( dlt );

    SC_METHOD(thread_wd2_cast_cast_fu_234_p3);
    sensitive << ( tmp_61_reg_373 );

    SC_METHOD(thread_wd3_fu_259_p4);
    sensitive << ( tmp_47_fu_253_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_reg_316 );
    sensitive << ( exitcond_fu_182_p2 );
    sensitive << ( exitcond1_fu_200_p2 );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "encode_upzero_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dlt, "(port)dlt");
    sc_trace(mVcdFile, dlti_address0, "(port)dlti_address0");
    sc_trace(mVcdFile, dlti_ce0, "(port)dlti_ce0");
    sc_trace(mVcdFile, dlti_we0, "(port)dlti_we0");
    sc_trace(mVcdFile, dlti_d0, "(port)dlti_d0");
    sc_trace(mVcdFile, dlti_q0, "(port)dlti_q0");
    sc_trace(mVcdFile, dlti_address1, "(port)dlti_address1");
    sc_trace(mVcdFile, dlti_ce1, "(port)dlti_ce1");
    sc_trace(mVcdFile, dlti_we1, "(port)dlti_we1");
    sc_trace(mVcdFile, dlti_d1, "(port)dlti_d1");
    sc_trace(mVcdFile, dlti_q1, "(port)dlti_q1");
    sc_trace(mVcdFile, bli_address0, "(port)bli_address0");
    sc_trace(mVcdFile, bli_ce0, "(port)bli_ce0");
    sc_trace(mVcdFile, bli_we0, "(port)bli_we0");
    sc_trace(mVcdFile, bli_d0, "(port)bli_d0");
    sc_trace(mVcdFile, bli_q0, "(port)bli_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_31, "ap_sig_bdd_31");
    sc_trace(mVcdFile, reg_165, "reg_165");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_64, "ap_sig_bdd_64");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_71, "ap_sig_bdd_71");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_79, "ap_sig_bdd_79");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_86, "ap_sig_bdd_86");
    sc_trace(mVcdFile, dlti_addr_gep_fu_56_p3, "dlti_addr_gep_fu_56_p3");
    sc_trace(mVcdFile, dlti_addr_reg_310, "dlti_addr_reg_310");
    sc_trace(mVcdFile, tmp_fu_172_p2, "tmp_fu_172_p2");
    sc_trace(mVcdFile, tmp_reg_316, "tmp_reg_316");
    sc_trace(mVcdFile, tmp_s_fu_178_p1, "tmp_s_fu_178_p1");
    sc_trace(mVcdFile, tmp_s_reg_320, "tmp_s_reg_320");
    sc_trace(mVcdFile, i_5_fu_188_p2, "i_5_fu_188_p2");
    sc_trace(mVcdFile, i_5_reg_328, "i_5_reg_328");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_110, "ap_sig_bdd_110");
    sc_trace(mVcdFile, exitcond_fu_182_p2, "exitcond_fu_182_p2");
    sc_trace(mVcdFile, bli_addr_1_reg_338, "bli_addr_1_reg_338");
    sc_trace(mVcdFile, i_4_fu_206_p2, "i_4_fu_206_p2");
    sc_trace(mVcdFile, i_4_reg_346, "i_4_reg_346");
    sc_trace(mVcdFile, bli_addr_reg_351, "bli_addr_reg_351");
    sc_trace(mVcdFile, exitcond1_fu_200_p2, "exitcond1_fu_200_p2");
    sc_trace(mVcdFile, dlti_addr_1_gep_fu_95_p3, "dlti_addr_1_gep_fu_95_p3");
    sc_trace(mVcdFile, dlti_addr_1_reg_356, "dlti_addr_1_reg_356");
    sc_trace(mVcdFile, dlti_addr_3_gep_fu_104_p3, "dlti_addr_3_gep_fu_104_p3");
    sc_trace(mVcdFile, dlti_addr_3_reg_362, "dlti_addr_3_reg_362");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_149, "ap_sig_bdd_149");
    sc_trace(mVcdFile, tmp_61_reg_373, "tmp_61_reg_373");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_158, "ap_sig_bdd_158");
    sc_trace(mVcdFile, dlti_load_2_reg_378, "dlti_load_2_reg_378");
    sc_trace(mVcdFile, dlti_addr_4_gep_fu_116_p3, "dlti_addr_4_gep_fu_116_p3");
    sc_trace(mVcdFile, dlti_addr_4_reg_383, "dlti_addr_4_reg_383");
    sc_trace(mVcdFile, dlti_addr_5_gep_fu_125_p3, "dlti_addr_5_gep_fu_125_p3");
    sc_trace(mVcdFile, dlti_addr_5_reg_388, "dlti_addr_5_reg_388");
    sc_trace(mVcdFile, dlti_load_4_reg_393, "dlti_load_4_reg_393");
    sc_trace(mVcdFile, i_1_reg_143, "i_1_reg_143");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_173, "ap_sig_bdd_173");
    sc_trace(mVcdFile, i_reg_154, "i_reg_154");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_183, "ap_sig_bdd_183");
    sc_trace(mVcdFile, tmp_44_fu_194_p1, "tmp_44_fu_194_p1");
    sc_trace(mVcdFile, tmp_41_fu_212_p1, "tmp_41_fu_212_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_204, "ap_sig_bdd_204");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_217, "ap_sig_bdd_217");
    sc_trace(mVcdFile, tmp_48_fu_269_p2, "tmp_48_fu_269_p2");
    sc_trace(mVcdFile, grp_fu_221_p0, "grp_fu_221_p0");
    sc_trace(mVcdFile, grp_fu_221_p1, "grp_fu_221_p1");
    sc_trace(mVcdFile, grp_fu_221_p2, "grp_fu_221_p2");
    sc_trace(mVcdFile, p_shl1_fu_245_p3, "p_shl1_fu_245_p3");
    sc_trace(mVcdFile, tmp_57_cast_fu_241_p1, "tmp_57_cast_fu_241_p1");
    sc_trace(mVcdFile, tmp_47_fu_253_p2, "tmp_47_fu_253_p2");
    sc_trace(mVcdFile, wd2_cast_cast_fu_234_p3, "wd2_cast_cast_fu_234_p3");
    sc_trace(mVcdFile, wd3_fu_259_p4, "wd3_fu_259_p4");
    sc_trace(mVcdFile, p_shl_fu_280_p3, "p_shl_fu_280_p3");
    sc_trace(mVcdFile, tmp_49_cast_fu_276_p1, "tmp_49_cast_fu_276_p1");
    sc_trace(mVcdFile, tmp_42_fu_288_p2, "tmp_42_fu_288_p2");
    sc_trace(mVcdFile, grp_fu_221_ce, "grp_fu_221_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

encode_upzero::~encode_upzero() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete encode_mul_32s_32s_64_3_U1;
}

void encode_upzero::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(tmp_fu_172_p2.read(), ap_const_lv1_0))) {
        i_1_reg_143 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        i_1_reg_143 = i_5_reg_328.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_fu_172_p2.read(), ap_const_lv1_0))) {
        i_reg_154 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        i_reg_154 = i_4_reg_346.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        reg_165 = dlti_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()))) {
        reg_165 = dlti_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read()))) {
        bli_addr_1_reg_338 =  (sc_lv<3>) (tmp_44_fu_194_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_200_p2.read()))) {
        bli_addr_reg_351 =  (sc_lv<3>) (tmp_41_fu_212_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && ((esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read())) || 
  (!esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_200_p2.read()))))) {
        dlti_addr_1_reg_356 = dlti_addr_1_gep_fu_95_p3.read();
        dlti_addr_3_reg_362 = dlti_addr_3_gep_fu_104_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        dlti_addr_4_reg_383 = dlti_addr_4_gep_fu_116_p3.read();
        dlti_addr_5_reg_388 = dlti_addr_5_gep_fu_125_p3.read();
        dlti_load_2_reg_378 = dlti_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        dlti_addr_reg_310 = dlti_addr_gep_fu_56_p3.read();
        tmp_reg_316 = tmp_fu_172_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        dlti_load_4_reg_393 = dlti_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0))) {
        i_4_reg_346 = i_4_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0))) {
        i_5_reg_328 = i_5_fu_188_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        tmp_61_reg_373 = grp_fu_221_p2.read().range(63, 63);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_fu_172_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_320 = tmp_s_fu_178_p1.read();
    }
}

void encode_upzero::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_bdd_110() {
    ap_sig_bdd_110 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void encode_upzero::thread_ap_sig_bdd_149() {
    ap_sig_bdd_149 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void encode_upzero::thread_ap_sig_bdd_158() {
    ap_sig_bdd_158 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void encode_upzero::thread_ap_sig_bdd_173() {
    ap_sig_bdd_173 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void encode_upzero::thread_ap_sig_bdd_183() {
    ap_sig_bdd_183 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void encode_upzero::thread_ap_sig_bdd_204() {
    ap_sig_bdd_204 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void encode_upzero::thread_ap_sig_bdd_217() {
    ap_sig_bdd_217 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void encode_upzero::thread_ap_sig_bdd_31() {
    ap_sig_bdd_31 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void encode_upzero::thread_ap_sig_bdd_64() {
    ap_sig_bdd_64 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void encode_upzero::thread_ap_sig_bdd_71() {
    ap_sig_bdd_71 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void encode_upzero::thread_ap_sig_bdd_79() {
    ap_sig_bdd_79 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void encode_upzero::thread_ap_sig_bdd_86() {
    ap_sig_bdd_86 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void encode_upzero::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_79.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_86.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_204.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_217.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_31.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_110.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_64.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_149.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_158.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_173.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_183.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void encode_upzero::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_71.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void encode_upzero::thread_bli_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        bli_address0 = bli_addr_reg_351.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        bli_address0 = bli_addr_1_reg_338.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        bli_address0 =  (sc_lv<3>) (tmp_41_fu_212_p1.read());
    } else {
        bli_address0 = "XXX";
    }
}

void encode_upzero::thread_bli_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        bli_ce0 = ap_const_logic_1;
    } else {
        bli_ce0 = ap_const_logic_0;
    }
}

void encode_upzero::thread_bli_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        bli_d0 = tmp_42_fu_288_p2.read().range(39, 8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        bli_d0 = tmp_48_fu_269_p2.read();
    } else {
        bli_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void encode_upzero::thread_bli_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        bli_we0 = ap_const_logic_1;
    } else {
        bli_we0 = ap_const_logic_0;
    }
}

void encode_upzero::thread_dlti_addr_1_gep_fu_95_p3() {
    dlti_addr_1_gep_fu_95_p3 =  (sc_lv<3>) (ap_const_lv64_4);
}

void encode_upzero::thread_dlti_addr_3_gep_fu_104_p3() {
    dlti_addr_3_gep_fu_104_p3 =  (sc_lv<3>) (ap_const_lv64_3);
}

void encode_upzero::thread_dlti_addr_4_gep_fu_116_p3() {
    dlti_addr_4_gep_fu_116_p3 =  (sc_lv<3>) (ap_const_lv64_2);
}

void encode_upzero::thread_dlti_addr_5_gep_fu_125_p3() {
    dlti_addr_5_gep_fu_125_p3 =  (sc_lv<3>) (ap_const_lv64_1);
}

void encode_upzero::thread_dlti_addr_gep_fu_56_p3() {
    dlti_addr_gep_fu_56_p3 =  (sc_lv<3>) (ap_const_lv64_0);
}

void encode_upzero::thread_dlti_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        dlti_address0 = dlti_addr_5_reg_388.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        dlti_address0 = dlti_addr_3_reg_362.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        dlti_address0 = dlti_addr_reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        dlti_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                ((esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
                  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read())) || 
                 (!esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
                  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_200_p2.read()))))) {
        dlti_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read()))) {
        dlti_address0 =  (sc_lv<3>) (tmp_44_fu_194_p1.read());
    } else {
        dlti_address0 = "XXX";
    }
}

void encode_upzero::thread_dlti_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        dlti_address1 = dlti_addr_reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        dlti_address1 = dlti_addr_4_reg_383.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        dlti_address1 = dlti_addr_1_reg_356.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else {
        dlti_address1 = "XXX";
    }
}

void encode_upzero::thread_dlti_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          ((esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read())) || 
           (!esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_200_p2.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()))) {
        dlti_ce0 = ap_const_logic_1;
    } else {
        dlti_ce0 = ap_const_logic_0;
    }
}

void encode_upzero::thread_dlti_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        dlti_ce1 = ap_const_logic_1;
    } else {
        dlti_ce1 = ap_const_logic_0;
    }
}

void encode_upzero::thread_dlti_d0() {
    dlti_d0 = reg_165.read();
}

void encode_upzero::thread_dlti_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        dlti_d1 = dlt.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        dlti_d1 = dlti_load_4_reg_393.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        dlti_d1 = dlti_load_2_reg_378.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        dlti_d1 = reg_165.read();
    } else {
        dlti_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void encode_upzero::thread_dlti_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()))) {
        dlti_we0 = ap_const_logic_1;
    } else {
        dlti_we0 = ap_const_logic_0;
    }
}

void encode_upzero::thread_dlti_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        dlti_we1 = ap_const_logic_1;
    } else {
        dlti_we1 = ap_const_logic_0;
    }
}

void encode_upzero::thread_exitcond1_fu_200_p2() {
    exitcond1_fu_200_p2 = (!i_reg_154.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_154.read() == ap_const_lv3_6);
}

void encode_upzero::thread_exitcond_fu_182_p2() {
    exitcond_fu_182_p2 = (!i_1_reg_143.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_143.read() == ap_const_lv3_6);
}

void encode_upzero::thread_grp_fu_221_ce() {
    grp_fu_221_ce = ap_const_logic_1;
}

void encode_upzero::thread_grp_fu_221_p0() {
    grp_fu_221_p0 =  (sc_lv<32>) (tmp_s_reg_320.read());
}

void encode_upzero::thread_grp_fu_221_p1() {
    grp_fu_221_p1 = reg_165.read();
}

void encode_upzero::thread_i_4_fu_206_p2() {
    i_4_fu_206_p2 = (!i_reg_154.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_154.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void encode_upzero::thread_i_5_fu_188_p2() {
    i_5_fu_188_p2 = (!i_1_reg_143.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_143.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void encode_upzero::thread_p_shl1_fu_245_p3() {
    p_shl1_fu_245_p3 = esl_concat<32,8>(bli_q0.read(), ap_const_lv8_0);
}

void encode_upzero::thread_p_shl_fu_280_p3() {
    p_shl_fu_280_p3 = esl_concat<32,8>(bli_q0.read(), ap_const_lv8_0);
}

void encode_upzero::thread_tmp_41_fu_212_p1() {
    tmp_41_fu_212_p1 = esl_zext<64,3>(i_reg_154.read());
}

void encode_upzero::thread_tmp_42_fu_288_p2() {
    tmp_42_fu_288_p2 = (!p_shl_fu_280_p3.read().is_01() || !tmp_49_cast_fu_276_p1.read().is_01())? sc_lv<40>(): (sc_biguint<40>(p_shl_fu_280_p3.read()) - sc_bigint<40>(tmp_49_cast_fu_276_p1.read()));
}

void encode_upzero::thread_tmp_44_fu_194_p1() {
    tmp_44_fu_194_p1 = esl_zext<64,3>(i_1_reg_143.read());
}

void encode_upzero::thread_tmp_47_fu_253_p2() {
    tmp_47_fu_253_p2 = (!p_shl1_fu_245_p3.read().is_01() || !tmp_57_cast_fu_241_p1.read().is_01())? sc_lv<40>(): (sc_biguint<40>(p_shl1_fu_245_p3.read()) - sc_bigint<40>(tmp_57_cast_fu_241_p1.read()));
}

void encode_upzero::thread_tmp_48_fu_269_p2() {
    tmp_48_fu_269_p2 = (!wd2_cast_cast_fu_234_p3.read().is_01() || !wd3_fu_259_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(wd2_cast_cast_fu_234_p3.read()) + sc_biguint<32>(wd3_fu_259_p4.read()));
}

void encode_upzero::thread_tmp_49_cast_fu_276_p1() {
    tmp_49_cast_fu_276_p1 = esl_sext<40,32>(bli_q0.read());
}

void encode_upzero::thread_tmp_57_cast_fu_241_p1() {
    tmp_57_cast_fu_241_p1 = esl_sext<40,32>(bli_q0.read());
}

void encode_upzero::thread_tmp_fu_172_p2() {
    tmp_fu_172_p2 = (!dlt.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(dlt.read() == ap_const_lv32_0);
}

void encode_upzero::thread_tmp_s_fu_178_p1() {
    tmp_s_fu_178_p1 = esl_sext<64,32>(dlt.read());
}

void encode_upzero::thread_wd2_cast_cast_fu_234_p3() {
    wd2_cast_cast_fu_234_p3 = (!tmp_61_reg_373.read()[0].is_01())? sc_lv<32>(): ((tmp_61_reg_373.read()[0].to_bool())? ap_const_lv32_FFFFFF80: ap_const_lv32_80);
}

void encode_upzero::thread_wd3_fu_259_p4() {
    wd3_fu_259_p4 = tmp_47_fu_253_p2.read().range(39, 8);
}

void encode_upzero::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_200_p2.read()))) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else if (((esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_182_p2.read())) || (!esl_seteq<1,1,1>(tmp_reg_316.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_200_p2.read())))) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}


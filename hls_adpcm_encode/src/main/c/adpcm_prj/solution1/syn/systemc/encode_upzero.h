// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _encode_upzero_HH_
#define _encode_upzero_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "encode_mul_32s_32s_64_3.h"

namespace ap_rtl {

struct encode_upzero : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > dlt;
    sc_out< sc_lv<3> > dlti_address0;
    sc_out< sc_logic > dlti_ce0;
    sc_out< sc_logic > dlti_we0;
    sc_out< sc_lv<32> > dlti_d0;
    sc_in< sc_lv<32> > dlti_q0;
    sc_out< sc_lv<3> > dlti_address1;
    sc_out< sc_logic > dlti_ce1;
    sc_out< sc_logic > dlti_we1;
    sc_out< sc_lv<32> > dlti_d1;
    sc_in< sc_lv<32> > dlti_q1;
    sc_out< sc_lv<3> > bli_address0;
    sc_out< sc_logic > bli_ce0;
    sc_out< sc_logic > bli_we0;
    sc_out< sc_lv<32> > bli_d0;
    sc_in< sc_lv<32> > bli_q0;


    // Module declarations
    encode_upzero(sc_module_name name);
    SC_HAS_PROCESS(encode_upzero);

    ~encode_upzero();

    sc_trace_file* mVcdFile;

    encode_mul_32s_32s_64_3<1,3,32,32,64>* encode_mul_32s_32s_64_3_U1;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_31;
    sc_signal< sc_lv<32> > reg_165;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_64;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_71;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_86;
    sc_signal< sc_lv<3> > dlti_addr_gep_fu_56_p3;
    sc_signal< sc_lv<3> > dlti_addr_reg_310;
    sc_signal< sc_lv<1> > tmp_fu_172_p2;
    sc_signal< sc_lv<1> > tmp_reg_316;
    sc_signal< sc_lv<64> > tmp_s_fu_178_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_320;
    sc_signal< sc_lv<3> > i_5_fu_188_p2;
    sc_signal< sc_lv<3> > i_5_reg_328;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_110;
    sc_signal< sc_lv<1> > exitcond_fu_182_p2;
    sc_signal< sc_lv<3> > bli_addr_1_reg_338;
    sc_signal< sc_lv<3> > i_4_fu_206_p2;
    sc_signal< sc_lv<3> > i_4_reg_346;
    sc_signal< sc_lv<3> > bli_addr_reg_351;
    sc_signal< sc_lv<1> > exitcond1_fu_200_p2;
    sc_signal< sc_lv<3> > dlti_addr_1_gep_fu_95_p3;
    sc_signal< sc_lv<3> > dlti_addr_1_reg_356;
    sc_signal< sc_lv<3> > dlti_addr_3_gep_fu_104_p3;
    sc_signal< sc_lv<3> > dlti_addr_3_reg_362;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_149;
    sc_signal< sc_lv<1> > tmp_61_reg_373;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_158;
    sc_signal< sc_lv<32> > dlti_load_2_reg_378;
    sc_signal< sc_lv<3> > dlti_addr_4_gep_fu_116_p3;
    sc_signal< sc_lv<3> > dlti_addr_4_reg_383;
    sc_signal< sc_lv<3> > dlti_addr_5_gep_fu_125_p3;
    sc_signal< sc_lv<3> > dlti_addr_5_reg_388;
    sc_signal< sc_lv<32> > dlti_load_4_reg_393;
    sc_signal< sc_lv<3> > i_1_reg_143;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_173;
    sc_signal< sc_lv<3> > i_reg_154;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_183;
    sc_signal< sc_lv<64> > tmp_44_fu_194_p1;
    sc_signal< sc_lv<64> > tmp_41_fu_212_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_204;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_bdd_217;
    sc_signal< sc_lv<32> > tmp_48_fu_269_p2;
    sc_signal< sc_lv<32> > grp_fu_221_p0;
    sc_signal< sc_lv<32> > grp_fu_221_p1;
    sc_signal< sc_lv<64> > grp_fu_221_p2;
    sc_signal< sc_lv<40> > p_shl1_fu_245_p3;
    sc_signal< sc_lv<40> > tmp_57_cast_fu_241_p1;
    sc_signal< sc_lv<40> > tmp_47_fu_253_p2;
    sc_signal< sc_lv<32> > wd2_cast_cast_fu_234_p3;
    sc_signal< sc_lv<32> > wd3_fu_259_p4;
    sc_signal< sc_lv<40> > p_shl_fu_280_p3;
    sc_signal< sc_lv<40> > tmp_49_cast_fu_276_p1;
    sc_signal< sc_lv<40> > tmp_42_fu_288_p2;
    sc_signal< sc_logic > grp_fu_221_ce;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_st1_fsm_0;
    static const sc_lv<13> ap_ST_st2_fsm_1;
    static const sc_lv<13> ap_ST_st3_fsm_2;
    static const sc_lv<13> ap_ST_st4_fsm_3;
    static const sc_lv<13> ap_ST_st5_fsm_4;
    static const sc_lv<13> ap_ST_st6_fsm_5;
    static const sc_lv<13> ap_ST_st7_fsm_6;
    static const sc_lv<13> ap_ST_st8_fsm_7;
    static const sc_lv<13> ap_ST_st9_fsm_8;
    static const sc_lv<13> ap_ST_st10_fsm_9;
    static const sc_lv<13> ap_ST_st11_fsm_10;
    static const sc_lv<13> ap_ST_st12_fsm_11;
    static const sc_lv<13> ap_ST_st13_fsm_12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_FFFFFF80;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_27;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_110();
    void thread_ap_sig_bdd_149();
    void thread_ap_sig_bdd_158();
    void thread_ap_sig_bdd_173();
    void thread_ap_sig_bdd_183();
    void thread_ap_sig_bdd_204();
    void thread_ap_sig_bdd_217();
    void thread_ap_sig_bdd_31();
    void thread_ap_sig_bdd_64();
    void thread_ap_sig_bdd_71();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_bdd_86();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_bli_address0();
    void thread_bli_ce0();
    void thread_bli_d0();
    void thread_bli_we0();
    void thread_dlti_addr_1_gep_fu_95_p3();
    void thread_dlti_addr_3_gep_fu_104_p3();
    void thread_dlti_addr_4_gep_fu_116_p3();
    void thread_dlti_addr_5_gep_fu_125_p3();
    void thread_dlti_addr_gep_fu_56_p3();
    void thread_dlti_address0();
    void thread_dlti_address1();
    void thread_dlti_ce0();
    void thread_dlti_ce1();
    void thread_dlti_d0();
    void thread_dlti_d1();
    void thread_dlti_we0();
    void thread_dlti_we1();
    void thread_exitcond1_fu_200_p2();
    void thread_exitcond_fu_182_p2();
    void thread_grp_fu_221_ce();
    void thread_grp_fu_221_p0();
    void thread_grp_fu_221_p1();
    void thread_i_4_fu_206_p2();
    void thread_i_5_fu_188_p2();
    void thread_p_shl1_fu_245_p3();
    void thread_p_shl_fu_280_p3();
    void thread_tmp_41_fu_212_p1();
    void thread_tmp_42_fu_288_p2();
    void thread_tmp_44_fu_194_p1();
    void thread_tmp_47_fu_253_p2();
    void thread_tmp_48_fu_269_p2();
    void thread_tmp_49_cast_fu_276_p1();
    void thread_tmp_57_cast_fu_241_p1();
    void thread_tmp_fu_172_p2();
    void thread_tmp_s_fu_178_p1();
    void thread_wd2_cast_cast_fu_234_p3();
    void thread_wd3_fu_259_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif



================================================================
== Vivado HLS Report for 'encode'
================================================================
* Date:           Sun Nov  5 12:40:15 2017

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        adpcm_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.71|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  221|  359|  222|  360|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1  |   40|   40|         4|          -|          -|      10|    no    |
        |- Loop 2  |   44|   44|         2|          -|          -|      22|    no    |
        |- Loop 3  |   30|   30|         6|          -|          -|       5|    no    |
        |- Loop 4  |    3|   92|         3|          -|          -| 1 ~ 30 |    no    |
        |- Loop 5  |   30|   30|         6|          -|          -|       5|    no    |
        +----------+-----+-----+----------+-----------+-----------+--------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|Expression       |        -|      -|       -|       -|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|       -|
|Register         |        -|      -|       -|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+
|Available        |      650|    600|  202800|  101400|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 55
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / (!exitcond2)
	8  / (exitcond2)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	4  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / (!exitcond)
	12  / (exitcond)
11 --> 
	10  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / (!exitcond3)
	23  / (exitcond3)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	17  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / (tmp_67_i)
	28  / (!tmp_67_i)
27 --> 
	28  / true
28 --> 
	26  / (tmp_67_i & tmp_71_i)
	29  / (!tmp_67_i) | (!tmp_71_i)
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / (!exitcond1)
	43  / (exitcond1)
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	37  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: tqmf_load_1 [2/2] 2.39ns
:13  %tqmf_load_1 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 1), align 4


 <State 2>: 2.39ns
ST_2: tqmf_load [2/2] 2.39ns
:6  %tqmf_load = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 0), align 16

ST_2: tqmf_load_1 [1/2] 2.39ns
:13  %tqmf_load_1 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 1), align 4


 <State 3>: 7.70ns
ST_3: stg_59 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32 %xin1) nounwind, !map !420

ST_3: stg_60 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %xin2) nounwind, !map !426

ST_3: stg_61 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !430

ST_3: stg_62 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @encode_str) nounwind

ST_3: xin2_read [1/1] 0.00ns
:4  %xin2_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %xin2) nounwind

ST_3: xin1_read [1/1] 0.00ns
:5  %xin1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %xin1) nounwind

ST_3: tqmf_load [1/2] 2.39ns
:6  %tqmf_load = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 0), align 16

ST_3: p_shl [1/1] 0.00ns
:7  %p_shl = call i36 @_ssdm_op_BitConcatenate.i36.i32.i4(i32 %tqmf_load, i4 0)

ST_3: p_shl_cast [1/1] 0.00ns
:8  %p_shl_cast = sext i36 %p_shl to i37

ST_3: p_shl1 [1/1] 0.00ns
:9  %p_shl1 = call i34 @_ssdm_op_BitConcatenate.i34.i32.i2(i32 %tqmf_load, i2 0)

ST_3: p_shl1_cast [1/1] 0.00ns
:10  %p_shl1_cast = sext i34 %p_shl1 to i37

ST_3: xa [1/1] 1.66ns
:11  %xa = sub i37 %p_shl_cast, %p_shl1_cast

ST_3: xa_cast [1/1] 0.00ns
:12  %xa_cast = sext i37 %xa to i50

ST_3: tmp_3_cast [1/1] 0.00ns
:14  %tmp_3_cast = sext i32 %tqmf_load_1 to i39

ST_3: xb [1/1] 6.81ns
:15  %xb = mul i39 %tmp_3_cast, -44

ST_3: xb_cast [1/1] 0.00ns
:16  %xb_cast = sext i39 %xb to i50

ST_3: stg_75 [1/1] 0.89ns
:17  br label %1


 <State 4>: 2.39ns
ST_4: tqmf_ptr_0_rec [1/1] 0.00ns
:0  %tqmf_ptr_0_rec = phi i5 [ 2, %0 ], [ %phitmp, %2 ]

ST_4: i [1/1] 0.00ns
:1  %i = phi i4 [ 0, %0 ], [ %i_2, %2 ]

ST_4: xa1 [1/1] 0.00ns
:2  %xa1 = phi i50 [ %xa_cast, %0 ], [ %xa_2, %2 ]

ST_4: xb1 [1/1] 0.00ns
:3  %xb1 = phi i50 [ %xb_cast, %0 ], [ %xb_2, %2 ]

ST_4: tqmf_ptr_0_rec_cast [1/1] 0.00ns
:4  %tqmf_ptr_0_rec_cast = zext i5 %tqmf_ptr_0_rec to i64

ST_4: h_addr [1/1] 0.00ns
:5  %h_addr = getelementptr [24 x i15]* @h, i64 0, i64 %tqmf_ptr_0_rec_cast

ST_4: tqmf_addr [1/1] 0.00ns
:6  %tqmf_addr = getelementptr [24 x i32]* @tqmf, i64 0, i64 %tqmf_ptr_0_rec_cast

ST_4: exitcond2 [1/1] 1.11ns
:7  %exitcond2 = icmp eq i4 %i, -6

ST_4: empty [1/1] 0.00ns
:8  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_4: i_2 [1/1] 0.43ns
:9  %i_2 = add i4 %i, 1

ST_4: stg_86 [1/1] 0.00ns
:10  br i1 %exitcond2, label %3, label %2

ST_4: tqmf_ptr_0_sum1 [1/1] 0.00ns
:0  %tqmf_ptr_0_sum1 = or i5 %tqmf_ptr_0_rec, 1

ST_4: tqmf_ptr_0_sum1_cast [1/1] 0.00ns
:1  %tqmf_ptr_0_sum1_cast = zext i5 %tqmf_ptr_0_sum1 to i64

ST_4: tqmf_ptr [1/1] 0.00ns
:2  %tqmf_ptr = getelementptr [24 x i32]* @tqmf, i64 0, i64 %tqmf_ptr_0_sum1_cast

ST_4: tqmf_load_4 [2/2] 2.39ns
:3  %tqmf_load_4 = load i32* %tqmf_addr, align 8

ST_4: h_ptr [1/1] 0.00ns
:5  %h_ptr = getelementptr [24 x i15]* @h, i64 0, i64 %tqmf_ptr_0_sum1_cast

ST_4: h_load [2/2] 2.39ns
:6  %h_load = load i15* %h_addr, align 4

ST_4: tqmf_ptr_load [2/2] 2.39ns
:11  %tqmf_ptr_load = load i32* %tqmf_ptr, align 4

ST_4: h_ptr_load [2/2] 2.39ns
:13  %h_ptr_load = load i15* %h_ptr, align 2

ST_4: phitmp [1/1] 1.24ns
:18  %phitmp = add i5 %tqmf_ptr_0_rec, 2

ST_4: tqmf_load_2 [2/2] 2.39ns
:0  %tqmf_load_2 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 22), align 8


 <State 5>: 2.39ns
ST_5: tqmf_load_4 [1/2] 2.39ns
:3  %tqmf_load_4 = load i32* %tqmf_addr, align 8

ST_5: h_load [1/2] 2.39ns
:6  %h_load = load i15* %h_addr, align 4

ST_5: tqmf_ptr_load [1/2] 2.39ns
:11  %tqmf_ptr_load = load i32* %tqmf_ptr, align 4

ST_5: h_ptr_load [1/2] 2.39ns
:13  %h_ptr_load = load i15* %h_ptr, align 2


 <State 6>: 6.93ns
ST_6: tmp_cast [1/1] 0.00ns
:4  %tmp_cast = sext i32 %tqmf_load_4 to i46

ST_6: tmp_1_cast [1/1] 0.00ns
:7  %tmp_1_cast = sext i15 %h_load to i46

ST_6: tmp_2 [1/1] 6.93ns
:8  %tmp_2 = mul i46 %tmp_1_cast, %tmp_cast

ST_6: tmp_4_cast [1/1] 0.00ns
:12  %tmp_4_cast = sext i32 %tqmf_ptr_load to i46

ST_6: tmp_7_cast [1/1] 0.00ns
:14  %tmp_7_cast = sext i15 %h_ptr_load to i46

ST_6: tmp_s [1/1] 6.93ns
:15  %tmp_s = mul i46 %tmp_7_cast, %tmp_4_cast


 <State 7>: 1.90ns
ST_7: tmp_2_cast [1/1] 0.00ns
:9  %tmp_2_cast = sext i46 %tmp_2 to i50

ST_7: xa_2 [1/1] 1.90ns
:10  %xa_2 = add i50 %tmp_2_cast, %xa1

ST_7: tmp_10_cast [1/1] 0.00ns
:16  %tmp_10_cast = sext i46 %tmp_s to i50

ST_7: xb_2 [1/1] 1.90ns
:17  %xb_2 = add i50 %tmp_10_cast, %xb1

ST_7: stg_111 [1/1] 0.00ns
:19  br label %1


 <State 8>: 2.39ns
ST_8: tqmf_load_2 [1/2] 2.39ns
:0  %tqmf_load_2 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 22), align 8

ST_8: tqmf_load_3 [2/2] 2.39ns
:7  %tqmf_load_3 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 23), align 4


 <State 9>: 8.71ns
ST_9: tmp_5_cast [1/1] 0.00ns
:1  %tmp_5_cast = sext i32 %tqmf_load_2 to i39

ST_9: tmp_6 [1/1] 6.81ns
:2  %tmp_6 = mul i39 -44, %tmp_5_cast

ST_9: tmp_6_cast [1/1] 0.00ns
:3  %tmp_6_cast = sext i39 %tmp_6 to i50

ST_9: xa_1 [1/1] 1.90ns
:4  %xa_1 = add i50 %xa1, %tmp_6_cast

ST_9: xa_1_cast1 [1/1] 0.00ns
:5  %xa_1_cast1 = zext i50 %xa_1 to i51

ST_9: tmp [1/1] 0.00ns
:6  %tmp = trunc i50 %xa_1 to i47

ST_9: tqmf_load_3 [1/2] 2.39ns
:7  %tqmf_load_3 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 23), align 4

ST_9: p_shl2 [1/1] 0.00ns
:8  %p_shl2 = call i36 @_ssdm_op_BitConcatenate.i36.i32.i4(i32 %tqmf_load_3, i4 0)

ST_9: p_shl2_cast [1/1] 0.00ns
:9  %p_shl2_cast = sext i36 %p_shl2 to i37

ST_9: p_shl3 [1/1] 0.00ns
:10  %p_shl3 = call i34 @_ssdm_op_BitConcatenate.i34.i32.i2(i32 %tqmf_load_3, i2 0)

ST_9: p_shl3_cast [1/1] 0.00ns
:11  %p_shl3_cast = sext i34 %p_shl3 to i37

ST_9: tmp_9 [1/1] 1.66ns
:12  %tmp_9 = sub i37 %p_shl2_cast, %p_shl3_cast

ST_9: tmp_9_cast [1/1] 0.00ns
:13  %tmp_9_cast = sext i37 %tmp_9 to i50

ST_9: xb_1 [1/1] 1.90ns
:14  %xb_1 = add i50 %xb1, %tmp_9_cast

ST_9: xb_1_cast1 [1/1] 0.00ns
:15  %xb_1_cast1 = zext i50 %xb_1 to i51

ST_9: tmp_3 [1/1] 0.00ns
:16  %tmp_3 = trunc i50 %xb_1 to i47

ST_9: stg_130 [1/1] 0.89ns
:17  br label %4


 <State 10>: 3.63ns
ST_10: tqmf_ptr_0_pn_rec [1/1] 0.00ns
:0  %tqmf_ptr_0_pn_rec = phi i6 [ 0, %3 ], [ %tqmf_ptr1_0_rec, %5 ]

ST_10: i_1 [1/1] 0.00ns
:1  %i_1 = phi i5 [ 0, %3 ], [ %i_3, %5 ]

ST_10: tmp_15 [1/1] 0.00ns
:2  %tmp_15 = trunc i6 %tqmf_ptr_0_pn_rec to i5

ST_10: p_sum [1/1] 1.24ns
:3  %p_sum = add i5 -9, %tmp_15

ST_10: p_sum_cast [1/1] 0.00ns
:4  %p_sum_cast = zext i5 %p_sum to i64

ST_10: tqmf_addr_2 [1/1] 0.00ns
:5  %tqmf_addr_2 = getelementptr [24 x i32]* @tqmf, i64 0, i64 %p_sum_cast

ST_10: tqmf_ptr1_0_rec [1/1] 1.24ns
:6  %tqmf_ptr1_0_rec = add i6 -1, %tqmf_ptr_0_pn_rec

ST_10: tqmf_ptr_0_sum [1/1] 1.24ns
:7  %tqmf_ptr_0_sum = add i6 21, %tqmf_ptr_0_pn_rec

ST_10: tqmf_ptr_0_sum_cast [1/1] 0.00ns
:8  %tqmf_ptr_0_sum_cast = zext i6 %tqmf_ptr_0_sum to i64

ST_10: tqmf_ptr1 [1/1] 0.00ns
:9  %tqmf_ptr1 = getelementptr [24 x i32]* @tqmf, i64 0, i64 %tqmf_ptr_0_sum_cast

ST_10: exitcond [1/1] 1.17ns
:10  %exitcond = icmp eq i5 %i_1, -10

ST_10: empty_22 [1/1] 0.00ns
:11  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 22, i64 22, i64 22) nounwind

ST_10: i_3 [1/1] 1.24ns
:12  %i_3 = add i5 1, %i_1

ST_10: stg_144 [1/1] 0.00ns
:13  br i1 %exitcond, label %6, label %5

ST_10: tqmf_ptr1_load [2/2] 2.39ns
:0  %tqmf_ptr1_load = load i32* %tqmf_ptr1, align 4

ST_10: stg_146 [1/1] 2.39ns
:0  store i32 %xin1_read, i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 1), align 4

ST_10: stg_147 [1/1] 2.39ns
:1  store i32 %xin2_read, i32* getelementptr inbounds ([24 x i32]* @tqmf, i64 0, i64 0), align 16

ST_10: tmp_1 [1/1] 1.90ns
:2  %tmp_1 = add i51 %xa_1_cast1, %xb_1_cast1

ST_10: tmp_4 [1/1] 0.00ns
:3  %tmp_4 = call i32 @_ssdm_op_PartSelect.i32.i51.i32.i32(i51 %tmp_1, i32 15, i32 46)

ST_10: stg_150 [1/1] 0.00ns
:4  store i32 %tmp_4, i32* @xl, align 4

ST_10: tmp_5 [1/1] 1.84ns
:5  %tmp_5 = sub i47 %tmp, %tmp_3

ST_10: tmp_8 [1/1] 0.00ns
:6  %tmp_8 = call i32 @_ssdm_op_PartSelect.i32.i47.i32.i32(i47 %tmp_5, i32 15, i32 46)

ST_10: stg_153 [1/1] 0.00ns
:7  store i32 %tmp_8, i32* @xh, align 4

ST_10: delay_bpl_load [2/2] 2.39ns
:8  %delay_bpl_load = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i64 0, i64 0), align 16

ST_10: delay_dltx_load [2/2] 2.39ns
:10  %delay_dltx_load = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i64 0, i64 0), align 16


 <State 11>: 4.78ns
ST_11: tqmf_ptr1_load [1/2] 2.39ns
:0  %tqmf_ptr1_load = load i32* %tqmf_ptr1, align 4

ST_11: stg_157 [1/1] 2.39ns
:1  store i32 %tqmf_ptr1_load, i32* %tqmf_addr_2, align 4

ST_11: stg_158 [1/1] 0.00ns
:2  br label %4


 <State 12>: 2.39ns
ST_12: delay_bpl_load [1/2] 2.39ns
:8  %delay_bpl_load = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i64 0, i64 0), align 16

ST_12: delay_dltx_load [1/2] 2.39ns
:10  %delay_dltx_load = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i64 0, i64 0), align 16


 <State 13>: 8.43ns
ST_13: tmp_i [1/1] 0.00ns
:9  %tmp_i = sext i32 %delay_bpl_load to i64

ST_13: tmp_i_23 [1/1] 0.00ns
:11  %tmp_i_23 = sext i32 %delay_dltx_load to i64

ST_13: zl [3/3] 8.43ns
:12  %zl = mul nsw i64 %tmp_i_23, %tmp_i


 <State 14>: 8.43ns
ST_14: zl [2/3] 8.43ns
:12  %zl = mul nsw i64 %tmp_i_23, %tmp_i


 <State 15>: 8.43ns
ST_15: zl [1/3] 8.43ns
:12  %zl = mul nsw i64 %tmp_i_23, %tmp_i


 <State 16>: 0.89ns
ST_16: stg_166 [1/1] 0.89ns
:13  br label %7


 <State 17>: 8.43ns
ST_17: zl1_i [1/1] 0.00ns
:0  %zl1_i = phi i64 [ %zl, %6 ], [ %zl_1, %8 ]

ST_17: dlt_pn_rec_i [1/1] 0.00ns
:1  %dlt_pn_rec_i = phi i3 [ 0, %6 ], [ %p_01_rec_i, %8 ]

ST_17: p_01_rec_i [1/1] 0.43ns
:2  %p_01_rec_i = add i3 %dlt_pn_rec_i, 1

ST_17: p_01_rec_i_cast [1/1] 0.00ns
:3  %p_01_rec_i_cast = zext i3 %p_01_rec_i to i64

ST_17: delay_dltx_addr [1/1] 0.00ns
:4  %delay_dltx_addr = getelementptr [6 x i32]* @delay_dltx, i64 0, i64 %p_01_rec_i_cast

ST_17: delay_bpl_addr [1/1] 0.00ns
:5  %delay_bpl_addr = getelementptr [6 x i32]* @delay_bpl, i64 0, i64 %p_01_rec_i_cast

ST_17: empty_24 [1/1] 0.00ns
:6  %empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_17: exitcond3 [1/1] 0.94ns
:7  %exitcond3 = icmp eq i3 %dlt_pn_rec_i, -3

ST_17: stg_175 [1/1] 0.00ns
:8  br i1 %exitcond3, label %filtez.exit, label %8

ST_17: delay_bpl_load_1 [2/2] 2.39ns
:0  %delay_bpl_load_1 = load i32* %delay_bpl_addr, align 4

ST_17: delay_dltx_load_1 [2/2] 2.39ns
:2  %delay_dltx_load_1 = load i32* %delay_dltx_addr, align 4

ST_17: rlt1_load_1 [1/1] 0.00ns
filtez.exit:2  %rlt1_load_1 = load i32* @rlt1, align 4

ST_17: al1_load [1/1] 0.00ns
filtez.exit:3  %al1_load = load i32* @al1, align 4

ST_17: rlt2_load [1/1] 0.00ns
filtez.exit:4  %rlt2_load = load i32* @rlt2, align 4

ST_17: al2_load [1/1] 0.00ns
filtez.exit:5  %al2_load = load i32* @al2, align 4

ST_17: tmp_19 [1/1] 0.00ns
filtez.exit:6  %tmp_19 = shl i32 %rlt1_load_1, 1

ST_17: pl [1/1] 0.00ns
filtez.exit:7  %pl = sext i32 %tmp_19 to i64

ST_17: tmp_i1 [1/1] 0.00ns
filtez.exit:8  %tmp_i1 = sext i32 %al1_load to i64

ST_17: pl_1 [3/3] 8.43ns
filtez.exit:9  %pl_1 = mul nsw i64 %tmp_i1, %pl

ST_17: tmp_22 [1/1] 0.00ns
filtez.exit:10  %tmp_22 = shl i32 %rlt2_load, 1

ST_17: pl2 [1/1] 0.00ns
filtez.exit:11  %pl2 = sext i32 %tmp_22 to i64

ST_17: tmp_63_i1 [1/1] 0.00ns
filtez.exit:12  %tmp_63_i1 = sext i32 %al2_load to i64

ST_17: tmp_64_i1 [3/3] 8.43ns
filtez.exit:13  %tmp_64_i1 = mul nsw i64 %tmp_63_i1, %pl2


 <State 18>: 2.39ns
ST_18: delay_bpl_load_1 [1/2] 2.39ns
:0  %delay_bpl_load_1 = load i32* %delay_bpl_addr, align 4

ST_18: delay_dltx_load_1 [1/2] 2.39ns
:2  %delay_dltx_load_1 = load i32* %delay_dltx_addr, align 4


 <State 19>: 8.43ns
ST_19: tmp_64_i [1/1] 0.00ns
:1  %tmp_64_i = sext i32 %delay_bpl_load_1 to i64

ST_19: tmp_65_i [1/1] 0.00ns
:3  %tmp_65_i = sext i32 %delay_dltx_load_1 to i64

ST_19: tmp_66_i [3/3] 8.43ns
:4  %tmp_66_i = mul nsw i64 %tmp_65_i, %tmp_64_i


 <State 20>: 8.43ns
ST_20: tmp_66_i [2/3] 8.43ns
:4  %tmp_66_i = mul nsw i64 %tmp_65_i, %tmp_64_i


 <State 21>: 8.43ns
ST_21: tmp_66_i [1/3] 8.43ns
:4  %tmp_66_i = mul nsw i64 %tmp_65_i, %tmp_64_i


 <State 22>: 2.08ns
ST_22: zl_1 [1/1] 2.08ns
:5  %zl_1 = add nsw i64 %tmp_66_i, %zl1_i

ST_22: stg_198 [1/1] 0.00ns
:6  br label %7


 <State 23>: 8.43ns
ST_23: pl_1 [2/3] 8.43ns
filtez.exit:9  %pl_1 = mul nsw i64 %tmp_i1, %pl

ST_23: tmp_64_i1 [2/3] 8.43ns
filtez.exit:13  %tmp_64_i1 = mul nsw i64 %tmp_63_i1, %pl2


 <State 24>: 8.43ns
ST_24: pl_1 [1/3] 8.43ns
filtez.exit:9  %pl_1 = mul nsw i64 %tmp_i1, %pl

ST_24: tmp_64_i1 [1/3] 8.43ns
filtez.exit:13  %tmp_64_i1 = mul nsw i64 %tmp_63_i1, %pl2


 <State 25>: 7.59ns
ST_25: tmp_63_i [1/1] 0.00ns
filtez.exit:0  %tmp_63_i = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %zl1_i, i32 14, i32 45)

ST_25: stg_204 [1/1] 0.00ns
filtez.exit:1  store i32 %tmp_63_i, i32* @szl, align 4

ST_25: pl_2 [1/1] 2.08ns
filtez.exit:14  %pl_2 = add nsw i64 %tmp_64_i1, %pl_1

ST_25: tmp_66_i1 [1/1] 0.00ns
filtez.exit:15  %tmp_66_i1 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %pl_2, i32 15, i32 46)

ST_25: stg_207 [1/1] 0.00ns
filtez.exit:16  store i32 %tmp_66_i1, i32* @spl, align 4

ST_25: tmp_7 [1/1] 1.60ns
filtez.exit:17  %tmp_7 = add nsw i32 %tmp_66_i1, %tmp_63_i

ST_25: stg_209 [1/1] 0.00ns
filtez.exit:18  store i32 %tmp_7, i32* @sl, align 4

ST_25: el_assign [1/1] 1.60ns
filtez.exit:19  %el_assign = sub nsw i32 %tmp_4, %tmp_7

ST_25: stg_211 [1/1] 0.00ns
filtez.exit:20  store i32 %el_assign, i32* @el, align 4

ST_25: detl_load [1/1] 0.00ns
filtez.exit:21  %detl_load = load i32* @detl, align 4

ST_25: tmp_23 [1/1] 0.00ns
filtez.exit:22  %tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %el_assign, i32 31)

ST_25: m [1/1] 1.60ns
filtez.exit:23  %m = sub nsw i32 0, %el_assign

ST_25: n_assign_1 [1/1] 0.71ns
filtez.exit:24  %n_assign_1 = select i1 %tmp_23, i32 %m, i32 %el_assign

ST_25: tmp_i2_cast [1/1] 0.00ns
filtez.exit:25  %tmp_i2_cast = sext i32 %detl_load to i47

ST_25: stg_217 [1/1] 0.89ns
filtez.exit:26  br label %9


 <State 26>: 2.39ns
ST_26: mil_i [1/1] 0.00ns
:0  %mil_i = phi i5 [ 0, %filtez.exit ], [ %mil, %10 ]

ST_26: tmp_67_i [1/1] 1.17ns
:1  %tmp_67_i = icmp ult i5 %mil_i, -2

ST_26: empty_25 [1/1] 0.00ns
:2  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 30, i64 15) nounwind

ST_26: mil [1/1] 1.24ns
:3  %mil = add i5 %mil_i, 1

ST_26: stg_222 [1/1] 0.00ns
:4  br i1 %tmp_67_i, label %10, label %.loopexit.i_ifconv

ST_26: tmp_68_i [1/1] 0.00ns
:0  %tmp_68_i = zext i5 %mil_i to i64

ST_26: decis_levl_addr [1/1] 0.00ns
:1  %decis_levl_addr = getelementptr [30 x i15]* @decis_levl, i64 0, i64 %tmp_68_i

ST_26: decis_levl_load [2/2] 2.39ns
:2  %decis_levl_load = load i15* %decis_levl_addr, align 2


 <State 27>: 2.39ns
ST_27: decis_levl_load [1/2] 2.39ns
:2  %decis_levl_load = load i15* %decis_levl_addr, align 2


 <State 28>: 8.43ns
ST_28: tmp_69_i_cast [1/1] 0.00ns
:3  %tmp_69_i_cast = zext i15 %decis_levl_load to i47

ST_28: tmp_70_i [1/1] 6.93ns
:4  %tmp_70_i = mul i47 %tmp_69_i_cast, %tmp_i2_cast

ST_28: tmp_10 [1/1] 0.00ns
:5  %tmp_10 = call i32 @_ssdm_op_PartSelect.i32.i47.i32.i32(i47 %tmp_70_i, i32 15, i32 46)

ST_28: tmp_71_i [1/1] 1.50ns
:6  %tmp_71_i = icmp sgt i32 %n_assign_1, %tmp_10

ST_28: stg_231 [1/1] 0.00ns
:7  br i1 %tmp_71_i, label %9, label %.loopexit.i_ifconv

ST_28: tmp_73_i [1/1] 0.00ns
.loopexit.i_ifconv:0  %tmp_73_i = zext i5 %mil_i to i64

ST_28: quant26bt_pos_addr [1/1] 0.00ns
.loopexit.i_ifconv:1  %quant26bt_pos_addr = getelementptr [31 x i6]* @quant26bt_pos, i64 0, i64 %tmp_73_i

ST_28: ril [2/2] 2.39ns
.loopexit.i_ifconv:2  %ril = load i6* %quant26bt_pos_addr, align 1

ST_28: quant26bt_neg_addr [1/1] 0.00ns
.loopexit.i_ifconv:3  %quant26bt_neg_addr = getelementptr [31 x i6]* @quant26bt_neg, i64 0, i64 %tmp_73_i

ST_28: ril_1 [2/2] 2.39ns
.loopexit.i_ifconv:4  %ril_1 = load i6* %quant26bt_neg_addr, align 1


 <State 29>: 5.49ns
ST_29: ril [1/2] 2.39ns
.loopexit.i_ifconv:2  %ril = load i6* %quant26bt_pos_addr, align 1

ST_29: ril_1 [1/2] 2.39ns
.loopexit.i_ifconv:4  %ril_1 = load i6* %quant26bt_neg_addr, align 1

ST_29: ril_2 [1/1] 0.71ns
.loopexit.i_ifconv:5  %ril_2 = select i1 %tmp_23, i6 %ril_1, i6 %ril

ST_29: il_assign_cast [1/1] 0.00ns
.loopexit.i_ifconv:6  %il_assign_cast = zext i6 %ril_2 to i32

ST_29: stg_241 [1/1] 0.00ns
.loopexit.i_ifconv:7  store i32 %il_assign_cast, i32* @il, align 4

ST_29: tmp_11 [1/1] 0.00ns
.loopexit.i_ifconv:8  %tmp_11 = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %ril_2, i32 2, i32 5)

ST_29: tmp_12 [1/1] 0.00ns
.loopexit.i_ifconv:9  %tmp_12 = zext i4 %tmp_11 to i64

ST_29: qq4_code4_table_addr [1/1] 0.00ns
.loopexit.i_ifconv:10  %qq4_code4_table_addr = getelementptr [16 x i16]* @qq4_code4_table, i64 0, i64 %tmp_12

ST_29: qq4_code4_table_load [2/2] 2.39ns
.loopexit.i_ifconv:11  %qq4_code4_table_load = load i16* %qq4_code4_table_addr, align 2

ST_29: wl_code_table_addr [1/1] 0.00ns
.loopexit.i_ifconv:22  %wl_code_table_addr = getelementptr [16 x i13]* @wl_code_table, i64 0, i64 %tmp_12

ST_29: wl_code_table_load [2/2] 2.39ns
.loopexit.i_ifconv:23  %wl_code_table_load = load i13* %wl_code_table_addr, align 2


 <State 30>: 6.89ns
ST_30: qq4_code4_table_load [1/2] 2.39ns
.loopexit.i_ifconv:11  %qq4_code4_table_load = load i16* %qq4_code4_table_addr, align 2

ST_30: nbl_load [1/1] 0.00ns
.loopexit.i_ifconv:16  %nbl_load = load i32* @nbl, align 4

ST_30: tmp_i2_cast_26 [1/1] 0.00ns
.loopexit.i_ifconv:17  %tmp_i2_cast_26 = sext i32 %nbl_load to i40

ST_30: p_shl_i [1/1] 0.00ns
.loopexit.i_ifconv:18  %p_shl_i = call i39 @_ssdm_op_BitConcatenate.i39.i32.i7(i32 %nbl_load, i7 0)

ST_30: p_shl_i_cast [1/1] 0.00ns
.loopexit.i_ifconv:19  %p_shl_i_cast = zext i39 %p_shl_i to i40

ST_30: tmp_i3 [1/1] 1.72ns
.loopexit.i_ifconv:20  %tmp_i3 = sub i40 %p_shl_i_cast, %tmp_i2_cast_26

ST_30: tmp_75_i [1/1] 0.00ns
.loopexit.i_ifconv:21  %tmp_75_i = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp_i3, i32 7, i32 38)

ST_30: wl_code_table_load [1/2] 2.39ns
.loopexit.i_ifconv:23  %wl_code_table_load = load i13* %wl_code_table_addr, align 2

ST_30: wl_code_table_load_cast [1/1] 0.00ns
.loopexit.i_ifconv:24  %wl_code_table_load_cast = sext i13 %wl_code_table_load to i32

ST_30: nbl_assign_1 [1/1] 1.60ns
.loopexit.i_ifconv:25  %nbl_assign_1 = add nsw i32 %tmp_75_i, %wl_code_table_load_cast

ST_30: tmp_26 [1/1] 0.00ns
.loopexit.i_ifconv:26  %tmp_26 = trunc i32 %nbl_assign_1 to i31

ST_30: tmp_32 [1/1] 0.00ns
.loopexit.i_ifconv:27  %tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %nbl_assign_1, i32 31)

ST_30: p_i [1/1] 0.71ns
.loopexit.i_ifconv:28  %p_i = select i1 %tmp_32, i31 0, i31 %tmp_26

ST_30: tmp_36 [1/1] 0.00ns
.loopexit.i_ifconv:29  %tmp_36 = trunc i31 %p_i to i15

ST_30: tmp_78_i [1/1] 1.48ns
.loopexit.i_ifconv:30  %tmp_78_i = icmp ugt i31 %p_i, 18432

ST_30: nbl_assign_2 [1/1] 0.71ns
.loopexit.i_ifconv:31  %nbl_assign_2 = select i1 %tmp_78_i, i15 -14336, i15 %tmp_36

ST_30: nbl_assign_2_cast [1/1] 0.00ns
.loopexit.i_ifconv:32  %nbl_assign_2_cast = zext i15 %nbl_assign_2 to i32

ST_30: stg_265 [1/1] 0.00ns
.loopexit.i_ifconv:33  store i32 %nbl_assign_2_cast, i32* @nbl, align 4

ST_30: wd1 [1/1] 0.00ns
.loopexit.i_ifconv:34  %wd1 = call i5 @_ssdm_op_PartSelect.i5.i15.i32.i32(i15 %nbl_assign_2, i32 6, i32 10)

ST_30: wd2_cast [1/1] 0.00ns
.loopexit.i_ifconv:35  %wd2_cast = call i4 @_ssdm_op_PartSelect.i4.i15.i32.i32(i15 %nbl_assign_2, i32 11, i32 14)


 <State 31>: 8.53ns
ST_31: tmp_23_cast [1/1] 0.00ns
.loopexit.i_ifconv:12  %tmp_23_cast = sext i16 %qq4_code4_table_load to i47

ST_31: tmp_13 [1/1] 6.93ns
.loopexit.i_ifconv:13  %tmp_13 = mul i47 %tmp_i2_cast, %tmp_23_cast

ST_31: tmp_14 [1/1] 0.00ns
.loopexit.i_ifconv:14  %tmp_14 = call i32 @_ssdm_op_PartSelect.i32.i47.i32.i32(i47 %tmp_13, i32 15, i32 46)

ST_31: stg_271 [1/1] 0.00ns
.loopexit.i_ifconv:15  store i32 %tmp_14, i32* @dlt, align 4

ST_31: tmp_i4 [1/1] 0.00ns
.loopexit.i_ifconv:36  %tmp_i4 = zext i5 %wd1 to i64

ST_31: ilb_table_addr [1/1] 0.00ns
.loopexit.i_ifconv:37  %ilb_table_addr = getelementptr [32 x i12]* @ilb_table, i64 0, i64 %tmp_i4

ST_31: ilb_table_load [2/2] 2.39ns
.loopexit.i_ifconv:38  %ilb_table_load = load i12* %ilb_table_addr, align 2

ST_31: tmp_16 [1/1] 1.60ns
.loopexit.i_ifconv:45  %tmp_16 = add nsw i32 %tmp_14, %tmp_63_i

ST_31: stg_276 [1/1] 0.00ns
.loopexit.i_ifconv:46  store i32 %tmp_16, i32* @plt, align 4

ST_31: delay_bph_load [2/2] 2.39ns
.loopexit.i_ifconv:112  %delay_bph_load = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i64 0, i64 0), align 16

ST_31: delay_dhx_load [2/2] 2.39ns
.loopexit.i_ifconv:114  %delay_dhx_load = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i64 0, i64 0), align 16


 <State 32>: 8.43ns
ST_32: ilb_table_load [1/2] 2.39ns
.loopexit.i_ifconv:38  %ilb_table_load = load i12* %ilb_table_addr, align 2

ST_32: tmp_80_i [1/1] 0.43ns
.loopexit.i_ifconv:39  %tmp_80_i = sub i4 -7, %wd2_cast

ST_32: tmp_80_i_cast_cast [1/1] 0.00ns
.loopexit.i_ifconv:40  %tmp_80_i_cast_cast = zext i4 %tmp_80_i to i12

ST_32: wd3 [1/1] 1.97ns
.loopexit.i_ifconv:41  %wd3 = lshr i12 %ilb_table_load, %tmp_80_i_cast_cast

ST_32: tmp_81_i [1/1] 0.00ns
.loopexit.i_ifconv:42  %tmp_81_i = call i15 @_ssdm_op_BitConcatenate.i15.i12.i3(i12 %wd3, i3 0)

ST_32: tmp_81_i_cast [1/1] 0.00ns
.loopexit.i_ifconv:43  %tmp_81_i_cast = zext i15 %tmp_81_i to i32

ST_32: stg_285 [1/1] 0.00ns
.loopexit.i_ifconv:44  store i32 %tmp_81_i_cast, i32* @detl, align 4

ST_32: stg_286 [2/2] 2.98ns
.loopexit.i_ifconv:47  call fastcc void @encode_upzero(i32 %tmp_14, [6 x i32]* @delay_dltx, [6 x i32]* @delay_bpl) nounwind

ST_32: plt_load [1/1] 0.00ns
.loopexit.i_ifconv:50  %plt_load = load i32* @plt, align 4

ST_32: plt1_load [1/1] 0.00ns
.loopexit.i_ifconv:51  %plt1_load = load i32* @plt1, align 4

ST_32: plt2_load [1/1] 0.00ns
.loopexit.i_ifconv:52  %plt2_load = load i32* @plt2, align 4

ST_32: tmp_i5 [1/1] 0.00ns
.loopexit.i_ifconv:56  %tmp_i5 = sext i32 %plt_load to i64

ST_32: tmp_82_i [1/1] 0.00ns
.loopexit.i_ifconv:57  %tmp_82_i = sext i32 %plt1_load to i64

ST_32: tmp_83_i [3/3] 8.43ns
.loopexit.i_ifconv:58  %tmp_83_i = mul nsw i64 %tmp_82_i, %tmp_i5

ST_32: tmp_86_i [1/1] 0.00ns
.loopexit.i_ifconv:66  %tmp_86_i = sext i32 %plt2_load to i64

ST_32: tmp_87_i [3/3] 8.43ns
.loopexit.i_ifconv:67  %tmp_87_i = mul nsw i64 %tmp_86_i, %tmp_i5

ST_32: stg_295 [1/1] 0.00ns
.loopexit.i_ifconv:110  store i32 %plt1_load, i32* @plt2, align 4

ST_32: stg_296 [1/1] 0.00ns
.loopexit.i_ifconv:111  store i32 %plt_load, i32* @plt1, align 4

ST_32: delay_bph_load [1/2] 2.39ns
.loopexit.i_ifconv:112  %delay_bph_load = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i64 0, i64 0), align 16

ST_32: delay_dhx_load [1/2] 2.39ns
.loopexit.i_ifconv:114  %delay_dhx_load = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i64 0, i64 0), align 16


 <State 33>: 8.43ns
ST_33: stg_299 [1/2] 0.00ns
.loopexit.i_ifconv:47  call fastcc void @encode_upzero(i32 %tmp_14, [6 x i32]* @delay_dltx, [6 x i32]* @delay_bpl) nounwind

ST_33: tmp_83_i [2/3] 8.43ns
.loopexit.i_ifconv:58  %tmp_83_i = mul nsw i64 %tmp_82_i, %tmp_i5

ST_33: tmp_87_i [2/3] 8.43ns
.loopexit.i_ifconv:67  %tmp_87_i = mul nsw i64 %tmp_86_i, %tmp_i5

ST_33: tmp_i6_27 [1/1] 0.00ns
.loopexit.i_ifconv:113  %tmp_i6_27 = sext i32 %delay_bph_load to i64

ST_33: tmp_i7 [1/1] 0.00ns
.loopexit.i_ifconv:115  %tmp_i7 = sext i32 %delay_dhx_load to i64

ST_33: zl_2 [3/3] 8.43ns
.loopexit.i_ifconv:116  %zl_2 = mul nsw i64 %tmp_i6_27, %tmp_i7


 <State 34>: 8.43ns
ST_34: tmp_83_i [1/3] 8.43ns
.loopexit.i_ifconv:58  %tmp_83_i = mul nsw i64 %tmp_82_i, %tmp_i5

ST_34: tmp_39 [1/1] 0.00ns
.loopexit.i_ifconv:59  %tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %tmp_83_i, i32 63)

ST_34: tmp_87_i [1/3] 8.43ns
.loopexit.i_ifconv:67  %tmp_87_i = mul nsw i64 %tmp_86_i, %tmp_i5

ST_34: tmp_44 [1/1] 0.00ns
.loopexit.i_ifconv:68  %tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %tmp_87_i, i32 63)

ST_34: zl_2 [2/3] 8.43ns
.loopexit.i_ifconv:116  %zl_2 = mul nsw i64 %tmp_i6_27, %tmp_i7


 <State 35>: 8.43ns
ST_35: al1_load_1 [1/1] 0.00ns
.loopexit.i_ifconv:48  %al1_load_1 = load i32* @al1, align 4

ST_35: al2_load_1 [1/1] 0.00ns
.loopexit.i_ifconv:49  %al2_load_1 = load i32* @al2, align 4

ST_35: tmp_i4_cast1 [1/1] 0.00ns
.loopexit.i_ifconv:53  %tmp_i4_cast1 = sext i32 %al1_load_1 to i41

ST_35: wd2 [1/1] 0.00ns
.loopexit.i_ifconv:54  %wd2 = call i34 @_ssdm_op_BitConcatenate.i34.i32.i2(i32 %al1_load_1, i2 0)

ST_35: wd2_1_cast [1/1] 0.00ns
.loopexit.i_ifconv:55  %wd2_1_cast = sext i34 %wd2 to i35

ST_35: wd2_1 [1/1] 1.66ns
.loopexit.i_ifconv:60  %wd2_1 = sub i35 0, %wd2_1_cast

ST_35: tmp_17 [1/1] 0.00ns
.loopexit.i_ifconv:61  %tmp_17 = call i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32 %al1_load_1, i32 5, i32 31)

ST_35: tmp_18 [1/1] 0.00ns
.loopexit.i_ifconv:62  %tmp_18 = sext i27 %tmp_17 to i28

ST_35: tmp_42 [1/1] 0.00ns
.loopexit.i_ifconv:63  %tmp_42 = call i28 @_ssdm_op_PartSelect.i28.i35.i32.i32(i35 %wd2_1, i32 7, i32 34)

ST_35: tmp_43 [1/1] 0.71ns
.loopexit.i_ifconv:64  %tmp_43 = select i1 %tmp_39, i28 %tmp_18, i28 %tmp_42

ST_35: tmp_85_i_cast_cast [1/1] 0.00ns
.loopexit.i_ifconv:65  %tmp_85_i_cast_cast = sext i28 %tmp_43 to i29

ST_35: tmp_88_i_cast_cast [1/1] 0.71ns
.loopexit.i_ifconv:69  %tmp_88_i_cast_cast = select i1 %tmp_44, i29 -128, i29 128

ST_35: tmp_89_i_cast [1/1] 0.00ns
.loopexit.i_ifconv:70  %tmp_89_i_cast = sext i32 %al2_load_1 to i40

ST_35: p_shl_i1 [1/1] 0.00ns
.loopexit.i_ifconv:71  %p_shl_i1 = call i39 @_ssdm_op_BitConcatenate.i39.i32.i7(i32 %al2_load_1, i7 0)

ST_35: p_shl_i1_cast [1/1] 0.00ns
.loopexit.i_ifconv:72  %p_shl_i1_cast = zext i39 %p_shl_i1 to i40

ST_35: tmp_90_i [1/1] 1.72ns
.loopexit.i_ifconv:73  %tmp_90_i = sub i40 %p_shl_i1_cast, %tmp_89_i_cast

ST_35: tmp_91_i_cast_cast [1/1] 0.00ns
.loopexit.i_ifconv:74  %tmp_91_i_cast_cast = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp_90_i, i32 7, i32 38)

ST_35: tmp4 [1/1] 1.54ns
.loopexit.i_ifconv:75  %tmp4 = add i29 %tmp_88_i_cast_cast, %tmp_85_i_cast_cast

ST_35: tmp4_cast [1/1] 0.00ns
.loopexit.i_ifconv:76  %tmp4_cast = sext i29 %tmp4 to i32

ST_35: apl2 [1/1] 1.60ns
.loopexit.i_ifconv:77  %apl2 = add i32 %tmp_91_i_cast_cast, %tmp4_cast

ST_35: tmp_93_i [1/1] 1.50ns
.loopexit.i_ifconv:78  %tmp_93_i = icmp sgt i32 %apl2, 12288

ST_35: p_shl_i2 [1/1] 0.00ns
.loopexit.i_ifconv:85  %p_shl_i2 = call i40 @_ssdm_op_BitConcatenate.i40.i32.i8(i32 %al1_load_1, i8 0)

ST_35: p_shl_i2_cast [1/1] 0.00ns
.loopexit.i_ifconv:86  %p_shl_i2_cast = zext i40 %p_shl_i2 to i41

ST_35: tmp_i6 [1/1] 1.72ns
.loopexit.i_ifconv:87  %tmp_i6 = sub i41 %p_shl_i2_cast, %tmp_i4_cast1

ST_35: tmp_99_i [1/1] 0.00ns
.loopexit.i_ifconv:88  %tmp_99_i = call i32 @_ssdm_op_PartSelect.i32.i41.i32.i32(i41 %tmp_i6, i32 8, i32 39)

ST_35: apl_i_v_cast_cast [1/1] 0.71ns
.loopexit.i_ifconv:89  %apl_i_v_cast_cast = select i1 %tmp_39, i32 -192, i32 192

ST_35: apl1 [1/1] 1.60ns
.loopexit.i_ifconv:90  %apl1 = add i32 %apl_i_v_cast_cast, %tmp_99_i

ST_35: zl_2 [1/3] 8.43ns
.loopexit.i_ifconv:116  %zl_2 = mul nsw i64 %tmp_i6_27, %tmp_i7


 <State 36>: 8.70ns
ST_36: p_i1 [1/1] 0.71ns
.loopexit.i_ifconv:79  %p_i1 = select i1 %tmp_93_i, i32 12288, i32 %apl2

ST_36: tmp_45 [1/1] 0.00ns
.loopexit.i_ifconv:80  %tmp_45 = trunc i32 %p_i1 to i15

ST_36: tmp_94_i [1/1] 1.50ns
.loopexit.i_ifconv:81  %tmp_94_i = icmp slt i32 %p_i1, -12288

ST_36: apl2_assign [1/1] 0.71ns
.loopexit.i_ifconv:82  %apl2_assign = select i1 %tmp_94_i, i15 -12288, i15 %tmp_45

ST_36: apl2_assign_cast [1/1] 0.00ns
.loopexit.i_ifconv:83  %apl2_assign_cast = sext i15 %apl2_assign to i32

ST_36: stg_343 [1/1] 0.00ns
.loopexit.i_ifconv:84  store i32 %apl2_assign_cast, i32* @al2, align 4

ST_36: apl1_8 [1/1] 1.36ns
.loopexit.i_ifconv:91  %apl1_8 = sub i15 15360, %apl2_assign

ST_36: apl1_10_cast1 [1/1] 0.00ns
.loopexit.i_ifconv:92  %apl1_10_cast1 = zext i15 %apl1_8 to i16

ST_36: apl1_10_cast [1/1] 0.00ns
.loopexit.i_ifconv:93  %apl1_10_cast = zext i15 %apl1_8 to i32

ST_36: tmp_101_i [1/1] 1.50ns
.loopexit.i_ifconv:94  %tmp_101_i = icmp sgt i32 %apl1, %apl1_10_cast

ST_36: wd3_0_apl1_i [1/1] 0.71ns
.loopexit.i_ifconv:95  %wd3_0_apl1_i = select i1 %tmp_101_i, i32 %apl1_10_cast, i32 %apl1

ST_36: tmp_46 [1/1] 0.00ns
.loopexit.i_ifconv:96  %tmp_46 = trunc i32 %wd3_0_apl1_i to i16

ST_36: apl1_2 [1/1] 1.36ns
.loopexit.i_ifconv:97  %apl1_2 = sub i16 0, %apl1_10_cast1

ST_36: apl1_3_cast [1/1] 0.00ns
.loopexit.i_ifconv:98  %apl1_3_cast = sext i16 %apl1_2 to i32

ST_36: tmp_102_i [1/1] 1.50ns
.loopexit.i_ifconv:99  %tmp_102_i = icmp slt i32 %wd3_0_apl1_i, %apl1_3_cast

ST_36: apl1_3 [1/1] 0.71ns
.loopexit.i_ifconv:100  %apl1_3 = select i1 %tmp_102_i, i16 %apl1_2, i16 %tmp_46

ST_36: apl1_4_cast [1/1] 0.00ns
.loopexit.i_ifconv:101  %apl1_4_cast = sext i16 %apl1_3 to i32

ST_36: stg_355 [1/1] 0.00ns
.loopexit.i_ifconv:102  store i32 %apl1_4_cast, i32* @al1, align 4

ST_36: sl_load [1/1] 0.00ns
.loopexit.i_ifconv:103  %sl_load = load i32* @sl, align 4

ST_36: dlt_load [1/1] 0.00ns
.loopexit.i_ifconv:104  %dlt_load = load i32* @dlt, align 4

ST_36: tmp_20 [1/1] 1.60ns
.loopexit.i_ifconv:105  %tmp_20 = add nsw i32 %dlt_load, %sl_load

ST_36: stg_359 [1/1] 0.00ns
.loopexit.i_ifconv:106  store i32 %tmp_20, i32* @rlt, align 4

ST_36: rlt1_load [1/1] 0.00ns
.loopexit.i_ifconv:107  %rlt1_load = load i32* @rlt1, align 4

ST_36: stg_361 [1/1] 0.00ns
.loopexit.i_ifconv:108  store i32 %rlt1_load, i32* @rlt2, align 4

ST_36: stg_362 [1/1] 0.00ns
.loopexit.i_ifconv:109  store i32 %tmp_20, i32* @rlt1, align 4

ST_36: stg_363 [1/1] 0.89ns
.loopexit.i_ifconv:117  br label %11


 <State 37>: 8.43ns
ST_37: zl1_i1 [1/1] 0.00ns
:0  %zl1_i1 = phi i64 [ %zl_2, %.loopexit.i_ifconv ], [ %zl_3, %12 ]

ST_37: dlt_pn_rec_i1 [1/1] 0.00ns
:1  %dlt_pn_rec_i1 = phi i3 [ 0, %.loopexit.i_ifconv ], [ %p_01_rec_i1, %12 ]

ST_37: p_01_rec_i1 [1/1] 0.43ns
:2  %p_01_rec_i1 = add i3 %dlt_pn_rec_i1, 1

ST_37: p_01_rec_i1_cast [1/1] 0.00ns
:3  %p_01_rec_i1_cast = zext i3 %p_01_rec_i1 to i64

ST_37: delay_dhx_addr [1/1] 0.00ns
:4  %delay_dhx_addr = getelementptr [6 x i32]* @delay_dhx, i64 0, i64 %p_01_rec_i1_cast

ST_37: delay_bph_addr [1/1] 0.00ns
:5  %delay_bph_addr = getelementptr [6 x i32]* @delay_bph, i64 0, i64 %p_01_rec_i1_cast

ST_37: empty_28 [1/1] 0.00ns
:6  %empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_37: exitcond1 [1/1] 0.94ns
:7  %exitcond1 = icmp eq i3 %dlt_pn_rec_i1, -3

ST_37: stg_372 [1/1] 0.00ns
:8  br i1 %exitcond1, label %filtez.exit52, label %12

ST_37: delay_bph_load_1 [2/2] 2.39ns
:0  %delay_bph_load_1 = load i32* %delay_bph_addr, align 4

ST_37: delay_dhx_load_1 [2/2] 2.39ns
:2  %delay_dhx_load_1 = load i32* %delay_dhx_addr, align 4

ST_37: rh1_load_1 [1/1] 0.00ns
filtez.exit52:2  %rh1_load_1 = load i32* @rh1, align 4

ST_37: ah1_load [1/1] 0.00ns
filtez.exit52:3  %ah1_load = load i32* @ah1, align 4

ST_37: rh2_load [1/1] 0.00ns
filtez.exit52:4  %rh2_load = load i32* @rh2, align 4

ST_37: ah2_load [1/1] 0.00ns
filtez.exit52:5  %ah2_load = load i32* @ah2, align 4

ST_37: tmp_47 [1/1] 0.00ns
filtez.exit52:6  %tmp_47 = shl i32 %rh1_load_1, 1

ST_37: pl_3 [1/1] 0.00ns
filtez.exit52:7  %pl_3 = sext i32 %tmp_47 to i64

ST_37: tmp_i8 [1/1] 0.00ns
filtez.exit52:8  %tmp_i8 = sext i32 %ah1_load to i64

ST_37: pl_4 [3/3] 8.43ns
filtez.exit52:9  %pl_4 = mul nsw i64 %tmp_i8, %pl_3

ST_37: tmp_48 [1/1] 0.00ns
filtez.exit52:10  %tmp_48 = shl i32 %rh2_load, 1

ST_37: pl2_1 [1/1] 0.00ns
filtez.exit52:11  %pl2_1 = sext i32 %tmp_48 to i64

ST_37: tmp_63_i3 [1/1] 0.00ns
filtez.exit52:12  %tmp_63_i3 = sext i32 %ah2_load to i64

ST_37: tmp_64_i2 [3/3] 8.43ns
filtez.exit52:13  %tmp_64_i2 = mul nsw i64 %tmp_63_i3, %pl2_1


 <State 38>: 2.39ns
ST_38: delay_bph_load_1 [1/2] 2.39ns
:0  %delay_bph_load_1 = load i32* %delay_bph_addr, align 4

ST_38: delay_dhx_load_1 [1/2] 2.39ns
:2  %delay_dhx_load_1 = load i32* %delay_dhx_addr, align 4


 <State 39>: 8.43ns
ST_39: tmp_64_i3 [1/1] 0.00ns
:1  %tmp_64_i3 = sext i32 %delay_bph_load_1 to i64

ST_39: tmp_65_i3 [1/1] 0.00ns
:3  %tmp_65_i3 = sext i32 %delay_dhx_load_1 to i64

ST_39: tmp_66_i3 [3/3] 8.43ns
:4  %tmp_66_i3 = mul nsw i64 %tmp_65_i3, %tmp_64_i3


 <State 40>: 8.43ns
ST_40: tmp_66_i3 [2/3] 8.43ns
:4  %tmp_66_i3 = mul nsw i64 %tmp_65_i3, %tmp_64_i3


 <State 41>: 8.43ns
ST_41: tmp_66_i3 [1/3] 8.43ns
:4  %tmp_66_i3 = mul nsw i64 %tmp_65_i3, %tmp_64_i3


 <State 42>: 2.08ns
ST_42: zl_3 [1/1] 2.08ns
:5  %zl_3 = add nsw i64 %tmp_66_i3, %zl1_i1

ST_42: stg_395 [1/1] 0.00ns
:6  br label %11


 <State 43>: 8.43ns
ST_43: pl_4 [2/3] 8.43ns
filtez.exit52:9  %pl_4 = mul nsw i64 %tmp_i8, %pl_3

ST_43: tmp_64_i2 [2/3] 8.43ns
filtez.exit52:13  %tmp_64_i2 = mul nsw i64 %tmp_63_i3, %pl2_1


 <State 44>: 8.43ns
ST_44: pl_4 [1/3] 8.43ns
filtez.exit52:9  %pl_4 = mul nsw i64 %tmp_i8, %pl_3

ST_44: tmp_64_i2 [1/3] 8.43ns
filtez.exit52:13  %tmp_64_i2 = mul nsw i64 %tmp_63_i3, %pl2_1


 <State 45>: 7.59ns
ST_45: tmp_63_i2 [1/1] 0.00ns
filtez.exit52:0  %tmp_63_i2 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %zl1_i1, i32 14, i32 45)

ST_45: stg_401 [1/1] 0.00ns
filtez.exit52:1  store i32 %tmp_63_i2, i32* @szh, align 4

ST_45: pl_5 [1/1] 2.08ns
filtez.exit52:14  %pl_5 = add nsw i64 %tmp_64_i2, %pl_4

ST_45: tmp_66_i2 [1/1] 0.00ns
filtez.exit52:15  %tmp_66_i2 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %pl_5, i32 15, i32 46)

ST_45: stg_404 [1/1] 0.00ns
filtez.exit52:16  store i32 %tmp_66_i2, i32* @sph, align 4

ST_45: tmp_21 [1/1] 1.60ns
filtez.exit52:17  %tmp_21 = add nsw i32 %tmp_66_i2, %tmp_63_i2

ST_45: stg_406 [1/1] 0.00ns
filtez.exit52:18  store i32 %tmp_21, i32* @sh, align 4

ST_45: xh_load [1/1] 0.00ns
filtez.exit52:19  %xh_load = load i32* @xh, align 4

ST_45: n_assign_2 [1/1] 1.60ns
filtez.exit52:20  %n_assign_2 = sub nsw i32 %xh_load, %tmp_21

ST_45: stg_409 [1/1] 0.00ns
filtez.exit52:21  store i32 %n_assign_2, i32* @eh, align 4

ST_45: tmp_49 [1/1] 0.00ns
filtez.exit52:22  %tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %n_assign_2, i32 31)

ST_45: tmp_33_cast_cast [1/1] 0.71ns
filtez.exit52:24  %tmp_33_cast_cast = select i1 %tmp_49, i32 1, i32 3

ST_45: stg_412 [1/1] 0.89ns
filtez.exit52:25  store i32 %tmp_33_cast_cast, i32* @ih, align 4

ST_45: deth_load [1/1] 0.00ns
filtez.exit52:26  %deth_load = load i32* @deth, align 4

ST_45: tmp_34_cast [1/1] 0.00ns
filtez.exit52:28  %tmp_34_cast = sext i32 %deth_load to i42

ST_45: tmp_25 [1/1] 6.87ns
filtez.exit52:29  %tmp_25 = mul i42 564, %tmp_34_cast

ST_45: tmp_27 [1/1] 0.00ns
filtez.exit52:30  %tmp_27 = call i30 @_ssdm_op_PartSelect.i30.i42.i32.i32(i42 %tmp_25, i32 12, i32 41)

ST_45: tmp_50 [1/1] 0.00ns
filtez.exit52:32  %tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %n_assign_2, i32 31)

ST_45: m_1 [1/1] 1.60ns
filtez.exit52:33  %m_1 = sub nsw i32 0, %n_assign_2

ST_45: n_assign_3 [1/1] 0.71ns
filtez.exit52:34  %n_assign_3 = select i1 %tmp_50, i32 %m_1, i32 %n_assign_2


 <State 46>: 3.28ns
ST_46: tmp_24 [1/1] 0.71ns
filtez.exit52:23  %tmp_24 = select i1 %tmp_49, i2 1, i2 -1

ST_46: tmp_34_cast1 [1/1] 0.00ns
filtez.exit52:27  %tmp_34_cast1 = sext i32 %deth_load to i47

ST_46: decis [1/1] 0.00ns
filtez.exit52:31  %decis = sext i30 %tmp_27 to i32

ST_46: tmp_28 [1/1] 1.50ns
filtez.exit52:35  %tmp_28 = icmp sgt i32 %n_assign_3, %decis

ST_46: stg_424 [1/1] 0.89ns
filtez.exit52:36  br i1 %tmp_28, label %13, label %._crit_edge_ifconv

ST_46: tmp_29 [1/1] 0.71ns
:0  %tmp_29 = select i1 %tmp_49, i2 0, i2 -2

ST_46: tmp_38_cast_cast [1/1] 0.71ns
:1  %tmp_38_cast_cast = select i1 %tmp_49, i32 0, i32 2

ST_46: stg_427 [1/1] 0.89ns
:2  store i32 %tmp_38_cast_cast, i32* @ih, align 4

ST_46: stg_428 [1/1] 0.89ns
:3  br label %._crit_edge_ifconv

ST_46: ih_assign [1/1] 0.00ns
._crit_edge_ifconv:0  %ih_assign = phi i2 [ %tmp_29, %13 ], [ %tmp_24, %filtez.exit52 ]

ST_46: tmp_30 [1/1] 0.89ns
._crit_edge_ifconv:1  %tmp_30 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 -7408, i32 -1616, i32 7408, i32 1616, i2 %ih_assign) nounwind


 <State 47>: 8.61ns
ST_47: tmp_40_cast [1/1] 0.00ns
._crit_edge_ifconv:2  %tmp_40_cast = sext i32 %tmp_30 to i47

ST_47: tmp_31 [3/3] 8.43ns
._crit_edge_ifconv:3  %tmp_31 = mul i47 %tmp_40_cast, %tmp_34_cast1

ST_47: nbh_load [1/1] 0.00ns
._crit_edge_ifconv:6  %nbh_load = load i32* @nbh, align 4

ST_47: tmp_i9_cast [1/1] 0.00ns
._crit_edge_ifconv:7  %tmp_i9_cast = sext i32 %nbh_load to i40

ST_47: p_shl_i3 [1/1] 0.00ns
._crit_edge_ifconv:8  %p_shl_i3 = call i39 @_ssdm_op_BitConcatenate.i39.i32.i7(i32 %nbh_load, i7 0)

ST_47: p_shl_i3_cast [1/1] 0.00ns
._crit_edge_ifconv:9  %p_shl_i3_cast = zext i39 %p_shl_i3 to i40

ST_47: tmp_i9 [1/1] 1.72ns
._crit_edge_ifconv:10  %tmp_i9 = sub i40 %p_shl_i3_cast, %tmp_i9_cast

ST_47: wd [1/1] 0.00ns
._crit_edge_ifconv:11  %wd = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp_i9, i32 7, i32 38)

ST_47: tmp_34 [1/1] 0.89ns
._crit_edge_ifconv:12  %tmp_34 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 798, i32 -214, i32 798, i32 -214, i2 %ih_assign) nounwind

ST_47: nbh_assign_1 [1/1] 1.60ns
._crit_edge_ifconv:13  %nbh_assign_1 = add nsw i32 %wd, %tmp_34

ST_47: tmp_51 [1/1] 0.00ns
._crit_edge_ifconv:14  %tmp_51 = trunc i32 %nbh_assign_1 to i31

ST_47: tmp_52 [1/1] 0.00ns
._crit_edge_ifconv:15  %tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %nbh_assign_1, i32 31)

ST_47: p_i2 [1/1] 0.71ns
._crit_edge_ifconv:16  %p_i2 = select i1 %tmp_52, i31 0, i31 %tmp_51

ST_47: tmp_53 [1/1] 0.00ns
._crit_edge_ifconv:17  %tmp_53 = trunc i31 %p_i2 to i15

ST_47: tmp_105_i [1/1] 1.48ns
._crit_edge_ifconv:18  %tmp_105_i = icmp ugt i31 %p_i2, 22528

ST_47: nbl_assign_3 [1/1] 0.71ns
._crit_edge_ifconv:19  %nbl_assign_3 = select i1 %tmp_105_i, i15 -10240, i15 %tmp_53

ST_47: nbl_assign_3_cast [1/1] 0.00ns
._crit_edge_ifconv:20  %nbl_assign_3_cast = zext i15 %nbl_assign_3 to i32

ST_47: stg_448 [1/1] 0.00ns
._crit_edge_ifconv:21  store i32 %nbl_assign_3_cast, i32* @nbh, align 4

ST_47: wd1_1 [1/1] 0.00ns
._crit_edge_ifconv:22  %wd1_1 = call i5 @_ssdm_op_PartSelect.i5.i15.i32.i32(i15 %nbl_assign_3, i32 6, i32 10)

ST_47: wd2_4_cast [1/1] 0.00ns
._crit_edge_ifconv:23  %wd2_4_cast = call i4 @_ssdm_op_PartSelect.i4.i15.i32.i32(i15 %nbl_assign_3, i32 11, i32 14)

ST_47: tmp_i2 [1/1] 0.00ns
._crit_edge_ifconv:24  %tmp_i2 = zext i5 %wd1_1 to i64

ST_47: ilb_table_addr_1 [1/1] 0.00ns
._crit_edge_ifconv:25  %ilb_table_addr_1 = getelementptr [32 x i12]* @ilb_table, i64 0, i64 %tmp_i2

ST_47: ilb_table_load_1 [2/2] 2.39ns
._crit_edge_ifconv:26  %ilb_table_load_1 = load i12* %ilb_table_addr_1, align 2


 <State 48>: 8.43ns
ST_48: tmp_31 [2/3] 8.43ns
._crit_edge_ifconv:3  %tmp_31 = mul i47 %tmp_40_cast, %tmp_34_cast1

ST_48: ilb_table_load_1 [1/2] 2.39ns
._crit_edge_ifconv:26  %ilb_table_load_1 = load i12* %ilb_table_addr_1, align 2

ST_48: tmp_80_i1 [1/1] 0.43ns
._crit_edge_ifconv:27  %tmp_80_i1 = sub i4 -5, %wd2_4_cast

ST_48: tmp_80_i1_cast_cast [1/1] 0.00ns
._crit_edge_ifconv:28  %tmp_80_i1_cast_cast = zext i4 %tmp_80_i1 to i12

ST_48: wd3_2 [1/1] 1.97ns
._crit_edge_ifconv:29  %wd3_2 = lshr i12 %ilb_table_load_1, %tmp_80_i1_cast_cast

ST_48: tmp_81_i1 [1/1] 0.00ns
._crit_edge_ifconv:30  %tmp_81_i1 = call i15 @_ssdm_op_BitConcatenate.i15.i12.i3(i12 %wd3_2, i3 0)

ST_48: tmp_81_i1_cast [1/1] 0.00ns
._crit_edge_ifconv:31  %tmp_81_i1_cast = zext i15 %tmp_81_i1 to i32

ST_48: stg_461 [1/1] 0.00ns
._crit_edge_ifconv:32  store i32 %tmp_81_i1_cast, i32* @deth, align 4


 <State 49>: 8.43ns
ST_49: tmp_31 [1/3] 8.43ns
._crit_edge_ifconv:3  %tmp_31 = mul i47 %tmp_40_cast, %tmp_34_cast1

ST_49: tmp_33 [1/1] 0.00ns
._crit_edge_ifconv:4  %tmp_33 = call i32 @_ssdm_op_PartSelect.i32.i47.i32.i32(i47 %tmp_31, i32 15, i32 46)

ST_49: stg_464 [1/1] 0.00ns
._crit_edge_ifconv:5  store i32 %tmp_33, i32* @dh, align 4


 <State 50>: 2.98ns
ST_50: tmp_35 [1/1] 1.60ns
._crit_edge_ifconv:33  %tmp_35 = add nsw i32 %tmp_63_i2, %tmp_33

ST_50: stg_466 [1/1] 0.00ns
._crit_edge_ifconv:34  store i32 %tmp_35, i32* @ph, align 4

ST_50: stg_467 [2/2] 2.98ns
._crit_edge_ifconv:35  call fastcc void @encode_upzero(i32 %tmp_33, [6 x i32]* @delay_dhx, [6 x i32]* @delay_bph) nounwind


 <State 51>: 8.43ns
ST_51: stg_468 [1/2] 0.00ns
._crit_edge_ifconv:35  call fastcc void @encode_upzero(i32 %tmp_33, [6 x i32]* @delay_dhx, [6 x i32]* @delay_bph) nounwind

ST_51: ph_load [1/1] 0.00ns
._crit_edge_ifconv:38  %ph_load = load i32* @ph, align 4

ST_51: ph1_load [1/1] 0.00ns
._crit_edge_ifconv:39  %ph1_load = load i32* @ph1, align 4

ST_51: ph2_load [1/1] 0.00ns
._crit_edge_ifconv:40  %ph2_load = load i32* @ph2, align 4

ST_51: tmp_i10 [1/1] 0.00ns
._crit_edge_ifconv:44  %tmp_i10 = sext i32 %ph_load to i64

ST_51: tmp_82_i1 [1/1] 0.00ns
._crit_edge_ifconv:45  %tmp_82_i1 = sext i32 %ph1_load to i64

ST_51: tmp_83_i1 [3/3] 8.43ns
._crit_edge_ifconv:46  %tmp_83_i1 = mul nsw i64 %tmp_82_i1, %tmp_i10

ST_51: tmp_86_i1 [1/1] 0.00ns
._crit_edge_ifconv:54  %tmp_86_i1 = sext i32 %ph2_load to i64

ST_51: tmp_87_i1 [3/3] 8.43ns
._crit_edge_ifconv:55  %tmp_87_i1 = mul nsw i64 %tmp_86_i1, %tmp_i10

ST_51: stg_477 [1/1] 0.00ns
._crit_edge_ifconv:98  store i32 %ph1_load, i32* @ph2, align 4

ST_51: stg_478 [1/1] 0.00ns
._crit_edge_ifconv:99  store i32 %ph_load, i32* @ph1, align 4


 <State 52>: 8.43ns
ST_52: tmp_83_i1 [2/3] 8.43ns
._crit_edge_ifconv:46  %tmp_83_i1 = mul nsw i64 %tmp_82_i1, %tmp_i10

ST_52: tmp_87_i1 [2/3] 8.43ns
._crit_edge_ifconv:55  %tmp_87_i1 = mul nsw i64 %tmp_86_i1, %tmp_i10


 <State 53>: 8.43ns
ST_53: tmp_83_i1 [1/3] 8.43ns
._crit_edge_ifconv:46  %tmp_83_i1 = mul nsw i64 %tmp_82_i1, %tmp_i10

ST_53: tmp_54 [1/1] 0.00ns
._crit_edge_ifconv:47  %tmp_54 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %tmp_83_i1, i32 63)

ST_53: tmp_87_i1 [1/3] 8.43ns
._crit_edge_ifconv:55  %tmp_87_i1 = mul nsw i64 %tmp_86_i1, %tmp_i10

ST_53: tmp_57 [1/1] 0.00ns
._crit_edge_ifconv:56  %tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %tmp_87_i1, i32 63)


 <State 54>: 7.01ns
ST_54: ah1_load_1 [1/1] 0.00ns
._crit_edge_ifconv:36  %ah1_load_1 = load i32* @ah1, align 4

ST_54: ah2_load_1 [1/1] 0.00ns
._crit_edge_ifconv:37  %ah2_load_1 = load i32* @ah2, align 4

ST_54: tmp_i11_cast8 [1/1] 0.00ns
._crit_edge_ifconv:41  %tmp_i11_cast8 = sext i32 %ah1_load_1 to i41

ST_54: wd2_2 [1/1] 0.00ns
._crit_edge_ifconv:42  %wd2_2 = call i34 @_ssdm_op_BitConcatenate.i34.i32.i2(i32 %ah1_load_1, i2 0)

ST_54: wd2_5_cast [1/1] 0.00ns
._crit_edge_ifconv:43  %wd2_5_cast = sext i34 %wd2_2 to i35

ST_54: wd2_3 [1/1] 1.66ns
._crit_edge_ifconv:48  %wd2_3 = sub i35 0, %wd2_5_cast

ST_54: tmp_37 [1/1] 0.00ns
._crit_edge_ifconv:49  %tmp_37 = call i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32 %ah1_load_1, i32 5, i32 31)

ST_54: tmp_41 [1/1] 0.00ns
._crit_edge_ifconv:50  %tmp_41 = sext i27 %tmp_37 to i28

ST_54: tmp_55 [1/1] 0.00ns
._crit_edge_ifconv:51  %tmp_55 = call i28 @_ssdm_op_PartSelect.i28.i35.i32.i32(i35 %wd2_3, i32 7, i32 34)

ST_54: tmp_56 [1/1] 0.71ns
._crit_edge_ifconv:52  %tmp_56 = select i1 %tmp_54, i28 %tmp_41, i28 %tmp_55

ST_54: tmp_85_i1_cast_cast [1/1] 0.00ns
._crit_edge_ifconv:53  %tmp_85_i1_cast_cast = sext i28 %tmp_56 to i29

ST_54: tmp_88_i1_cast_cast [1/1] 0.71ns
._crit_edge_ifconv:57  %tmp_88_i1_cast_cast = select i1 %tmp_57, i29 -128, i29 128

ST_54: tmp_89_i1_cast7 [1/1] 0.00ns
._crit_edge_ifconv:58  %tmp_89_i1_cast7 = sext i32 %ah2_load_1 to i40

ST_54: p_shl_i4 [1/1] 0.00ns
._crit_edge_ifconv:59  %p_shl_i4 = call i39 @_ssdm_op_BitConcatenate.i39.i32.i7(i32 %ah2_load_1, i7 0)

ST_54: p_shl_i4_cast [1/1] 0.00ns
._crit_edge_ifconv:60  %p_shl_i4_cast = zext i39 %p_shl_i4 to i40

ST_54: tmp_90_i1 [1/1] 1.72ns
._crit_edge_ifconv:61  %tmp_90_i1 = sub i40 %p_shl_i4_cast, %tmp_89_i1_cast7

ST_54: tmp_91_i1_cast_cast [1/1] 0.00ns
._crit_edge_ifconv:62  %tmp_91_i1_cast_cast = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp_90_i1, i32 7, i32 38)

ST_54: tmp5 [1/1] 1.54ns
._crit_edge_ifconv:63  %tmp5 = add i29 %tmp_88_i1_cast_cast, %tmp_85_i1_cast_cast

ST_54: tmp5_cast [1/1] 0.00ns
._crit_edge_ifconv:64  %tmp5_cast = sext i29 %tmp5 to i32

ST_54: apl2_1 [1/1] 1.60ns
._crit_edge_ifconv:65  %apl2_1 = add i32 %tmp_91_i1_cast_cast, %tmp5_cast

ST_54: tmp_93_i1 [1/1] 1.50ns
._crit_edge_ifconv:66  %tmp_93_i1 = icmp sgt i32 %apl2_1, 12288

ST_54: p_shl_i5 [1/1] 0.00ns
._crit_edge_ifconv:73  %p_shl_i5 = call i40 @_ssdm_op_BitConcatenate.i40.i32.i8(i32 %ah1_load_1, i8 0)

ST_54: p_shl_i5_cast [1/1] 0.00ns
._crit_edge_ifconv:74  %p_shl_i5_cast = zext i40 %p_shl_i5 to i41

ST_54: tmp_i11 [1/1] 1.72ns
._crit_edge_ifconv:75  %tmp_i11 = sub i41 %p_shl_i5_cast, %tmp_i11_cast8

ST_54: tmp_99_i1 [1/1] 0.00ns
._crit_edge_ifconv:76  %tmp_99_i1 = call i32 @_ssdm_op_PartSelect.i32.i41.i32.i32(i41 %tmp_i11, i32 8, i32 39)

ST_54: apl_i1_v_cast_cast [1/1] 0.71ns
._crit_edge_ifconv:77  %apl_i1_v_cast_cast = select i1 %tmp_54, i32 -192, i32 192

ST_54: apl1_4 [1/1] 1.60ns
._crit_edge_ifconv:78  %apl1_4 = add i32 %apl_i1_v_cast_cast, %tmp_99_i1


 <State 55>: 8.70ns
ST_55: p_i3 [1/1] 0.71ns
._crit_edge_ifconv:67  %p_i3 = select i1 %tmp_93_i1, i32 12288, i32 %apl2_1

ST_55: tmp_58 [1/1] 0.00ns
._crit_edge_ifconv:68  %tmp_58 = trunc i32 %p_i3 to i15

ST_55: tmp_94_i1 [1/1] 1.50ns
._crit_edge_ifconv:69  %tmp_94_i1 = icmp slt i32 %p_i3, -12288

ST_55: apl2_assign_1 [1/1] 0.71ns
._crit_edge_ifconv:70  %apl2_assign_1 = select i1 %tmp_94_i1, i15 -12288, i15 %tmp_58

ST_55: apl2_assign_1_cast [1/1] 0.00ns
._crit_edge_ifconv:71  %apl2_assign_1_cast = sext i15 %apl2_assign_1 to i32

ST_55: stg_517 [1/1] 0.00ns
._crit_edge_ifconv:72  store i32 %apl2_assign_1_cast, i32* @ah2, align 4

ST_55: apl1_9 [1/1] 1.36ns
._crit_edge_ifconv:79  %apl1_9 = sub i15 15360, %apl2_assign_1

ST_55: apl1_11_cast6 [1/1] 0.00ns
._crit_edge_ifconv:80  %apl1_11_cast6 = zext i15 %apl1_9 to i16

ST_55: apl1_11_cast [1/1] 0.00ns
._crit_edge_ifconv:81  %apl1_11_cast = zext i15 %apl1_9 to i32

ST_55: tmp_101_i1 [1/1] 1.50ns
._crit_edge_ifconv:82  %tmp_101_i1 = icmp sgt i32 %apl1_4, %apl1_11_cast

ST_55: wd3_0_apl1_i1 [1/1] 0.71ns
._crit_edge_ifconv:83  %wd3_0_apl1_i1 = select i1 %tmp_101_i1, i32 %apl1_11_cast, i32 %apl1_4

ST_55: tmp_59 [1/1] 0.00ns
._crit_edge_ifconv:84  %tmp_59 = trunc i32 %wd3_0_apl1_i1 to i16

ST_55: apl1_6 [1/1] 1.36ns
._crit_edge_ifconv:85  %apl1_6 = sub i16 0, %apl1_11_cast6

ST_55: apl1_8_cast [1/1] 0.00ns
._crit_edge_ifconv:86  %apl1_8_cast = sext i16 %apl1_6 to i32

ST_55: tmp_102_i1 [1/1] 1.50ns
._crit_edge_ifconv:87  %tmp_102_i1 = icmp slt i32 %wd3_0_apl1_i1, %apl1_8_cast

ST_55: apl1_7 [1/1] 0.71ns
._crit_edge_ifconv:88  %apl1_7 = select i1 %tmp_102_i1, i16 %apl1_6, i16 %tmp_59

ST_55: apl1_9_cast [1/1] 0.00ns
._crit_edge_ifconv:89  %apl1_9_cast = sext i16 %apl1_7 to i32

ST_55: stg_529 [1/1] 0.00ns
._crit_edge_ifconv:90  store i32 %apl1_9_cast, i32* @ah1, align 4

ST_55: sh_load [1/1] 0.00ns
._crit_edge_ifconv:91  %sh_load = load i32* @sh, align 4

ST_55: dh_load [1/1] 0.00ns
._crit_edge_ifconv:92  %dh_load = load i32* @dh, align 4

ST_55: tmp_38 [1/1] 1.60ns
._crit_edge_ifconv:93  %tmp_38 = add nsw i32 %sh_load, %dh_load

ST_55: stg_533 [1/1] 0.00ns
._crit_edge_ifconv:94  store i32 %tmp_38, i32* @yh, align 4

ST_55: rh1_load [1/1] 0.00ns
._crit_edge_ifconv:95  %rh1_load = load i32* @rh1, align 4

ST_55: stg_535 [1/1] 0.00ns
._crit_edge_ifconv:96  store i32 %rh1_load, i32* @rh2, align 4

ST_55: stg_536 [1/1] 0.00ns
._crit_edge_ifconv:97  store i32 %tmp_38, i32* @rh1, align 4

ST_55: il_load [1/1] 0.00ns
._crit_edge_ifconv:100  %il_load = load i32* @il, align 4

ST_55: ih_load [1/1] 0.00ns
._crit_edge_ifconv:101  %ih_load = load i32* @ih, align 4

ST_55: tmp_60 [1/1] 0.00ns
._crit_edge_ifconv:102  %tmp_60 = shl i32 %ih_load, 6

ST_55: tmp_40 [1/1] 0.71ns
._crit_edge_ifconv:103  %tmp_40 = or i32 %il_load, %tmp_60

ST_55: stg_541 [1/1] 0.00ns
._crit_edge_ifconv:104  ret i32 %tmp_40



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

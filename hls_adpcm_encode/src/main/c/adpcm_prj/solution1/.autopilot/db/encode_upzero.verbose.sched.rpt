

================================================================
== Vivado HLS Report for 'encode_upzero'
================================================================
* Date:           Sun Nov  5 12:40:15 2017

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        adpcm_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.43|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   18|   42|   18|   42|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   12|   12|         2|          -|          -|     6|    no    |
        |- Loop 2  |   36|   36|         6|          -|          -|     6|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|Expression       |        -|      -|       -|       -|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|       -|
|Register         |        -|      -|       -|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+
|Available        |      650|    600|  202800|  101400|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp & !exitcond)
	9  / (!tmp & exitcond) | (tmp & exitcond1)
	8  / (tmp & !exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	2  / true
8 --> 
	2  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
* FSM state operations: 

 <State 1>: 2.98ns
ST_1: dlt_read [1/1] 0.59ns
:0  %dlt_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dlt)

ST_1: dlti_addr [1/1] 0.00ns
:1  %dlti_addr = getelementptr [6 x i32]* %dlti, i64 0, i64 0

ST_1: tmp [1/1] 1.50ns
:2  %tmp = icmp eq i32 %dlt_read, 0

ST_1: stg_17 [1/1] 0.89ns
:3  br i1 %tmp, label %.preheader2, label %.preheader.preheader

ST_1: tmp_s [1/1] 0.00ns
.preheader.preheader:0  %tmp_s = sext i32 %dlt_read to i64

ST_1: stg_19 [1/1] 0.89ns
.preheader.preheader:1  br label %.preheader


 <State 2>: 2.39ns
ST_2: i_1 [1/1] 0.00ns
.preheader:0  %i_1 = phi i3 [ %i_5, %2 ], [ 0, %.preheader.preheader ]

ST_2: exitcond [1/1] 0.94ns
.preheader:1  %exitcond = icmp eq i3 %i_1, -2

ST_2: empty_29 [1/1] 0.00ns
.preheader:2  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_2: i_5 [1/1] 0.43ns
.preheader:3  %i_5 = add i3 %i_1, 1

ST_2: stg_24 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %.loopexit, label %2

ST_2: tmp_44 [1/1] 0.00ns
:0  %tmp_44 = zext i3 %i_1 to i64

ST_2: dlti_addr_6 [1/1] 0.00ns
:1  %dlti_addr_6 = getelementptr [6 x i32]* %dlti, i64 0, i64 %tmp_44

ST_2: dlti_load [2/2] 2.39ns
:2  %dlti_load = load i32* %dlti_addr_6, align 4

ST_2: bli_addr_1 [1/1] 0.00ns
:7  %bli_addr_1 = getelementptr [6 x i32]* %bli, i64 0, i64 %tmp_44

ST_2: i [1/1] 0.00ns
.preheader2:0  %i = phi i3 [ %i_4, %1 ], [ 0, %0 ]

ST_2: exitcond1 [1/1] 0.94ns
.preheader2:1  %exitcond1 = icmp eq i3 %i, -2

ST_2: empty [1/1] 0.00ns
.preheader2:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_2: i_4 [1/1] 0.43ns
.preheader2:3  %i_4 = add i3 %i, 1

ST_2: stg_33 [1/1] 0.00ns
.preheader2:4  br i1 %exitcond1, label %.loopexit, label %1

ST_2: tmp_41 [1/1] 0.00ns
:0  %tmp_41 = zext i3 %i to i64

ST_2: bli_addr [1/1] 0.00ns
:1  %bli_addr = getelementptr [6 x i32]* %bli, i64 0, i64 %tmp_41

ST_2: bli_load [2/2] 2.39ns
:2  %bli_load = load i32* %bli_addr, align 4

ST_2: dlti_addr_1 [1/1] 0.00ns
.loopexit:0  %dlti_addr_1 = getelementptr [6 x i32]* %dlti, i64 0, i64 4

ST_2: dlti_load_1 [2/2] 2.39ns
.loopexit:1  %dlti_load_1 = load i32* %dlti_addr_1, align 4

ST_2: dlti_addr_3 [1/1] 0.00ns
.loopexit:4  %dlti_addr_3 = getelementptr [6 x i32]* %dlti, i64 0, i64 3

ST_2: dlti_load_2 [2/2] 2.39ns
.loopexit:5  %dlti_load_2 = load i32* %dlti_addr_3, align 4


 <State 3>: 2.39ns
ST_3: dlti_load [1/2] 2.39ns
:2  %dlti_load = load i32* %dlti_addr_6, align 4


 <State 4>: 8.43ns
ST_4: tmp_45 [1/1] 0.00ns
:3  %tmp_45 = sext i32 %dlti_load to i64

ST_4: tmp_46 [3/3] 8.43ns
:4  %tmp_46 = mul nsw i64 %tmp_s, %tmp_45


 <State 5>: 8.43ns
ST_5: tmp_46 [2/3] 8.43ns
:4  %tmp_46 = mul nsw i64 %tmp_s, %tmp_45


 <State 6>: 8.43ns
ST_6: tmp_46 [1/3] 8.43ns
:4  %tmp_46 = mul nsw i64 %tmp_s, %tmp_45

ST_6: tmp_61 [1/1] 0.00ns
:5  %tmp_61 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %tmp_46, i32 63)

ST_6: bli_load_1 [2/2] 2.39ns
:8  %bli_load_1 = load i32* %bli_addr_1, align 4


 <State 7>: 8.10ns
ST_7: wd2_cast_cast [1/1] 0.71ns
:6  %wd2_cast_cast = select i1 %tmp_61, i32 -128, i32 128

ST_7: bli_load_1 [1/2] 2.39ns
:8  %bli_load_1 = load i32* %bli_addr_1, align 4

ST_7: tmp_57_cast [1/1] 0.00ns
:9  %tmp_57_cast = sext i32 %bli_load_1 to i40

ST_7: p_shl1 [1/1] 0.00ns
:10  %p_shl1 = call i40 @_ssdm_op_BitConcatenate.i40.i32.i8(i32 %bli_load_1, i8 0)

ST_7: tmp_47 [1/1] 1.72ns
:11  %tmp_47 = sub i40 %p_shl1, %tmp_57_cast

ST_7: wd3 [1/1] 0.00ns
:12  %wd3 = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp_47, i32 8, i32 39)

ST_7: tmp_48 [1/1] 1.60ns
:13  %tmp_48 = add nsw i32 %wd2_cast_cast, %wd3

ST_7: stg_55 [1/1] 2.39ns
:14  store i32 %tmp_48, i32* %bli_addr_1, align 4

ST_7: stg_56 [1/1] 0.00ns
:15  br label %.preheader


 <State 8>: 6.50ns
ST_8: bli_load [1/2] 2.39ns
:2  %bli_load = load i32* %bli_addr, align 4

ST_8: tmp_49_cast [1/1] 0.00ns
:3  %tmp_49_cast = sext i32 %bli_load to i40

ST_8: p_shl [1/1] 0.00ns
:4  %p_shl = call i40 @_ssdm_op_BitConcatenate.i40.i32.i8(i32 %bli_load, i8 0)

ST_8: tmp_42 [1/1] 1.72ns
:5  %tmp_42 = sub i40 %p_shl, %tmp_49_cast

ST_8: tmp_43 [1/1] 0.00ns
:6  %tmp_43 = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp_42, i32 8, i32 39)

ST_8: stg_62 [1/1] 2.39ns
:7  store i32 %tmp_43, i32* %bli_addr, align 4

ST_8: stg_63 [1/1] 0.00ns
:8  br label %.preheader2


 <State 9>: 2.39ns
ST_9: dlti_load_1 [1/2] 2.39ns
.loopexit:1  %dlti_load_1 = load i32* %dlti_addr_1, align 4

ST_9: dlti_load_2 [1/2] 2.39ns
.loopexit:5  %dlti_load_2 = load i32* %dlti_addr_3, align 4

ST_9: dlti_addr_4 [1/1] 0.00ns
.loopexit:7  %dlti_addr_4 = getelementptr [6 x i32]* %dlti, i64 0, i64 2

ST_9: dlti_load_3 [2/2] 2.39ns
.loopexit:8  %dlti_load_3 = load i32* %dlti_addr_4, align 4

ST_9: dlti_addr_5 [1/1] 0.00ns
.loopexit:10  %dlti_addr_5 = getelementptr [6 x i32]* %dlti, i64 0, i64 1

ST_9: dlti_load_4 [2/2] 2.39ns
.loopexit:11  %dlti_load_4 = load i32* %dlti_addr_5, align 4


 <State 10>: 2.39ns
ST_10: dlti_addr_2 [1/1] 0.00ns
.loopexit:2  %dlti_addr_2 = getelementptr [6 x i32]* %dlti, i64 0, i64 5

ST_10: stg_71 [1/1] 2.39ns
.loopexit:3  store i32 %dlti_load_1, i32* %dlti_addr_2, align 4

ST_10: dlti_load_3 [1/2] 2.39ns
.loopexit:8  %dlti_load_3 = load i32* %dlti_addr_4, align 4

ST_10: dlti_load_4 [1/2] 2.39ns
.loopexit:11  %dlti_load_4 = load i32* %dlti_addr_5, align 4

ST_10: dlti_load_5 [2/2] 2.39ns
.loopexit:13  %dlti_load_5 = load i32* %dlti_addr, align 4


 <State 11>: 2.39ns
ST_11: stg_75 [1/1] 2.39ns
.loopexit:6  store i32 %dlti_load_2, i32* %dlti_addr_1, align 4

ST_11: stg_76 [1/1] 2.39ns
.loopexit:9  store i32 %dlti_load_3, i32* %dlti_addr_3, align 4

ST_11: dlti_load_5 [1/2] 2.39ns
.loopexit:13  %dlti_load_5 = load i32* %dlti_addr, align 4


 <State 12>: 2.39ns
ST_12: stg_78 [1/1] 2.39ns
.loopexit:12  store i32 %dlti_load_4, i32* %dlti_addr_4, align 4

ST_12: stg_79 [1/1] 2.39ns
.loopexit:14  store i32 %dlti_load_5, i32* %dlti_addr_5, align 4


 <State 13>: 2.39ns
ST_13: stg_80 [1/1] 2.39ns
.loopexit:15  store i32 %dlt_read, i32* %dlti_addr, align 4

ST_13: stg_81 [1/1] 0.00ns
.loopexit:16  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

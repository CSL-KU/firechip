// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="encode,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.710000,HLS_SYN_LAT=289,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=70,HLS_SYN_FF=3017,HLS_SYN_LUT=3273}" *)

module encode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xin1,
        xin2,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 55'b1;
parameter    ap_ST_st2_fsm_1 = 55'b10;
parameter    ap_ST_st3_fsm_2 = 55'b100;
parameter    ap_ST_st4_fsm_3 = 55'b1000;
parameter    ap_ST_st5_fsm_4 = 55'b10000;
parameter    ap_ST_st6_fsm_5 = 55'b100000;
parameter    ap_ST_st7_fsm_6 = 55'b1000000;
parameter    ap_ST_st8_fsm_7 = 55'b10000000;
parameter    ap_ST_st9_fsm_8 = 55'b100000000;
parameter    ap_ST_st10_fsm_9 = 55'b1000000000;
parameter    ap_ST_st11_fsm_10 = 55'b10000000000;
parameter    ap_ST_st12_fsm_11 = 55'b100000000000;
parameter    ap_ST_st13_fsm_12 = 55'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 55'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 55'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 55'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 55'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 55'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 55'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 55'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 55'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 55'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 55'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 55'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 55'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 55'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 55'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 55'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 55'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 55'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 55'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 55'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 55'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 55'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 55'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 55'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 55'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 55'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 55'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 55'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 55'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 55'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 55'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 55'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 55'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 55'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 55'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 55'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 55'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 55'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 55'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 55'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 55'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 55'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 55'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_16 = 5'b10110;
parameter    ap_const_lv5_17 = 5'b10111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv39_7FFFFFFFD4 = 39'b111111111111111111111111111111111010100;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv6_15 = 6'b10101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv31_4800 = 31'b100100000000000;
parameter    ap_const_lv15_4800 = 15'b100100000000000;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv35_0 = 35'b00000000000000000000000000000000000;
parameter    ap_const_lv29_1FFFFF80 = 29'b11111111111111111111110000000;
parameter    ap_const_lv29_80 = 29'b10000000;
parameter    ap_const_lv32_3000 = 32'b11000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_FFFFFF40 = 32'b11111111111111111111111101000000;
parameter    ap_const_lv32_C0 = 32'b11000000;
parameter    ap_const_lv32_FFFFD000 = 32'b11111111111111111101000000000000;
parameter    ap_const_lv15_5000 = 15'b101000000000000;
parameter    ap_const_lv15_3C00 = 15'b11110000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv42_234 = 42'b1000110100;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_FFFFE310 = 32'b11111111111111111110001100010000;
parameter    ap_const_lv32_FFFFF9B0 = 32'b11111111111111111111100110110000;
parameter    ap_const_lv32_1CF0 = 32'b1110011110000;
parameter    ap_const_lv32_650 = 32'b11001010000;
parameter    ap_const_lv32_31E = 32'b1100011110;
parameter    ap_const_lv32_FFFFFF2A = 32'b11111111111111111111111100101010;
parameter    ap_const_lv31_5800 = 31'b101100000000000;
parameter    ap_const_lv15_5800 = 15'b101100000000000;
parameter    ap_const_lv4_B = 4'b1011;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] xin1;
input  [31:0] xin2;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm = 55'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_71;
reg   [4:0] tqmf_address0;
reg    tqmf_ce0;
reg    tqmf_we0;
wire   [31:0] tqmf_d0;
wire   [31:0] tqmf_q0;
reg   [4:0] tqmf_address1;
reg    tqmf_ce1;
reg    tqmf_we1;
reg   [31:0] tqmf_d1;
wire   [31:0] tqmf_q1;
wire   [4:0] h_address0;
reg    h_ce0;
wire   [14:0] h_q0;
wire   [4:0] h_address1;
reg    h_ce1;
wire   [14:0] h_q1;
reg   [31:0] xh = 32'b00000000000000000000000000000000;
reg   [2:0] delay_bpl_address0;
reg    delay_bpl_ce0;
reg    delay_bpl_we0;
wire   [31:0] delay_bpl_d0;
wire   [31:0] delay_bpl_q0;
reg   [2:0] delay_dltx_address0;
reg    delay_dltx_ce0;
reg    delay_dltx_we0;
wire   [31:0] delay_dltx_d0;
wire   [31:0] delay_dltx_q0;
wire   [2:0] delay_dltx_address1;
reg    delay_dltx_ce1;
reg    delay_dltx_we1;
wire   [31:0] delay_dltx_d1;
wire   [31:0] delay_dltx_q1;
reg   [31:0] rlt1 = 32'b00000000000000000000000000000000;
reg   [31:0] al1 = 32'b00000000000000000000000000000000;
reg   [31:0] rlt2 = 32'b00000000000000000000000000000000;
reg   [31:0] al2 = 32'b00000000000000000000000000000000;
reg   [31:0] sl = 32'b00000000000000000000000000000000;
reg   [31:0] detl = 32'b00000000000000000000000000000000;
wire   [4:0] decis_levl_address0;
reg    decis_levl_ce0;
wire   [14:0] decis_levl_q0;
wire   [4:0] quant26bt_pos_address0;
reg    quant26bt_pos_ce0;
wire   [5:0] quant26bt_pos_q0;
wire   [4:0] quant26bt_neg_address0;
reg    quant26bt_neg_ce0;
wire   [5:0] quant26bt_neg_q0;
reg   [31:0] il = 32'b00000000000000000000000000000000;
wire   [3:0] qq4_code4_table_address0;
reg    qq4_code4_table_ce0;
wire   [15:0] qq4_code4_table_q0;
reg   [31:0] dlt = 32'b00000000000000000000000000000000;
reg   [31:0] nbl = 32'b00000000000000000000000000000000;
wire   [3:0] wl_code_table_address0;
reg    wl_code_table_ce0;
wire   [12:0] wl_code_table_q0;
reg   [4:0] ilb_table_address0;
reg    ilb_table_ce0;
wire   [11:0] ilb_table_q0;
reg   [31:0] plt = 32'b00000000000000000000000000000000;
reg   [31:0] plt1 = 32'b00000000000000000000000000000000;
reg   [31:0] plt2 = 32'b00000000000000000000000000000000;
reg   [2:0] delay_bph_address0;
reg    delay_bph_ce0;
reg    delay_bph_we0;
wire   [31:0] delay_bph_d0;
wire   [31:0] delay_bph_q0;
reg   [2:0] delay_dhx_address0;
reg    delay_dhx_ce0;
reg    delay_dhx_we0;
wire   [31:0] delay_dhx_d0;
wire   [31:0] delay_dhx_q0;
wire   [2:0] delay_dhx_address1;
reg    delay_dhx_ce1;
reg    delay_dhx_we1;
wire   [31:0] delay_dhx_d1;
wire   [31:0] delay_dhx_q1;
reg   [31:0] rh1 = 32'b00000000000000000000000000000000;
reg   [31:0] ah1 = 32'b00000000000000000000000000000000;
reg   [31:0] rh2 = 32'b00000000000000000000000000000000;
reg   [31:0] ah2 = 32'b00000000000000000000000000000000;
reg   [31:0] sh = 32'b00000000000000000000000000000000;
reg   [31:0] ih = 32'b00000000000000000000000000000000;
reg   [31:0] deth = 32'b00000000000000000000000000000000;
reg   [31:0] dh = 32'b00000000000000000000000000000000;
reg   [31:0] nbh = 32'b00000000000000000000000000000000;
reg   [31:0] ph = 32'b00000000000000000000000000000000;
reg   [31:0] ph1 = 32'b00000000000000000000000000000000;
reg   [31:0] ph2 = 32'b00000000000000000000000000000000;
reg   [31:0] reg_684;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_237;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_244;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_252;
reg   [31:0] reg_688;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_261;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_268;
reg   [31:0] reg_692;
reg   [31:0] reg_696;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_278;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_285;
reg   [31:0] reg_700;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_296;
wire  signed [49:0] xa_cast_fu_734_p1;
wire  signed [49:0] xb_cast_fu_748_p1;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_311;
wire   [3:0] i_2_fu_764_p2;
reg   [3:0] i_2_reg_2676;
wire   [0:0] exitcond2_fu_758_p2;
wire   [4:0] phitmp_fu_782_p2;
reg   [4:0] phitmp_reg_2691;
reg   [14:0] h_load_reg_2696;
reg   [31:0] tqmf_ptr_load_reg_2701;
reg   [14:0] h_ptr_load_reg_2706;
wire  signed [45:0] tmp_2_fu_795_p2;
reg  signed [45:0] tmp_2_reg_2711;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_337;
wire  signed [45:0] tmp_s_fu_807_p2;
reg  signed [45:0] tmp_s_reg_2716;
wire  signed [49:0] xa_2_fu_816_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_348;
wire  signed [49:0] xb_2_fu_825_p2;
wire   [50:0] xa_1_cast1_fu_851_p1;
reg   [50:0] xa_1_cast1_reg_2731;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_359;
wire   [46:0] tmp_fu_855_p1;
reg   [46:0] tmp_reg_2736;
wire   [50:0] xb_1_cast1_fu_899_p1;
reg   [50:0] xb_1_cast1_reg_2741;
wire   [46:0] tmp_3_fu_903_p1;
reg   [46:0] tmp_3_reg_2746;
reg   [4:0] tqmf_addr_2_reg_2751;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_374;
wire  signed [5:0] tqmf_ptr1_0_rec_fu_922_p2;
reg  signed [5:0] tqmf_ptr1_0_rec_reg_2756;
wire   [4:0] i_3_fu_945_p2;
reg   [4:0] i_3_reg_2769;
reg   [31:0] tmp_4_reg_2774;
wire   [0:0] exitcond_fu_939_p2;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_395;
wire  signed [63:0] grp_fu_999_p2;
reg  signed [63:0] zl_reg_2789;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_406;
wire   [2:0] p_01_rec_i_fu_1005_p2;
reg   [2:0] p_01_rec_i_reg_2794;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_415;
wire   [0:0] exitcond3_fu_1017_p2;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_440;
wire  signed [63:0] grp_fu_1075_p2;
reg  signed [63:0] tmp_66_i_reg_2842;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_451;
wire  signed [63:0] zl_1_fu_1081_p2;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_460;
wire  signed [63:0] grp_fu_1041_p2;
reg  signed [63:0] pl_1_reg_2852;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_469;
wire  signed [63:0] grp_fu_1061_p2;
reg  signed [63:0] tmp_64_i1_reg_2857;
wire   [31:0] tmp_63_i_fu_1086_p4;
reg   [31:0] tmp_63_i_reg_2862;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_480;
wire   [0:0] tmp_23_fu_1149_p3;
reg   [0:0] tmp_23_reg_2867;
wire   [31:0] n_assign_1_fu_1163_p3;
reg   [31:0] n_assign_1_reg_2872;
wire  signed [46:0] tmp_i2_cast_fu_1171_p1;
reg  signed [46:0] tmp_i2_cast_reg_2877;
wire   [0:0] tmp_67_i_fu_1175_p2;
reg   [0:0] tmp_67_i_reg_2883;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_495;
wire   [4:0] mil_fu_1181_p2;
reg   [4:0] mil_reg_2887;
reg   [14:0] decis_levl_load_reg_2897;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_510;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_519;
wire   [0:0] tmp_71_i_fu_1210_p2;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_543;
reg   [15:0] qq4_code4_table_load_reg_2925;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_553;
reg   [4:0] wd1_reg_2930;
reg   [3:0] wd2_cast_reg_2935;
wire   [31:0] tmp_14_fu_1376_p4;
reg   [31:0] tmp_14_reg_2940;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_566;
wire  signed [63:0] tmp_i5_fu_1452_p1;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_583;
wire    grp_encode_upzero_fu_649_ap_done;
reg   [0:0] tmp_39_reg_2976;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_598;
reg   [0:0] tmp_44_reg_2982;
wire  signed [31:0] apl2_fu_1624_p2;
reg  signed [31:0] apl2_reg_2987;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_609;
wire   [0:0] tmp_93_i_fu_1630_p2;
reg   [0:0] tmp_93_i_reg_2992;
wire   [31:0] apl1_fu_1671_p2;
reg   [31:0] apl1_reg_2997;
wire  signed [63:0] grp_fu_1496_p2;
reg  signed [63:0] zl_2_reg_3003;
wire   [2:0] p_01_rec_i1_fu_1807_p2;
reg   [2:0] p_01_rec_i1_reg_3008;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_624;
wire   [0:0] exitcond1_fu_1819_p2;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_649;
wire  signed [63:0] grp_fu_1877_p2;
reg  signed [63:0] tmp_66_i3_reg_3056;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_660;
wire  signed [63:0] zl_3_fu_1883_p2;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_669;
wire  signed [63:0] grp_fu_1843_p2;
reg  signed [63:0] pl_4_reg_3066;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_678;
wire  signed [63:0] grp_fu_1863_p2;
reg  signed [63:0] tmp_64_i2_reg_3071;
wire   [31:0] tmp_63_i2_fu_1888_p4;
reg   [31:0] tmp_63_i2_reg_3076;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_689;
wire   [0:0] tmp_49_fu_1952_p3;
reg   [0:0] tmp_49_reg_3081;
reg   [29:0] tmp_27_reg_3093;
wire   [31:0] n_assign_3_fu_2012_p3;
reg   [31:0] n_assign_3_reg_3098;
wire  signed [46:0] tmp_34_cast1_fu_2028_p1;
reg  signed [46:0] tmp_34_cast1_reg_3103;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_706;
wire   [31:0] tmp_30_fu_2060_p6;
reg   [31:0] tmp_30_reg_3111;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_717;
reg   [3:0] wd2_4_cast_reg_3121;
reg   [31:0] tmp_33_reg_3131;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_730;
wire  signed [63:0] tmp_i10_fu_2282_p1;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_739;
reg   [0:0] tmp_54_reg_3153;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_bdd_753;
reg   [0:0] tmp_57_reg_3159;
wire  signed [31:0] apl2_1_fu_2440_p2;
reg  signed [31:0] apl2_1_reg_3164;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_764;
wire   [0:0] tmp_93_i1_fu_2446_p2;
reg   [0:0] tmp_93_i1_reg_3169;
wire   [31:0] apl1_4_fu_2487_p2;
reg   [31:0] apl1_4_reg_3174;
wire    grp_encode_upzero_fu_649_ap_start;
wire    grp_encode_upzero_fu_649_ap_idle;
wire    grp_encode_upzero_fu_649_ap_ready;
reg   [31:0] grp_encode_upzero_fu_649_dlt;
wire   [2:0] grp_encode_upzero_fu_649_dlti_address0;
wire    grp_encode_upzero_fu_649_dlti_ce0;
wire    grp_encode_upzero_fu_649_dlti_we0;
wire   [31:0] grp_encode_upzero_fu_649_dlti_d0;
reg   [31:0] grp_encode_upzero_fu_649_dlti_q0;
wire   [2:0] grp_encode_upzero_fu_649_dlti_address1;
wire    grp_encode_upzero_fu_649_dlti_ce1;
wire    grp_encode_upzero_fu_649_dlti_we1;
wire   [31:0] grp_encode_upzero_fu_649_dlti_d1;
reg   [31:0] grp_encode_upzero_fu_649_dlti_q1;
wire   [2:0] grp_encode_upzero_fu_649_bli_address0;
wire    grp_encode_upzero_fu_649_bli_ce0;
wire    grp_encode_upzero_fu_649_bli_we0;
wire   [31:0] grp_encode_upzero_fu_649_bli_d0;
reg   [31:0] grp_encode_upzero_fu_649_bli_q0;
reg   [4:0] tqmf_ptr_0_rec_reg_521;
reg   [3:0] i_reg_532;
reg   [49:0] xa1_reg_543;
reg   [49:0] xb1_reg_553;
reg   [5:0] tqmf_ptr_0_pn_rec_reg_563;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_809;
reg   [4:0] i_1_reg_574;
reg   [63:0] zl1_i_reg_585;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_821;
reg   [2:0] dlt_pn_rec_i_reg_595;
reg   [4:0] mil_i_reg_606;
reg   [63:0] zl1_i1_reg_618;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_839;
reg   [2:0] dlt_pn_rec_i1_reg_628;
wire   [1:0] tmp_29_fu_2039_p3;
reg   [1:0] ih_assign_phi_fu_642_p4;
reg   [1:0] ih_assign_reg_639;
wire   [0:0] tmp_28_fu_2034_p2;
wire   [1:0] tmp_24_fu_2020_p3;
reg    grp_encode_upzero_fu_649_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_859;
wire   [63:0] tqmf_ptr_0_rec_cast_fu_752_p1;
wire   [63:0] tqmf_ptr_0_sum1_cast_fu_776_p1;
wire   [63:0] p_sum_cast_fu_917_p1;
wire   [63:0] tqmf_ptr_0_sum_cast_fu_934_p1;
wire   [63:0] p_01_rec_i_cast_fu_1011_p1;
wire   [63:0] tmp_68_i_fu_1187_p1;
wire   [63:0] tmp_73_i_fu_1215_p1;
wire   [63:0] tmp_12_fu_1248_p1;
wire   [63:0] tmp_i4_fu_1392_p1;
wire   [63:0] p_01_rec_i1_cast_fu_1813_p1;
wire   [63:0] tmp_i2_fu_2206_p1;
wire   [31:0] tmp_20_fu_1783_p2;
wire  signed [31:0] apl1_4_cast_fu_1765_p1;
wire  signed [31:0] apl2_assign_cast_fu_1701_p1;
wire   [31:0] tmp_66_i1_fu_1106_p4;
wire   [31:0] tmp_7_fu_1122_p2;
wire   [31:0] el_assign_fu_1134_p2;
wire   [31:0] tmp_81_i_cast_fu_1430_p1;
wire   [31:0] il_assign_cast_fu_1228_p1;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_908;
wire   [31:0] nbl_assign_2_cast_fu_1338_p1;
wire   [31:0] tmp_16_fu_1396_p2;
wire   [31:0] tmp_38_fu_2599_p2;
wire  signed [31:0] apl1_9_cast_fu_2581_p1;
wire  signed [31:0] apl2_assign_1_cast_fu_2517_p1;
wire   [31:0] tmp_66_i2_fu_1908_p4;
wire   [31:0] tmp_21_fu_1924_p2;
wire   [31:0] n_assign_2_fu_1940_p2;
wire   [31:0] tmp_33_cast_cast_fu_1960_p3;
wire   [31:0] tmp_38_cast_cast_fu_2047_p3;
wire   [31:0] tmp_81_i1_cast_fu_2234_p1;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_953;
wire   [31:0] nbl_assign_3_cast_fu_2176_p1;
wire   [31:0] tmp_35_fu_2260_p2;
wire   [35:0] p_shl_fu_704_p3;
wire   [33:0] p_shl1_fu_716_p3;
wire  signed [36:0] p_shl_cast_fu_712_p1;
wire  signed [36:0] p_shl1_cast_fu_724_p1;
wire  signed [36:0] xa_fu_728_p2;
wire  signed [31:0] xb_fu_742_p0;
wire  signed [38:0] xb_fu_742_p2;
wire   [4:0] tqmf_ptr_0_sum1_fu_770_p2;
wire  signed [14:0] tmp_2_fu_795_p0;
wire  signed [31:0] tmp_2_fu_795_p1;
wire  signed [14:0] tmp_s_fu_807_p0;
wire  signed [31:0] tmp_s_fu_807_p1;
wire  signed [49:0] tmp_2_cast_fu_813_p1;
wire  signed [49:0] tmp_10_cast_fu_822_p1;
wire  signed [31:0] tmp_6_fu_835_p1;
wire  signed [38:0] tmp_6_fu_835_p2;
wire  signed [49:0] tmp_6_cast_fu_841_p1;
wire  signed [49:0] xa_1_fu_845_p2;
wire   [35:0] p_shl2_fu_859_p3;
wire   [33:0] p_shl3_fu_871_p3;
wire  signed [36:0] p_shl2_cast_fu_867_p1;
wire  signed [36:0] p_shl3_cast_fu_879_p1;
wire  signed [36:0] tmp_9_fu_883_p2;
wire  signed [49:0] tmp_9_cast_fu_889_p1;
wire  signed [49:0] xb_1_fu_893_p2;
wire   [4:0] tmp_15_fu_907_p1;
wire  signed [4:0] p_sum_fu_911_p2;
wire   [5:0] tqmf_ptr_0_sum_fu_928_p2;
wire   [50:0] tmp_1_fu_951_p2;
wire   [46:0] tmp_5_fu_971_p2;
wire  signed [31:0] grp_fu_999_p0;
wire  signed [31:0] grp_fu_999_p1;
wire   [31:0] tmp_19_fu_1027_p2;
wire  signed [31:0] grp_fu_1041_p0;
wire  signed [31:0] grp_fu_1041_p1;
wire   [31:0] tmp_22_fu_1047_p2;
wire  signed [31:0] grp_fu_1061_p0;
wire  signed [31:0] grp_fu_1061_p1;
wire  signed [31:0] grp_fu_1075_p0;
wire  signed [31:0] grp_fu_1075_p1;
wire  signed [63:0] pl_2_fu_1102_p2;
wire   [31:0] m_fu_1157_p2;
wire   [14:0] tmp_70_i_fu_1195_p0;
wire  signed [31:0] tmp_70_i_fu_1195_p1;
wire  signed [46:0] tmp_70_i_fu_1195_p2;
wire   [31:0] tmp_10_fu_1200_p4;
wire   [5:0] ril_2_fu_1221_p3;
wire   [3:0] tmp_11_fu_1238_p4;
wire   [38:0] p_shl_i_fu_1262_p3;
wire   [39:0] p_shl_i_cast_fu_1270_p1;
wire  signed [39:0] tmp_i2_cast_26_fu_1258_p1;
wire  signed [39:0] tmp_i3_fu_1274_p2;
wire   [31:0] tmp_75_i_fu_1280_p4;
wire  signed [31:0] wl_code_table_load_cast_fu_1290_p1;
wire  signed [31:0] nbl_assign_1_fu_1294_p2;
wire   [0:0] tmp_32_fu_1304_p3;
wire   [30:0] tmp_26_fu_1300_p1;
wire   [30:0] p_i_fu_1312_p3;
wire   [0:0] tmp_78_i_fu_1324_p2;
wire   [14:0] tmp_36_fu_1320_p1;
wire   [14:0] nbl_assign_2_fu_1330_p3;
wire  signed [31:0] tmp_13_fu_1371_p0;
wire  signed [15:0] tmp_13_fu_1371_p1;
wire  signed [46:0] tmp_13_fu_1371_p2;
wire  signed [3:0] tmp_80_i_fu_1407_p2;
wire   [11:0] tmp_80_i_cast_cast_fu_1412_p1;
wire   [11:0] wd3_fu_1416_p2;
wire   [14:0] tmp_81_i_fu_1422_p3;
wire  signed [31:0] grp_fu_1460_p0;
wire  signed [31:0] grp_fu_1460_p1;
wire  signed [31:0] grp_fu_1470_p0;
wire  signed [31:0] grp_fu_1470_p1;
wire  signed [31:0] grp_fu_1496_p0;
wire  signed [31:0] grp_fu_1496_p1;
wire  signed [63:0] grp_fu_1460_p2;
wire  signed [63:0] grp_fu_1470_p2;
wire   [33:0] wd2_fu_1522_p3;
wire  signed [34:0] wd2_1_cast_fu_1530_p1;
wire   [26:0] tmp_17_fu_1540_p4;
wire  signed [34:0] wd2_1_fu_1534_p2;
wire  signed [27:0] tmp_18_fu_1550_p1;
wire   [27:0] tmp_42_fu_1554_p4;
wire   [27:0] tmp_43_fu_1564_p3;
wire   [38:0] p_shl_i1_fu_1586_p3;
wire   [39:0] p_shl_i1_cast_fu_1594_p1;
wire  signed [39:0] tmp_89_i_cast_fu_1582_p1;
wire  signed [39:0] tmp_90_i_fu_1598_p2;
wire   [28:0] tmp_88_i_cast_cast_fu_1575_p3;
wire  signed [28:0] tmp_85_i_cast_cast_fu_1571_p1;
wire  signed [28:0] tmp4_fu_1614_p2;
wire   [31:0] tmp_91_i_cast_cast_fu_1604_p4;
wire  signed [31:0] tmp4_cast_fu_1620_p1;
wire   [39:0] p_shl_i2_fu_1636_p3;
wire   [40:0] p_shl_i2_cast_fu_1644_p1;
wire  signed [40:0] tmp_i4_cast1_fu_1518_p1;
wire  signed [40:0] tmp_i6_fu_1648_p2;
wire   [31:0] apl_i_v_cast_cast_fu_1664_p3;
wire   [31:0] tmp_99_i_fu_1654_p4;
wire   [31:0] p_i1_fu_1677_p3;
wire   [0:0] tmp_94_i_fu_1687_p2;
wire   [14:0] tmp_45_fu_1683_p1;
wire   [14:0] apl2_assign_fu_1693_p3;
wire   [14:0] apl1_8_fu_1711_p2;
wire   [31:0] apl1_10_cast_fu_1721_p1;
wire   [0:0] tmp_101_i_fu_1725_p2;
wire   [31:0] wd3_0_apl1_i_fu_1730_p3;
wire   [15:0] apl1_10_cast1_fu_1717_p1;
wire   [15:0] apl1_2_fu_1741_p2;
wire  signed [31:0] apl1_3_cast_fu_1747_p1;
wire   [0:0] tmp_102_i_fu_1751_p2;
wire   [15:0] tmp_46_fu_1737_p1;
wire   [15:0] apl1_3_fu_1757_p3;
wire   [31:0] tmp_47_fu_1829_p2;
wire  signed [31:0] grp_fu_1843_p0;
wire  signed [31:0] grp_fu_1843_p1;
wire   [31:0] tmp_48_fu_1849_p2;
wire  signed [31:0] grp_fu_1863_p0;
wire  signed [31:0] grp_fu_1863_p1;
wire  signed [31:0] grp_fu_1877_p0;
wire  signed [31:0] grp_fu_1877_p1;
wire  signed [63:0] pl_5_fu_1904_p2;
wire  signed [31:0] tmp_25_fu_1982_p1;
wire  signed [41:0] tmp_25_fu_1982_p2;
wire   [0:0] tmp_50_fu_1998_p3;
wire   [31:0] m_1_fu_2006_p2;
wire  signed [31:0] decis_fu_2031_p1;
wire  signed [31:0] tmp_30_fu_2060_p1;
wire  signed [31:0] tmp_30_fu_2060_p2;
wire   [31:0] tmp_30_fu_2060_p3;
wire   [31:0] tmp_30_fu_2060_p4;
wire   [1:0] tmp_30_fu_2060_p5;
wire  signed [31:0] grp_fu_2077_p0;
wire  signed [31:0] grp_fu_2077_p1;
wire   [38:0] p_shl_i3_fu_2090_p3;
wire   [39:0] p_shl_i3_cast_fu_2098_p1;
wire  signed [39:0] tmp_i9_cast_fu_2086_p1;
wire  signed [39:0] tmp_i9_fu_2102_p2;
wire   [31:0] tmp_34_fu_2118_p1;
wire  signed [31:0] tmp_34_fu_2118_p2;
wire   [31:0] tmp_34_fu_2118_p3;
wire  signed [31:0] tmp_34_fu_2118_p4;
wire   [1:0] tmp_34_fu_2118_p5;
wire   [31:0] wd_fu_2108_p4;
wire   [31:0] tmp_34_fu_2118_p6;
wire   [31:0] nbh_assign_1_fu_2132_p2;
wire   [0:0] tmp_52_fu_2142_p3;
wire   [30:0] tmp_51_fu_2138_p1;
wire   [30:0] p_i2_fu_2150_p3;
wire   [0:0] tmp_105_i_fu_2162_p2;
wire   [14:0] tmp_53_fu_2158_p1;
wire   [14:0] nbl_assign_3_fu_2168_p3;
wire   [4:0] wd1_1_fu_2186_p4;
wire  signed [3:0] tmp_80_i1_fu_2211_p2;
wire   [11:0] tmp_80_i1_cast_cast_fu_2216_p1;
wire   [11:0] wd3_2_fu_2220_p2;
wire   [14:0] tmp_81_i1_fu_2226_p3;
wire  signed [46:0] grp_fu_2077_p2;
wire  signed [31:0] grp_fu_2290_p0;
wire  signed [31:0] grp_fu_2290_p1;
wire  signed [31:0] grp_fu_2300_p0;
wire  signed [31:0] grp_fu_2300_p1;
wire  signed [63:0] grp_fu_2290_p2;
wire  signed [63:0] grp_fu_2300_p2;
wire   [33:0] wd2_2_fu_2338_p3;
wire  signed [34:0] wd2_5_cast_fu_2346_p1;
wire   [26:0] tmp_37_fu_2356_p4;
wire  signed [34:0] wd2_3_fu_2350_p2;
wire  signed [27:0] tmp_41_fu_2366_p1;
wire   [27:0] tmp_55_fu_2370_p4;
wire   [27:0] tmp_56_fu_2380_p3;
wire   [38:0] p_shl_i4_fu_2402_p3;
wire   [39:0] p_shl_i4_cast_fu_2410_p1;
wire  signed [39:0] tmp_89_i1_cast7_fu_2398_p1;
wire  signed [39:0] tmp_90_i1_fu_2414_p2;
wire   [28:0] tmp_88_i1_cast_cast_fu_2391_p3;
wire  signed [28:0] tmp_85_i1_cast_cast_fu_2387_p1;
wire  signed [28:0] tmp5_fu_2430_p2;
wire   [31:0] tmp_91_i1_cast_cast_fu_2420_p4;
wire  signed [31:0] tmp5_cast_fu_2436_p1;
wire   [39:0] p_shl_i5_fu_2452_p3;
wire   [40:0] p_shl_i5_cast_fu_2460_p1;
wire  signed [40:0] tmp_i11_cast8_fu_2334_p1;
wire  signed [40:0] tmp_i11_fu_2464_p2;
wire   [31:0] apl_i1_v_cast_cast_fu_2480_p3;
wire   [31:0] tmp_99_i1_fu_2470_p4;
wire   [31:0] p_i3_fu_2493_p3;
wire   [0:0] tmp_94_i1_fu_2503_p2;
wire   [14:0] tmp_58_fu_2499_p1;
wire   [14:0] apl2_assign_1_fu_2509_p3;
wire   [14:0] apl1_9_fu_2527_p2;
wire   [31:0] apl1_11_cast_fu_2537_p1;
wire   [0:0] tmp_101_i1_fu_2541_p2;
wire   [31:0] wd3_0_apl1_i1_fu_2546_p3;
wire   [15:0] apl1_11_cast6_fu_2533_p1;
wire   [15:0] apl1_6_fu_2557_p2;
wire  signed [31:0] apl1_8_cast_fu_2563_p1;
wire   [0:0] tmp_102_i1_fu_2567_p2;
wire   [15:0] tmp_59_fu_2553_p1;
wire   [15:0] apl1_7_fu_2573_p3;
wire   [31:0] tmp_60_fu_2631_p2;
wire    grp_fu_999_ce;
wire    grp_fu_1041_ce;
wire    grp_fu_1061_ce;
wire    grp_fu_1075_ce;
reg    grp_fu_1460_ce;
reg    grp_fu_1470_ce;
reg    grp_fu_1496_ce;
wire    grp_fu_1843_ce;
wire    grp_fu_1863_ce;
wire    grp_fu_1877_ce;
wire    grp_fu_2077_ce;
reg    grp_fu_2290_ce;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_bdd_1962;
reg    grp_fu_2300_ce;
reg   [54:0] ap_NS_fsm;
wire   [46:0] tmp_70_i_fu_1195_p00;


encode_tqmf #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
tqmf_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( tqmf_address0 ),
    .ce0( tqmf_ce0 ),
    .we0( tqmf_we0 ),
    .d0( tqmf_d0 ),
    .q0( tqmf_q0 ),
    .address1( tqmf_address1 ),
    .ce1( tqmf_ce1 ),
    .we1( tqmf_we1 ),
    .d1( tqmf_d1 ),
    .q1( tqmf_q1 )
);

encode_h #(
    .DataWidth( 15 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
h_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( h_address0 ),
    .ce0( h_ce0 ),
    .q0( h_q0 ),
    .address1( h_address1 ),
    .ce1( h_ce1 ),
    .q1( h_q1 )
);

encode_delay_bpl #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
delay_bpl_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( delay_bpl_address0 ),
    .ce0( delay_bpl_ce0 ),
    .we0( delay_bpl_we0 ),
    .d0( delay_bpl_d0 ),
    .q0( delay_bpl_q0 )
);

encode_delay_dltx #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
delay_dltx_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( delay_dltx_address0 ),
    .ce0( delay_dltx_ce0 ),
    .we0( delay_dltx_we0 ),
    .d0( delay_dltx_d0 ),
    .q0( delay_dltx_q0 ),
    .address1( delay_dltx_address1 ),
    .ce1( delay_dltx_ce1 ),
    .we1( delay_dltx_we1 ),
    .d1( delay_dltx_d1 ),
    .q1( delay_dltx_q1 )
);

encode_decis_levl #(
    .DataWidth( 15 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
decis_levl_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( decis_levl_address0 ),
    .ce0( decis_levl_ce0 ),
    .q0( decis_levl_q0 )
);

encode_quant26bt_pos #(
    .DataWidth( 6 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
quant26bt_pos_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( quant26bt_pos_address0 ),
    .ce0( quant26bt_pos_ce0 ),
    .q0( quant26bt_pos_q0 )
);

encode_quant26bt_neg #(
    .DataWidth( 6 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
quant26bt_neg_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( quant26bt_neg_address0 ),
    .ce0( quant26bt_neg_ce0 ),
    .q0( quant26bt_neg_q0 )
);

encode_qq4_code4_table #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
qq4_code4_table_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( qq4_code4_table_address0 ),
    .ce0( qq4_code4_table_ce0 ),
    .q0( qq4_code4_table_q0 )
);

encode_wl_code_table #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
wl_code_table_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( wl_code_table_address0 ),
    .ce0( wl_code_table_ce0 ),
    .q0( wl_code_table_q0 )
);

encode_ilb_table #(
    .DataWidth( 12 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ilb_table_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( ilb_table_address0 ),
    .ce0( ilb_table_ce0 ),
    .q0( ilb_table_q0 )
);

encode_delay_bpl #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
delay_bph_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( delay_bph_address0 ),
    .ce0( delay_bph_ce0 ),
    .we0( delay_bph_we0 ),
    .d0( delay_bph_d0 ),
    .q0( delay_bph_q0 )
);

encode_delay_dltx #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
delay_dhx_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( delay_dhx_address0 ),
    .ce0( delay_dhx_ce0 ),
    .we0( delay_dhx_we0 ),
    .d0( delay_dhx_d0 ),
    .q0( delay_dhx_q0 ),
    .address1( delay_dhx_address1 ),
    .ce1( delay_dhx_ce1 ),
    .we1( delay_dhx_we1 ),
    .d1( delay_dhx_d1 ),
    .q1( delay_dhx_q1 )
);

encode_upzero grp_encode_upzero_fu_649(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_encode_upzero_fu_649_ap_start ),
    .ap_done( grp_encode_upzero_fu_649_ap_done ),
    .ap_idle( grp_encode_upzero_fu_649_ap_idle ),
    .ap_ready( grp_encode_upzero_fu_649_ap_ready ),
    .dlt( grp_encode_upzero_fu_649_dlt ),
    .dlti_address0( grp_encode_upzero_fu_649_dlti_address0 ),
    .dlti_ce0( grp_encode_upzero_fu_649_dlti_ce0 ),
    .dlti_we0( grp_encode_upzero_fu_649_dlti_we0 ),
    .dlti_d0( grp_encode_upzero_fu_649_dlti_d0 ),
    .dlti_q0( grp_encode_upzero_fu_649_dlti_q0 ),
    .dlti_address1( grp_encode_upzero_fu_649_dlti_address1 ),
    .dlti_ce1( grp_encode_upzero_fu_649_dlti_ce1 ),
    .dlti_we1( grp_encode_upzero_fu_649_dlti_we1 ),
    .dlti_d1( grp_encode_upzero_fu_649_dlti_d1 ),
    .dlti_q1( grp_encode_upzero_fu_649_dlti_q1 ),
    .bli_address0( grp_encode_upzero_fu_649_bli_address0 ),
    .bli_ce0( grp_encode_upzero_fu_649_bli_ce0 ),
    .bli_we0( grp_encode_upzero_fu_649_bli_we0 ),
    .bli_d0( grp_encode_upzero_fu_649_bli_d0 ),
    .bli_q0( grp_encode_upzero_fu_649_bli_q0 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_999_p0 ),
    .din1( grp_fu_999_p1 ),
    .ce( grp_fu_999_ce ),
    .dout( grp_fu_999_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1041_p0 ),
    .din1( grp_fu_1041_p1 ),
    .ce( grp_fu_1041_ce ),
    .dout( grp_fu_1041_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1061_p0 ),
    .din1( grp_fu_1061_p1 ),
    .ce( grp_fu_1061_ce ),
    .dout( grp_fu_1061_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1075_p0 ),
    .din1( grp_fu_1075_p1 ),
    .ce( grp_fu_1075_ce ),
    .dout( grp_fu_1075_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1460_p0 ),
    .din1( grp_fu_1460_p1 ),
    .ce( grp_fu_1460_ce ),
    .dout( grp_fu_1460_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1470_p0 ),
    .din1( grp_fu_1470_p1 ),
    .ce( grp_fu_1470_ce ),
    .dout( grp_fu_1470_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1496_p0 ),
    .din1( grp_fu_1496_p1 ),
    .ce( grp_fu_1496_ce ),
    .dout( grp_fu_1496_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1843_p0 ),
    .din1( grp_fu_1843_p1 ),
    .ce( grp_fu_1843_ce ),
    .dout( grp_fu_1843_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U13(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1863_p0 ),
    .din1( grp_fu_1863_p1 ),
    .ce( grp_fu_1863_ce ),
    .dout( grp_fu_1863_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U14(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1877_p0 ),
    .din1( grp_fu_1877_p1 ),
    .ce( grp_fu_1877_ce ),
    .dout( grp_fu_1877_p2 )
);

encode_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
encode_mux_4to1_sel2_32_1_U15(
    .din1( tmp_30_fu_2060_p1 ),
    .din2( tmp_30_fu_2060_p2 ),
    .din3( tmp_30_fu_2060_p3 ),
    .din4( tmp_30_fu_2060_p4 ),
    .din5( tmp_30_fu_2060_p5 ),
    .dout( tmp_30_fu_2060_p6 )
);

encode_mul_32s_32s_47_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 47 ))
encode_mul_32s_32s_47_3_U16(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_2077_p0 ),
    .din1( grp_fu_2077_p1 ),
    .ce( grp_fu_2077_ce ),
    .dout( grp_fu_2077_p2 )
);

encode_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
encode_mux_4to1_sel2_32_1_U17(
    .din1( tmp_34_fu_2118_p1 ),
    .din2( tmp_34_fu_2118_p2 ),
    .din3( tmp_34_fu_2118_p3 ),
    .din4( tmp_34_fu_2118_p4 ),
    .din5( tmp_34_fu_2118_p5 ),
    .dout( tmp_34_fu_2118_p6 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_2290_p0 ),
    .din1( grp_fu_2290_p1 ),
    .ce( grp_fu_2290_ce ),
    .dout( grp_fu_2290_p2 )
);

encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U19(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_2300_p0 ),
    .din1( grp_fu_2300_p1 ),
    .ce( grp_fu_2300_ce ),
    .dout( grp_fu_2300_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_encode_upzero_fu_649_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_encode_upzero_fu_649_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_encode_upzero_fu_649_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49))) begin
            grp_encode_upzero_fu_649_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_encode_upzero_fu_649_ap_ready)) begin
            grp_encode_upzero_fu_649_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        dlt_pn_rec_i1_reg_628 <= p_01_rec_i1_reg_3008;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        dlt_pn_rec_i1_reg_628 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        dlt_pn_rec_i_reg_595 <= p_01_rec_i_reg_2794;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        dlt_pn_rec_i_reg_595 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        i_1_reg_574 <= i_3_reg_2769;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        i_1_reg_574 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_reg_532 <= i_2_reg_2676;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_reg_532 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) & ~(ap_const_lv1_0 == tmp_28_fu_2034_p2))) begin
                ih[1 : 0] <= tmp_38_cast_cast_fu_2047_p3[1 : 0];
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
                ih[1 : 0] <= tmp_33_cast_cast_fu_1960_p3[1 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        if ((ap_const_lv1_0 == tmp_28_fu_2034_p2)) begin
            ih_assign_reg_639 <= tmp_24_fu_2020_p3;
        end else if (~(ap_const_lv1_0 == tmp_28_fu_2034_p2)) begin
            ih_assign_reg_639 <= tmp_29_fu_2039_p3;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & ~(ap_const_lv1_0 == tmp_71_i_fu_1210_p2) & ~(ap_const_lv1_0 == tmp_67_i_reg_2883))) begin
        mil_i_reg_606 <= mil_reg_2887;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        mil_i_reg_606 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tqmf_ptr_0_pn_rec_reg_563 <= tqmf_ptr1_0_rec_reg_2756;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tqmf_ptr_0_pn_rec_reg_563 <= ap_const_lv6_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tqmf_ptr_0_rec_reg_521 <= phitmp_reg_2691;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tqmf_ptr_0_rec_reg_521 <= ap_const_lv5_2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        xa1_reg_543 <= xa_2_fu_816_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        xa1_reg_543 <= xa_cast_fu_734_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        xb1_reg_553 <= xb_2_fu_825_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        xb1_reg_553 <= xb_cast_fu_748_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        zl1_i1_reg_618 <= zl_3_fu_1883_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        zl1_i1_reg_618 <= zl_2_reg_3003;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        zl1_i_reg_585 <= zl_1_fu_1081_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        zl1_i_reg_585 <= zl_reg_2789;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        ah1 <= apl1_9_cast_fu_2581_p1;
        ah2 <= apl2_assign_1_cast_fu_2517_p1;
        rh1 <= tmp_38_fu_2599_p2;
        rh2 <= rh1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        al1 <= apl1_4_cast_fu_1765_p1;
        al2 <= apl2_assign_cast_fu_1701_p1;
        rlt1 <= tmp_20_fu_1783_p2;
        rlt2 <= rlt1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        apl1_4_reg_3174 <= apl1_4_fu_2487_p2;
        apl2_1_reg_3164 <= apl2_1_fu_2440_p2;
        tmp_93_i1_reg_3169 <= tmp_93_i1_fu_2446_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        apl1_reg_2997 <= apl1_fu_1671_p2;
        apl2_reg_2987 <= apl2_fu_1624_p2;
        tmp_93_i_reg_2992 <= tmp_93_i_fu_1630_p2;
        zl_2_reg_3003 <= grp_fu_1496_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        decis_levl_load_reg_2897 <= decis_levl_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        deth[14 : 3] <= tmp_81_i1_cast_fu_2234_p1[14 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        detl[14 : 3] <= tmp_81_i_cast_fu_1430_p1[14 : 3];
        plt1 <= plt;
        plt2 <= plt1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        dh <= {{grp_fu_2077_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
        tmp_33_reg_3131 <= {{grp_fu_2077_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        dlt <= {{tmp_13_fu_1371_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
        plt <= tmp_16_fu_1396_p2;
        tmp_14_reg_2940 <= {{tmp_13_fu_1371_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        h_load_reg_2696 <= h_q0;
        h_ptr_load_reg_2706 <= h_q1;
        tqmf_ptr_load_reg_2701 <= tqmf_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_2_reg_2676 <= i_2_fu_764_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        i_3_reg_2769 <= i_3_fu_945_p2;
        tqmf_addr_2_reg_2751 <= p_sum_cast_fu_917_p1;
        tqmf_ptr1_0_rec_reg_2756 <= tqmf_ptr1_0_rec_fu_922_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        il[5 : 0] <= il_assign_cast_fu_1228_p1[5 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        mil_reg_2887 <= mil_fu_1181_p2;
        tmp_67_i_reg_2883 <= tmp_67_i_fu_1175_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        n_assign_1_reg_2872 <= n_assign_1_fu_1163_p3;
        sl <= tmp_7_fu_1122_p2;
        tmp_23_reg_2867 <= el_assign_fu_1134_p2[ap_const_lv32_1F];
        tmp_63_i_reg_2862 <= {{zl1_i_reg_585[ap_const_lv32_2D : ap_const_lv32_E]}};
        tmp_i2_cast_reg_2877[14 : 3] <= tmp_i2_cast_fu_1171_p1[14 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        n_assign_3_reg_3098 <= n_assign_3_fu_2012_p3;
        sh <= tmp_21_fu_1924_p2;
        tmp_27_reg_3093 <= {{tmp_25_fu_1982_p2[ap_const_lv32_29 : ap_const_lv32_C]}};
        tmp_49_reg_3081 <= n_assign_2_fu_1940_p2[ap_const_lv32_1F];
        tmp_63_i2_reg_3076 <= {{zl1_i1_reg_618[ap_const_lv32_2D : ap_const_lv32_E]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        nbh[14 : 0] <= nbl_assign_3_cast_fu_2176_p1[14 : 0];
        wd2_4_cast_reg_3121 <= {{nbl_assign_3_fu_2168_p3[ap_const_lv32_E : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        nbl[14 : 0] <= nbl_assign_2_cast_fu_1338_p1[14 : 0];
        qq4_code4_table_load_reg_2925 <= qq4_code4_table_q0;
        wd1_reg_2930 <= {{nbl_assign_2_fu_1330_p3[ap_const_lv32_A : ap_const_lv32_6]}};
        wd2_cast_reg_2935 <= {{nbl_assign_2_fu_1330_p3[ap_const_lv32_E : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        p_01_rec_i1_reg_3008 <= p_01_rec_i1_fu_1807_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        p_01_rec_i_reg_2794 <= p_01_rec_i_fu_1005_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        ph <= tmp_35_fu_2260_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50))) begin
        ph1 <= ph;
        ph2 <= ph1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond2_fu_758_p2 == ap_const_lv1_0))) begin
        phitmp_reg_2691 <= phitmp_fu_782_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        pl_1_reg_2852 <= grp_fu_1041_p2;
        tmp_64_i1_reg_2857 <= grp_fu_1061_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        pl_4_reg_3066 <= grp_fu_1843_p2;
        tmp_64_i2_reg_3071 <= grp_fu_1863_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        reg_684 <= tqmf_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        reg_688 <= delay_bpl_q0;
        reg_692 <= delay_dltx_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        reg_696 <= delay_bph_q0;
        reg_700 <= delay_dhx_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_2_reg_2711 <= tmp_2_fu_795_p2;
        tmp_s_reg_2716 <= tmp_s_fu_807_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        tmp_30_reg_3111 <= tmp_30_fu_2060_p6;
        tmp_34_cast1_reg_3103[14 : 3] <= tmp_34_cast1_fu_2028_p1[14 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        tmp_39_reg_2976 <= grp_fu_1460_p2[ap_const_lv32_3F];
        tmp_44_reg_2982 <= grp_fu_1470_p2[ap_const_lv32_3F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp_3_reg_2746 <= tmp_3_fu_903_p1;
        tmp_reg_2736 <= tmp_fu_855_p1;
        xa_1_cast1_reg_2731[49 : 0] <= xa_1_cast1_fu_851_p1[49 : 0];
        xb_1_cast1_reg_2741[49 : 0] <= xb_1_cast1_fu_899_p1[49 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_939_p2))) begin
        tmp_4_reg_2774 <= {{tmp_1_fu_951_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
        xh <= {{tmp_5_fu_971_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        tmp_54_reg_3153 <= grp_fu_2290_p2[ap_const_lv32_3F];
        tmp_57_reg_3159 <= grp_fu_2300_p2[ap_const_lv32_3F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        tmp_66_i3_reg_3056 <= grp_fu_1877_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_66_i_reg_2842 <= grp_fu_1075_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        zl_reg_2789 <= grp_fu_999_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st55_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st55_fsm_54)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_374)
begin
    if (ap_sig_bdd_374) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_809)
begin
    if (ap_sig_bdd_809) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_261)
begin
    if (ap_sig_bdd_261) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_395)
begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_406)
begin
    if (ap_sig_bdd_406) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_821)
begin
    if (ap_sig_bdd_821) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_415)
begin
    if (ap_sig_bdd_415) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_268)
begin
    if (ap_sig_bdd_268) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_440)
begin
    if (ap_sig_bdd_440) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_71)
begin
    if (ap_sig_bdd_71) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_451)
begin
    if (ap_sig_bdd_451) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_460)
begin
    if (ap_sig_bdd_460) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_469)
begin
    if (ap_sig_bdd_469) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_480)
begin
    if (ap_sig_bdd_480) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_495)
begin
    if (ap_sig_bdd_495) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_510)
begin
    if (ap_sig_bdd_510) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_519)
begin
    if (ap_sig_bdd_519) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_543)
begin
    if (ap_sig_bdd_543) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_237)
begin
    if (ap_sig_bdd_237) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_553)
begin
    if (ap_sig_bdd_553) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_566)
begin
    if (ap_sig_bdd_566) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_278)
begin
    if (ap_sig_bdd_278) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_583)
begin
    if (ap_sig_bdd_583) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_598)
begin
    if (ap_sig_bdd_598) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_609)
begin
    if (ap_sig_bdd_609) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_839)
begin
    if (ap_sig_bdd_839) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_624)
begin
    if (ap_sig_bdd_624) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_285)
begin
    if (ap_sig_bdd_285) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_649)
begin
    if (ap_sig_bdd_649) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_296)
begin
    if (ap_sig_bdd_296) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_660)
begin
    if (ap_sig_bdd_660) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_669)
begin
    if (ap_sig_bdd_669) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_678)
begin
    if (ap_sig_bdd_678) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_689)
begin
    if (ap_sig_bdd_689) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_706)
begin
    if (ap_sig_bdd_706) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_46 assign process. ///
always @ (ap_sig_bdd_717)
begin
    if (ap_sig_bdd_717) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_47 assign process. ///
always @ (ap_sig_bdd_953)
begin
    if (ap_sig_bdd_953) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_48 assign process. ///
always @ (ap_sig_bdd_730)
begin
    if (ap_sig_bdd_730) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_311)
begin
    if (ap_sig_bdd_311) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_859)
begin
    if (ap_sig_bdd_859) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_50 assign process. ///
always @ (ap_sig_bdd_739)
begin
    if (ap_sig_bdd_739) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_51 assign process. ///
always @ (ap_sig_bdd_1962)
begin
    if (ap_sig_bdd_1962) begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_52 assign process. ///
always @ (ap_sig_bdd_753)
begin
    if (ap_sig_bdd_753) begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_764)
begin
    if (ap_sig_bdd_764) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_908)
begin
    if (ap_sig_bdd_908) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_244)
begin
    if (ap_sig_bdd_244) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_337)
begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_348)
begin
    if (ap_sig_bdd_348) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_252)
begin
    if (ap_sig_bdd_252) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_359)
begin
    if (ap_sig_bdd_359) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// decis_levl_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st26_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        decis_levl_ce0 = ap_const_logic_1;
    end else begin
        decis_levl_ce0 = ap_const_logic_0;
    end
end

/// delay_bph_address0 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_bli_address0 or p_01_rec_i1_cast_fu_1813_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        delay_bph_address0 = p_01_rec_i1_cast_fu_1813_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        delay_bph_address0 = ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_bph_address0 = grp_encode_upzero_fu_649_bli_address0;
    end else begin
        delay_bph_address0 = 'bx;
    end
end

/// delay_bph_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_bli_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        delay_bph_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_bph_ce0 = grp_encode_upzero_fu_649_bli_ce0;
    end else begin
        delay_bph_ce0 = ap_const_logic_0;
    end
end

/// delay_bph_we0 assign process. ///
always @ (ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_bli_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_bph_we0 = grp_encode_upzero_fu_649_bli_we0;
    end else begin
        delay_bph_we0 = ap_const_logic_0;
    end
end

/// delay_bpl_address0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_bli_address0 or p_01_rec_i_cast_fu_1011_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        delay_bpl_address0 = p_01_rec_i_cast_fu_1011_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        delay_bpl_address0 = ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_bpl_address0 = grp_encode_upzero_fu_649_bli_address0;
    end else begin
        delay_bpl_address0 = 'bx;
    end
end

/// delay_bpl_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_bli_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        delay_bpl_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_bpl_ce0 = grp_encode_upzero_fu_649_bli_ce0;
    end else begin
        delay_bpl_ce0 = ap_const_logic_0;
    end
end

/// delay_bpl_we0 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_bli_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_bpl_we0 = grp_encode_upzero_fu_649_bli_we0;
    end else begin
        delay_bpl_we0 = ap_const_logic_0;
    end
end

/// delay_dhx_address0 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_dlti_address0 or p_01_rec_i1_cast_fu_1813_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        delay_dhx_address0 = p_01_rec_i1_cast_fu_1813_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        delay_dhx_address0 = ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_dhx_address0 = grp_encode_upzero_fu_649_dlti_address0;
    end else begin
        delay_dhx_address0 = 'bx;
    end
end

/// delay_dhx_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_dlti_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        delay_dhx_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_dhx_ce0 = grp_encode_upzero_fu_649_dlti_ce0;
    end else begin
        delay_dhx_ce0 = ap_const_logic_0;
    end
end

/// delay_dhx_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_dlti_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_dhx_ce1 = grp_encode_upzero_fu_649_dlti_ce1;
    end else begin
        delay_dhx_ce1 = ap_const_logic_0;
    end
end

/// delay_dhx_we0 assign process. ///
always @ (ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_dlti_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_dhx_we0 = grp_encode_upzero_fu_649_dlti_we0;
    end else begin
        delay_dhx_we0 = ap_const_logic_0;
    end
end

/// delay_dhx_we1 assign process. ///
always @ (ap_sig_cseq_ST_st51_fsm_50 or grp_encode_upzero_fu_649_dlti_we1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        delay_dhx_we1 = grp_encode_upzero_fu_649_dlti_we1;
    end else begin
        delay_dhx_we1 = ap_const_logic_0;
    end
end

/// delay_dltx_address0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_dlti_address0 or p_01_rec_i_cast_fu_1011_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        delay_dltx_address0 = p_01_rec_i_cast_fu_1011_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        delay_dltx_address0 = ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_dltx_address0 = grp_encode_upzero_fu_649_dlti_address0;
    end else begin
        delay_dltx_address0 = 'bx;
    end
end

/// delay_dltx_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_dlti_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        delay_dltx_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_dltx_ce0 = grp_encode_upzero_fu_649_dlti_ce0;
    end else begin
        delay_dltx_ce0 = ap_const_logic_0;
    end
end

/// delay_dltx_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_dlti_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_dltx_ce1 = grp_encode_upzero_fu_649_dlti_ce1;
    end else begin
        delay_dltx_ce1 = ap_const_logic_0;
    end
end

/// delay_dltx_we0 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_dlti_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_dltx_we0 = grp_encode_upzero_fu_649_dlti_we0;
    end else begin
        delay_dltx_we0 = ap_const_logic_0;
    end
end

/// delay_dltx_we1 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_dlti_we1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        delay_dltx_we1 = grp_encode_upzero_fu_649_dlti_we1;
    end else begin
        delay_dltx_we1 = ap_const_logic_0;
    end
end

/// grp_encode_upzero_fu_649_bli_q0 assign process. ///
always @ (delay_bpl_q0 or delay_bph_q0 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st51_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_encode_upzero_fu_649_bli_q0 = delay_bph_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_encode_upzero_fu_649_bli_q0 = delay_bpl_q0;
    end else begin
        grp_encode_upzero_fu_649_bli_q0 = 'bx;
    end
end

/// grp_encode_upzero_fu_649_dlt assign process. ///
always @ (tmp_14_reg_2940 or ap_sig_cseq_ST_st33_fsm_32 or tmp_33_reg_3131 or ap_sig_cseq_ST_st51_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_encode_upzero_fu_649_dlt = tmp_33_reg_3131;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_encode_upzero_fu_649_dlt = tmp_14_reg_2940;
    end else begin
        grp_encode_upzero_fu_649_dlt = 'bx;
    end
end

/// grp_encode_upzero_fu_649_dlti_q0 assign process. ///
always @ (delay_dltx_q0 or delay_dhx_q0 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st51_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_encode_upzero_fu_649_dlti_q0 = delay_dhx_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_encode_upzero_fu_649_dlti_q0 = delay_dltx_q0;
    end else begin
        grp_encode_upzero_fu_649_dlti_q0 = 'bx;
    end
end

/// grp_encode_upzero_fu_649_dlti_q1 assign process. ///
always @ (delay_dltx_q1 or delay_dhx_q1 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st51_fsm_50)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_encode_upzero_fu_649_dlti_q1 = delay_dhx_q1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_encode_upzero_fu_649_dlti_q1 = delay_dltx_q1;
    end else begin
        grp_encode_upzero_fu_649_dlti_q1 = 'bx;
    end
end

/// grp_fu_1460_ce assign process. ///
always @ (ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_ap_done or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done)) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_1460_ce = ap_const_logic_1;
    end else begin
        grp_fu_1460_ce = ap_const_logic_0;
    end
end

/// grp_fu_1470_ce assign process. ///
always @ (ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_ap_done or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done)) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        grp_fu_1470_ce = ap_const_logic_1;
    end else begin
        grp_fu_1470_ce = ap_const_logic_0;
    end
end

/// grp_fu_1496_ce assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32 or grp_encode_upzero_fu_649_ap_done or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st35_fsm_34)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done)) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        grp_fu_1496_ce = ap_const_logic_1;
    end else begin
        grp_fu_1496_ce = ap_const_logic_0;
    end
end

/// grp_fu_2290_ce assign process. ///
always @ (grp_encode_upzero_fu_649_ap_done or ap_sig_cseq_ST_st51_fsm_50 or ap_sig_cseq_ST_st53_fsm_52 or ap_sig_cseq_ST_st52_fsm_51)
begin
    if (((~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) | (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51))) begin
        grp_fu_2290_ce = ap_const_logic_1;
    end else begin
        grp_fu_2290_ce = ap_const_logic_0;
    end
end

/// grp_fu_2300_ce assign process. ///
always @ (grp_encode_upzero_fu_649_ap_done or ap_sig_cseq_ST_st51_fsm_50 or ap_sig_cseq_ST_st53_fsm_52 or ap_sig_cseq_ST_st52_fsm_51)
begin
    if (((~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) | (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51))) begin
        grp_fu_2300_ce = ap_const_logic_1;
    end else begin
        grp_fu_2300_ce = ap_const_logic_0;
    end
end

/// h_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        h_ce0 = ap_const_logic_1;
    end else begin
        h_ce0 = ap_const_logic_0;
    end
end

/// h_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        h_ce1 = ap_const_logic_1;
    end else begin
        h_ce1 = ap_const_logic_0;
    end
end

/// ih_assign_phi_fu_642_p4 assign process. ///
always @ (ap_sig_cseq_ST_st46_fsm_45 or tmp_29_fu_2039_p3 or tmp_28_fu_2034_p2 or tmp_24_fu_2020_p3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        if ((ap_const_lv1_0 == tmp_28_fu_2034_p2)) begin
            ih_assign_phi_fu_642_p4 = tmp_24_fu_2020_p3;
        end else if (~(ap_const_lv1_0 == tmp_28_fu_2034_p2)) begin
            ih_assign_phi_fu_642_p4 = tmp_29_fu_2039_p3;
        end else begin
            ih_assign_phi_fu_642_p4 = 'bx;
        end
    end else begin
        ih_assign_phi_fu_642_p4 = 'bx;
    end
end

/// ilb_table_address0 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st47_fsm_46 or tmp_i4_fu_1392_p1 or tmp_i2_fu_2206_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        ilb_table_address0 = tmp_i2_fu_2206_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        ilb_table_address0 = tmp_i4_fu_1392_p1;
    end else begin
        ilb_table_address0 = 'bx;
    end
end

/// ilb_table_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st47_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46))) begin
        ilb_table_ce0 = ap_const_logic_1;
    end else begin
        ilb_table_ce0 = ap_const_logic_0;
    end
end

/// qq4_code4_table_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        qq4_code4_table_ce0 = ap_const_logic_1;
    end else begin
        qq4_code4_table_ce0 = ap_const_logic_0;
    end
end

/// quant26bt_neg_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        quant26bt_neg_ce0 = ap_const_logic_1;
    end else begin
        quant26bt_neg_ce0 = ap_const_logic_0;
    end
end

/// quant26bt_pos_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        quant26bt_pos_ce0 = ap_const_logic_1;
    end else begin
        quant26bt_pos_ce0 = ap_const_logic_0;
    end
end

/// tqmf_address0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or exitcond2_fu_758_p2 or ap_sig_cseq_ST_st10_fsm_9 or tqmf_ptr_0_rec_cast_fu_752_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond2_fu_758_p2 == ap_const_lv1_0))) begin
        tqmf_address0 = ap_const_lv5_16;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond2_fu_758_p2 == ap_const_lv1_0))) begin
        tqmf_address0 = tqmf_ptr_0_rec_cast_fu_752_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        tqmf_address0 = ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        tqmf_address0 = ap_const_lv5_1;
    end else begin
        tqmf_address0 = 'bx;
    end
end

/// tqmf_address1 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st4_fsm_3 or tqmf_addr_2_reg_2751 or ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_939_p2 or ap_sig_cseq_ST_st11_fsm_10 or tqmf_ptr_0_sum1_cast_fu_776_p1 or tqmf_ptr_0_sum_cast_fu_934_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tqmf_address1 = tqmf_addr_2_reg_2751;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_939_p2))) begin
        tqmf_address1 = ap_const_lv5_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == exitcond_fu_939_p2))) begin
        tqmf_address1 = tqmf_ptr_0_sum_cast_fu_934_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tqmf_address1 = ap_const_lv5_17;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tqmf_address1 = tqmf_ptr_0_sum1_cast_fu_776_p1;
    end else begin
        tqmf_address1 = 'bx;
    end
end

/// tqmf_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or exitcond2_fu_758_p2 or ap_sig_cseq_ST_st10_fsm_9)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond2_fu_758_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond2_fu_758_p2 == ap_const_lv1_0)))) begin
        tqmf_ce0 = ap_const_logic_1;
    end else begin
        tqmf_ce0 = ap_const_logic_0;
    end
end

/// tqmf_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_939_p2 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_939_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == exitcond_fu_939_p2)))) begin
        tqmf_ce1 = ap_const_logic_1;
    end else begin
        tqmf_ce1 = ap_const_logic_0;
    end
end

/// tqmf_d1 assign process. ///
always @ (xin1 or tqmf_q1 or ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_939_p2 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tqmf_d1 = tqmf_q1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_939_p2))) begin
        tqmf_d1 = xin1;
    end else begin
        tqmf_d1 = 'bx;
    end
end

/// tqmf_we0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_939_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_939_p2))) begin
        tqmf_we0 = ap_const_logic_1;
    end else begin
        tqmf_we0 = ap_const_logic_0;
    end
end

/// tqmf_we1 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_939_p2 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_939_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        tqmf_we1 = ap_const_logic_1;
    end else begin
        tqmf_we1 = ap_const_logic_0;
    end
end

/// wl_code_table_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        wl_code_table_ce0 = ap_const_logic_1;
    end else begin
        wl_code_table_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond2_fu_758_p2 or exitcond_fu_939_p2 or exitcond3_fu_1017_p2 or tmp_67_i_fu_1175_p2 or tmp_67_i_reg_2883 or tmp_71_i_fu_1210_p2 or grp_encode_upzero_fu_649_ap_done or exitcond1_fu_1819_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(exitcond2_fu_758_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_939_p2)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_fu_1017_p2)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            if ((ap_const_lv1_0 == tmp_67_i_fu_1175_p2)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            if (((ap_const_lv1_0 == tmp_67_i_reg_2883) | (ap_const_lv1_0 == tmp_71_i_fu_1210_p2))) begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            if (~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done)) begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_1819_p2)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st38_fsm_37;
            end
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            if (~(ap_const_logic_0 == grp_encode_upzero_fu_649_ap_done)) begin
                ap_NS_fsm = ap_ST_st52_fsm_51;
            end else begin
                ap_NS_fsm = ap_ST_st51_fsm_50;
            end
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = (il | tmp_60_fu_2631_p2);

/// ap_sig_bdd_1962 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1962 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_237 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_237 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_244 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_244 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_252 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_252 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_261 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_261 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_268 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_268 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_278 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_278 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_285 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_285 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_296 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_296 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_311 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_337 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_348 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_359 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_359 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_374 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_395 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_406 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_406 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_415 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_415 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_440 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_440 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_451 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_451 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_460 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_460 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_469 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_469 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_480 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_480 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_495 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_495 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_510 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_510 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_519 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_519 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_543 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_543 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_553 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_553 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_566 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_566 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_583 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_583 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_598 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_598 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_609 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_609 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_624 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_624 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_649 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_649 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_660 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_660 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_669 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_669 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_678 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_678 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_689 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_689 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_706 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_706 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_71 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_71 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_717 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_717 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_730 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_730 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_739 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_739 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_753 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_753 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_764 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_764 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_809 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_809 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_821 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_821 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_839 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_839 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_859 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_859 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_908 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_908 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_953 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_953 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end
assign apl1_10_cast1_fu_1717_p1 = apl1_8_fu_1711_p2;
assign apl1_10_cast_fu_1721_p1 = apl1_8_fu_1711_p2;
assign apl1_11_cast6_fu_2533_p1 = apl1_9_fu_2527_p2;
assign apl1_11_cast_fu_2537_p1 = apl1_9_fu_2527_p2;
assign apl1_2_fu_1741_p2 = (ap_const_lv16_0 - apl1_10_cast1_fu_1717_p1);
assign apl1_3_cast_fu_1747_p1 = $signed(apl1_2_fu_1741_p2);
assign apl1_3_fu_1757_p3 = ((tmp_102_i_fu_1751_p2[0:0]===1'b1)? apl1_2_fu_1741_p2: tmp_46_fu_1737_p1);
assign apl1_4_cast_fu_1765_p1 = $signed(apl1_3_fu_1757_p3);
assign apl1_4_fu_2487_p2 = (apl_i1_v_cast_cast_fu_2480_p3 + tmp_99_i1_fu_2470_p4);
assign apl1_6_fu_2557_p2 = (ap_const_lv16_0 - apl1_11_cast6_fu_2533_p1);
assign apl1_7_fu_2573_p3 = ((tmp_102_i1_fu_2567_p2[0:0]===1'b1)? apl1_6_fu_2557_p2: tmp_59_fu_2553_p1);
assign apl1_8_cast_fu_2563_p1 = $signed(apl1_6_fu_2557_p2);
assign apl1_8_fu_1711_p2 = (ap_const_lv15_3C00 - apl2_assign_fu_1693_p3);
assign apl1_9_cast_fu_2581_p1 = $signed(apl1_7_fu_2573_p3);
assign apl1_9_fu_2527_p2 = (ap_const_lv15_3C00 - apl2_assign_1_fu_2509_p3);
assign apl1_fu_1671_p2 = (apl_i_v_cast_cast_fu_1664_p3 + tmp_99_i_fu_1654_p4);
assign apl2_1_fu_2440_p2 = ($signed(tmp_91_i1_cast_cast_fu_2420_p4) + $signed(tmp5_cast_fu_2436_p1));
assign apl2_assign_1_cast_fu_2517_p1 = $signed(apl2_assign_1_fu_2509_p3);
assign apl2_assign_1_fu_2509_p3 = ((tmp_94_i1_fu_2503_p2[0:0]===1'b1)? ap_const_lv15_5000: tmp_58_fu_2499_p1);
assign apl2_assign_cast_fu_1701_p1 = $signed(apl2_assign_fu_1693_p3);
assign apl2_assign_fu_1693_p3 = ((tmp_94_i_fu_1687_p2[0:0]===1'b1)? ap_const_lv15_5000: tmp_45_fu_1683_p1);
assign apl2_fu_1624_p2 = ($signed(tmp_91_i_cast_cast_fu_1604_p4) + $signed(tmp4_cast_fu_1620_p1));
assign apl_i1_v_cast_cast_fu_2480_p3 = ((tmp_54_reg_3153[0:0]===1'b1)? ap_const_lv32_FFFFFF40: ap_const_lv32_C0);
assign apl_i_v_cast_cast_fu_1664_p3 = ((tmp_39_reg_2976[0:0]===1'b1)? ap_const_lv32_FFFFFF40: ap_const_lv32_C0);
assign decis_fu_2031_p1 = $signed(tmp_27_reg_3093);
assign decis_levl_address0 = tmp_68_i_fu_1187_p1;
assign delay_bph_d0 = grp_encode_upzero_fu_649_bli_d0;
assign delay_bpl_d0 = grp_encode_upzero_fu_649_bli_d0;
assign delay_dhx_address1 = grp_encode_upzero_fu_649_dlti_address1;
assign delay_dhx_d0 = grp_encode_upzero_fu_649_dlti_d0;
assign delay_dhx_d1 = grp_encode_upzero_fu_649_dlti_d1;
assign delay_dltx_address1 = grp_encode_upzero_fu_649_dlti_address1;
assign delay_dltx_d0 = grp_encode_upzero_fu_649_dlti_d0;
assign delay_dltx_d1 = grp_encode_upzero_fu_649_dlti_d1;
assign el_assign_fu_1134_p2 = (tmp_4_reg_2774 - tmp_7_fu_1122_p2);
assign exitcond1_fu_1819_p2 = (dlt_pn_rec_i1_reg_628 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond2_fu_758_p2 = (i_reg_532 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond3_fu_1017_p2 = (dlt_pn_rec_i_reg_595 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond_fu_939_p2 = (i_1_reg_574 == ap_const_lv5_16? 1'b1: 1'b0);
assign grp_encode_upzero_fu_649_ap_start = grp_encode_upzero_fu_649_ap_start_ap_start_reg;
assign grp_fu_1041_ce = ap_const_logic_1;
assign grp_fu_1041_p0 = al1;
assign grp_fu_1041_p1 = tmp_19_fu_1027_p2;
assign grp_fu_1061_ce = ap_const_logic_1;
assign grp_fu_1061_p0 = al2;
assign grp_fu_1061_p1 = tmp_22_fu_1047_p2;
assign grp_fu_1075_ce = ap_const_logic_1;
assign grp_fu_1075_p0 = reg_692;
assign grp_fu_1075_p1 = reg_688;
assign grp_fu_1460_p0 = plt1;
assign grp_fu_1460_p1 = tmp_i5_fu_1452_p1;
assign grp_fu_1470_p0 = plt2;
assign grp_fu_1470_p1 = tmp_i5_fu_1452_p1;
assign grp_fu_1496_p0 = reg_696;
assign grp_fu_1496_p1 = reg_700;
assign grp_fu_1843_ce = ap_const_logic_1;
assign grp_fu_1843_p0 = ah1;
assign grp_fu_1843_p1 = tmp_47_fu_1829_p2;
assign grp_fu_1863_ce = ap_const_logic_1;
assign grp_fu_1863_p0 = ah2;
assign grp_fu_1863_p1 = tmp_48_fu_1849_p2;
assign grp_fu_1877_ce = ap_const_logic_1;
assign grp_fu_1877_p0 = reg_700;
assign grp_fu_1877_p1 = reg_696;
assign grp_fu_2077_ce = ap_const_logic_1;
assign grp_fu_2077_p0 = tmp_30_reg_3111;
assign grp_fu_2077_p1 = tmp_34_cast1_reg_3103;
assign grp_fu_2290_p0 = ph1;
assign grp_fu_2290_p1 = tmp_i10_fu_2282_p1;
assign grp_fu_2300_p0 = ph2;
assign grp_fu_2300_p1 = tmp_i10_fu_2282_p1;
assign grp_fu_999_ce = ap_const_logic_1;
assign grp_fu_999_p0 = reg_692;
assign grp_fu_999_p1 = reg_688;
assign h_address0 = tqmf_ptr_0_rec_cast_fu_752_p1;
assign h_address1 = tqmf_ptr_0_sum1_cast_fu_776_p1;
assign i_2_fu_764_p2 = (i_reg_532 + ap_const_lv4_1);
assign i_3_fu_945_p2 = (ap_const_lv5_1 + i_1_reg_574);
assign il_assign_cast_fu_1228_p1 = ril_2_fu_1221_p3;
assign m_1_fu_2006_p2 = (ap_const_lv32_0 - n_assign_2_fu_1940_p2);
assign m_fu_1157_p2 = (ap_const_lv32_0 - el_assign_fu_1134_p2);
assign mil_fu_1181_p2 = (mil_i_reg_606 + ap_const_lv5_1);
assign n_assign_1_fu_1163_p3 = ((tmp_23_fu_1149_p3[0:0]===1'b1)? m_fu_1157_p2: el_assign_fu_1134_p2);
assign n_assign_2_fu_1940_p2 = (xh - tmp_21_fu_1924_p2);
assign n_assign_3_fu_2012_p3 = ((tmp_50_fu_1998_p3[0:0]===1'b1)? m_1_fu_2006_p2: n_assign_2_fu_1940_p2);
assign nbh_assign_1_fu_2132_p2 = (wd_fu_2108_p4 + tmp_34_fu_2118_p6);
assign nbl_assign_1_fu_1294_p2 = ($signed(tmp_75_i_fu_1280_p4) + $signed(wl_code_table_load_cast_fu_1290_p1));
assign nbl_assign_2_cast_fu_1338_p1 = nbl_assign_2_fu_1330_p3;
assign nbl_assign_2_fu_1330_p3 = ((tmp_78_i_fu_1324_p2[0:0]===1'b1)? ap_const_lv15_4800: tmp_36_fu_1320_p1);
assign nbl_assign_3_cast_fu_2176_p1 = nbl_assign_3_fu_2168_p3;
assign nbl_assign_3_fu_2168_p3 = ((tmp_105_i_fu_2162_p2[0:0]===1'b1)? ap_const_lv15_5800: tmp_53_fu_2158_p1);
assign p_01_rec_i1_cast_fu_1813_p1 = p_01_rec_i1_fu_1807_p2;
assign p_01_rec_i1_fu_1807_p2 = (dlt_pn_rec_i1_reg_628 + ap_const_lv3_1);
assign p_01_rec_i_cast_fu_1011_p1 = p_01_rec_i_fu_1005_p2;
assign p_01_rec_i_fu_1005_p2 = (dlt_pn_rec_i_reg_595 + ap_const_lv3_1);
assign p_i1_fu_1677_p3 = ((tmp_93_i_reg_2992[0:0]===1'b1)? ap_const_lv32_3000: apl2_reg_2987);
assign p_i2_fu_2150_p3 = ((tmp_52_fu_2142_p3[0:0]===1'b1)? ap_const_lv31_0: tmp_51_fu_2138_p1);
assign p_i3_fu_2493_p3 = ((tmp_93_i1_reg_3169[0:0]===1'b1)? ap_const_lv32_3000: apl2_1_reg_3164);
assign p_i_fu_1312_p3 = ((tmp_32_fu_1304_p3[0:0]===1'b1)? ap_const_lv31_0: tmp_26_fu_1300_p1);
assign p_shl1_cast_fu_724_p1 = $signed(p_shl1_fu_716_p3);
assign p_shl1_fu_716_p3 = {{tqmf_q0}, {ap_const_lv2_0}};
assign p_shl2_cast_fu_867_p1 = $signed(p_shl2_fu_859_p3);
assign p_shl2_fu_859_p3 = {{tqmf_q1}, {ap_const_lv4_0}};
assign p_shl3_cast_fu_879_p1 = $signed(p_shl3_fu_871_p3);
assign p_shl3_fu_871_p3 = {{tqmf_q1}, {ap_const_lv2_0}};
assign p_shl_cast_fu_712_p1 = $signed(p_shl_fu_704_p3);
assign p_shl_fu_704_p3 = {{tqmf_q0}, {ap_const_lv4_0}};
assign p_shl_i1_cast_fu_1594_p1 = p_shl_i1_fu_1586_p3;
assign p_shl_i1_fu_1586_p3 = {{al2}, {ap_const_lv7_0}};
assign p_shl_i2_cast_fu_1644_p1 = p_shl_i2_fu_1636_p3;
assign p_shl_i2_fu_1636_p3 = {{al1}, {ap_const_lv8_0}};
assign p_shl_i3_cast_fu_2098_p1 = p_shl_i3_fu_2090_p3;
assign p_shl_i3_fu_2090_p3 = {{nbh}, {ap_const_lv7_0}};
assign p_shl_i4_cast_fu_2410_p1 = p_shl_i4_fu_2402_p3;
assign p_shl_i4_fu_2402_p3 = {{ah2}, {ap_const_lv7_0}};
assign p_shl_i5_cast_fu_2460_p1 = p_shl_i5_fu_2452_p3;
assign p_shl_i5_fu_2452_p3 = {{ah1}, {ap_const_lv8_0}};
assign p_shl_i_cast_fu_1270_p1 = p_shl_i_fu_1262_p3;
assign p_shl_i_fu_1262_p3 = {{nbl}, {ap_const_lv7_0}};
assign p_sum_cast_fu_917_p1 = $unsigned(p_sum_fu_911_p2);
assign p_sum_fu_911_p2 = (ap_const_lv5_17 + tmp_15_fu_907_p1);
assign phitmp_fu_782_p2 = (tqmf_ptr_0_rec_reg_521 + ap_const_lv5_2);
assign pl_2_fu_1102_p2 = ($signed(tmp_64_i1_reg_2857) + $signed(pl_1_reg_2852));
assign pl_5_fu_1904_p2 = ($signed(tmp_64_i2_reg_3071) + $signed(pl_4_reg_3066));
assign qq4_code4_table_address0 = tmp_12_fu_1248_p1;
assign quant26bt_neg_address0 = tmp_73_i_fu_1215_p1;
assign quant26bt_pos_address0 = tmp_73_i_fu_1215_p1;
assign ril_2_fu_1221_p3 = ((tmp_23_reg_2867[0:0]===1'b1)? quant26bt_neg_q0: quant26bt_pos_q0);
assign tmp4_cast_fu_1620_p1 = tmp4_fu_1614_p2;
assign tmp4_fu_1614_p2 = ($signed(tmp_88_i_cast_cast_fu_1575_p3) + $signed(tmp_85_i_cast_cast_fu_1571_p1));
assign tmp5_cast_fu_2436_p1 = tmp5_fu_2430_p2;
assign tmp5_fu_2430_p2 = ($signed(tmp_88_i1_cast_cast_fu_2391_p3) + $signed(tmp_85_i1_cast_cast_fu_2387_p1));
assign tmp_101_i1_fu_2541_p2 = ($signed(apl1_4_reg_3174) > $signed(apl1_11_cast_fu_2537_p1)? 1'b1: 1'b0);
assign tmp_101_i_fu_1725_p2 = ($signed(apl1_reg_2997) > $signed(apl1_10_cast_fu_1721_p1)? 1'b1: 1'b0);
assign tmp_102_i1_fu_2567_p2 = ($signed(wd3_0_apl1_i1_fu_2546_p3) < $signed(apl1_8_cast_fu_2563_p1)? 1'b1: 1'b0);
assign tmp_102_i_fu_1751_p2 = ($signed(wd3_0_apl1_i_fu_1730_p3) < $signed(apl1_3_cast_fu_1747_p1)? 1'b1: 1'b0);
assign tmp_105_i_fu_2162_p2 = (p_i2_fu_2150_p3 > ap_const_lv31_5800? 1'b1: 1'b0);
assign tmp_10_cast_fu_822_p1 = tmp_s_reg_2716;
assign tmp_10_fu_1200_p4 = {{tmp_70_i_fu_1195_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
assign tmp_11_fu_1238_p4 = {{ril_2_fu_1221_p3[ap_const_lv32_5 : ap_const_lv32_2]}};
assign tmp_12_fu_1248_p1 = tmp_11_fu_1238_p4;
assign tmp_13_fu_1371_p0 = tmp_i2_cast_reg_2877;
assign tmp_13_fu_1371_p1 = qq4_code4_table_load_reg_2925;
assign tmp_13_fu_1371_p2 = ($signed(tmp_13_fu_1371_p0) * $signed(tmp_13_fu_1371_p1));
assign tmp_14_fu_1376_p4 = {{tmp_13_fu_1371_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
assign tmp_15_fu_907_p1 = tqmf_ptr_0_pn_rec_reg_563[4:0];
assign tmp_16_fu_1396_p2 = (tmp_14_fu_1376_p4 + tmp_63_i_reg_2862);
assign tmp_17_fu_1540_p4 = {{al1[ap_const_lv32_1F : ap_const_lv32_5]}};
assign tmp_18_fu_1550_p1 = $signed(tmp_17_fu_1540_p4);
assign tmp_19_fu_1027_p2 = rlt1 << ap_const_lv32_1;
assign tmp_1_fu_951_p2 = (xa_1_cast1_reg_2731 + xb_1_cast1_reg_2741);
assign tmp_20_fu_1783_p2 = (dlt + sl);
assign tmp_21_fu_1924_p2 = (tmp_66_i2_fu_1908_p4 + tmp_63_i2_fu_1888_p4);
assign tmp_22_fu_1047_p2 = rlt2 << ap_const_lv32_1;
assign tmp_23_fu_1149_p3 = el_assign_fu_1134_p2[ap_const_lv32_1F];
assign tmp_24_fu_2020_p3 = ((tmp_49_reg_3081[0:0]===1'b1)? ap_const_lv2_1: ap_const_lv2_3);
assign tmp_25_fu_1982_p1 = deth;
assign tmp_25_fu_1982_p2 = ($signed({{1'b0}, {ap_const_lv42_234}}) * $signed(tmp_25_fu_1982_p1));
assign tmp_26_fu_1300_p1 = nbl_assign_1_fu_1294_p2[30:0];
assign tmp_28_fu_2034_p2 = ($signed(n_assign_3_reg_3098) > $signed(decis_fu_2031_p1)? 1'b1: 1'b0);
assign tmp_29_fu_2039_p3 = ((tmp_49_reg_3081[0:0]===1'b1)? ap_const_lv2_0: ap_const_lv2_2);
assign tmp_2_cast_fu_813_p1 = tmp_2_reg_2711;
assign tmp_2_fu_795_p0 = h_load_reg_2696;
assign tmp_2_fu_795_p1 = reg_684;
assign tmp_2_fu_795_p2 = ($signed(tmp_2_fu_795_p0) * $signed(tmp_2_fu_795_p1));
assign tmp_30_fu_2060_p1 = ap_const_lv32_FFFFE310;
assign tmp_30_fu_2060_p2 = ap_const_lv32_FFFFF9B0;
assign tmp_30_fu_2060_p3 = ap_const_lv32_1CF0;
assign tmp_30_fu_2060_p4 = ap_const_lv32_650;
assign tmp_30_fu_2060_p5 = ih_assign_phi_fu_642_p4;
assign tmp_32_fu_1304_p3 = nbl_assign_1_fu_1294_p2[ap_const_lv32_1F];
assign tmp_33_cast_cast_fu_1960_p3 = ((tmp_49_fu_1952_p3[0:0]===1'b1)? ap_const_lv32_1: ap_const_lv32_3);
assign tmp_34_cast1_fu_2028_p1 = $signed(deth);
assign tmp_34_fu_2118_p1 = ap_const_lv32_31E;
assign tmp_34_fu_2118_p2 = ap_const_lv32_FFFFFF2A;
assign tmp_34_fu_2118_p3 = ap_const_lv32_31E;
assign tmp_34_fu_2118_p4 = ap_const_lv32_FFFFFF2A;
assign tmp_34_fu_2118_p5 = ih_assign_reg_639;
assign tmp_35_fu_2260_p2 = (tmp_63_i2_reg_3076 + tmp_33_reg_3131);
assign tmp_36_fu_1320_p1 = p_i_fu_1312_p3[14:0];
assign tmp_37_fu_2356_p4 = {{ah1[ap_const_lv32_1F : ap_const_lv32_5]}};
assign tmp_38_cast_cast_fu_2047_p3 = ((tmp_49_reg_3081[0:0]===1'b1)? ap_const_lv32_0: ap_const_lv32_2);
assign tmp_38_fu_2599_p2 = (sh + dh);
assign tmp_3_fu_903_p1 = xb_1_fu_893_p2[46:0];
assign tmp_41_fu_2366_p1 = $signed(tmp_37_fu_2356_p4);
assign tmp_42_fu_1554_p4 = {{wd2_1_fu_1534_p2[ap_const_lv32_22 : ap_const_lv32_7]}};
assign tmp_43_fu_1564_p3 = ((tmp_39_reg_2976[0:0]===1'b1)? tmp_18_fu_1550_p1: tmp_42_fu_1554_p4);
assign tmp_45_fu_1683_p1 = p_i1_fu_1677_p3[14:0];
assign tmp_46_fu_1737_p1 = wd3_0_apl1_i_fu_1730_p3[15:0];
assign tmp_47_fu_1829_p2 = rh1 << ap_const_lv32_1;
assign tmp_48_fu_1849_p2 = rh2 << ap_const_lv32_1;
assign tmp_49_fu_1952_p3 = n_assign_2_fu_1940_p2[ap_const_lv32_1F];
assign tmp_50_fu_1998_p3 = n_assign_2_fu_1940_p2[ap_const_lv32_1F];
assign tmp_51_fu_2138_p1 = nbh_assign_1_fu_2132_p2[30:0];
assign tmp_52_fu_2142_p3 = nbh_assign_1_fu_2132_p2[ap_const_lv32_1F];
assign tmp_53_fu_2158_p1 = p_i2_fu_2150_p3[14:0];
assign tmp_55_fu_2370_p4 = {{wd2_3_fu_2350_p2[ap_const_lv32_22 : ap_const_lv32_7]}};
assign tmp_56_fu_2380_p3 = ((tmp_54_reg_3153[0:0]===1'b1)? tmp_41_fu_2366_p1: tmp_55_fu_2370_p4);
assign tmp_58_fu_2499_p1 = p_i3_fu_2493_p3[14:0];
assign tmp_59_fu_2553_p1 = wd3_0_apl1_i1_fu_2546_p3[15:0];
assign tmp_5_fu_971_p2 = (tmp_reg_2736 - tmp_3_reg_2746);
assign tmp_60_fu_2631_p2 = ih << ap_const_lv32_6;
assign tmp_63_i2_fu_1888_p4 = {{zl1_i1_reg_618[ap_const_lv32_2D : ap_const_lv32_E]}};
assign tmp_63_i_fu_1086_p4 = {{zl1_i_reg_585[ap_const_lv32_2D : ap_const_lv32_E]}};
assign tmp_66_i1_fu_1106_p4 = {{pl_2_fu_1102_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
assign tmp_66_i2_fu_1908_p4 = {{pl_5_fu_1904_p2[ap_const_lv32_2E : ap_const_lv32_F]}};
assign tmp_67_i_fu_1175_p2 = (mil_i_reg_606 < ap_const_lv5_1E? 1'b1: 1'b0);
assign tmp_68_i_fu_1187_p1 = mil_i_reg_606;
assign tmp_6_cast_fu_841_p1 = tmp_6_fu_835_p2;
assign tmp_6_fu_835_p1 = reg_684;
assign tmp_6_fu_835_p2 = ($signed(ap_const_lv39_7FFFFFFFD4) * $signed(tmp_6_fu_835_p1));
assign tmp_70_i_fu_1195_p0 = tmp_70_i_fu_1195_p00;
assign tmp_70_i_fu_1195_p00 = decis_levl_load_reg_2897;
assign tmp_70_i_fu_1195_p1 = tmp_i2_cast_reg_2877;
assign tmp_70_i_fu_1195_p2 = ($signed({{1'b0}, {tmp_70_i_fu_1195_p0}}) * $signed(tmp_70_i_fu_1195_p1));
assign tmp_71_i_fu_1210_p2 = ($signed(n_assign_1_reg_2872) > $signed(tmp_10_fu_1200_p4)? 1'b1: 1'b0);
assign tmp_73_i_fu_1215_p1 = mil_i_reg_606;
assign tmp_75_i_fu_1280_p4 = {{tmp_i3_fu_1274_p2[ap_const_lv32_26 : ap_const_lv32_7]}};
assign tmp_78_i_fu_1324_p2 = (p_i_fu_1312_p3 > ap_const_lv31_4800? 1'b1: 1'b0);
assign tmp_7_fu_1122_p2 = (tmp_66_i1_fu_1106_p4 + tmp_63_i_fu_1086_p4);
assign tmp_80_i1_cast_cast_fu_2216_p1 = $unsigned(tmp_80_i1_fu_2211_p2);
assign tmp_80_i1_fu_2211_p2 = ($signed(ap_const_lv4_B) - $signed(wd2_4_cast_reg_3121));
assign tmp_80_i_cast_cast_fu_1412_p1 = $unsigned(tmp_80_i_fu_1407_p2);
assign tmp_80_i_fu_1407_p2 = ($signed(ap_const_lv4_9) - $signed(wd2_cast_reg_2935));
assign tmp_81_i1_cast_fu_2234_p1 = tmp_81_i1_fu_2226_p3;
assign tmp_81_i1_fu_2226_p3 = {{wd3_2_fu_2220_p2}, {ap_const_lv3_0}};
assign tmp_81_i_cast_fu_1430_p1 = tmp_81_i_fu_1422_p3;
assign tmp_81_i_fu_1422_p3 = {{wd3_fu_1416_p2}, {ap_const_lv3_0}};
assign tmp_85_i1_cast_cast_fu_2387_p1 = $signed(tmp_56_fu_2380_p3);
assign tmp_85_i_cast_cast_fu_1571_p1 = $signed(tmp_43_fu_1564_p3);
assign tmp_88_i1_cast_cast_fu_2391_p3 = ((tmp_57_reg_3159[0:0]===1'b1)? ap_const_lv29_1FFFFF80: ap_const_lv29_80);
assign tmp_88_i_cast_cast_fu_1575_p3 = ((tmp_44_reg_2982[0:0]===1'b1)? ap_const_lv29_1FFFFF80: ap_const_lv29_80);
assign tmp_89_i1_cast7_fu_2398_p1 = $signed(ah2);
assign tmp_89_i_cast_fu_1582_p1 = $signed(al2);
assign tmp_90_i1_fu_2414_p2 = ($signed(p_shl_i4_cast_fu_2410_p1) - $signed(tmp_89_i1_cast7_fu_2398_p1));
assign tmp_90_i_fu_1598_p2 = ($signed(p_shl_i1_cast_fu_1594_p1) - $signed(tmp_89_i_cast_fu_1582_p1));
assign tmp_91_i1_cast_cast_fu_2420_p4 = {{tmp_90_i1_fu_2414_p2[ap_const_lv32_26 : ap_const_lv32_7]}};
assign tmp_91_i_cast_cast_fu_1604_p4 = {{tmp_90_i_fu_1598_p2[ap_const_lv32_26 : ap_const_lv32_7]}};
assign tmp_93_i1_fu_2446_p2 = ($signed(apl2_1_fu_2440_p2) > $signed(32'b11000000000000)? 1'b1: 1'b0);
assign tmp_93_i_fu_1630_p2 = ($signed(apl2_fu_1624_p2) > $signed(32'b11000000000000)? 1'b1: 1'b0);
assign tmp_94_i1_fu_2503_p2 = ($signed(p_i3_fu_2493_p3) < $signed(32'b11111111111111111101000000000000)? 1'b1: 1'b0);
assign tmp_94_i_fu_1687_p2 = ($signed(p_i1_fu_1677_p3) < $signed(32'b11111111111111111101000000000000)? 1'b1: 1'b0);
assign tmp_99_i1_fu_2470_p4 = {{tmp_i11_fu_2464_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
assign tmp_99_i_fu_1654_p4 = {{tmp_i6_fu_1648_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
assign tmp_9_cast_fu_889_p1 = tmp_9_fu_883_p2;
assign tmp_9_fu_883_p2 = ($signed(p_shl2_cast_fu_867_p1) - $signed(p_shl3_cast_fu_879_p1));
assign tmp_fu_855_p1 = xa_1_fu_845_p2[46:0];
assign tmp_i10_fu_2282_p1 = $signed(ph);
assign tmp_i11_cast8_fu_2334_p1 = $signed(ah1);
assign tmp_i11_fu_2464_p2 = ($signed(p_shl_i5_cast_fu_2460_p1) - $signed(tmp_i11_cast8_fu_2334_p1));
assign tmp_i2_cast_26_fu_1258_p1 = $signed(nbl);
assign tmp_i2_cast_fu_1171_p1 = $signed(detl);
assign tmp_i2_fu_2206_p1 = wd1_1_fu_2186_p4;
assign tmp_i3_fu_1274_p2 = ($signed(p_shl_i_cast_fu_1270_p1) - $signed(tmp_i2_cast_26_fu_1258_p1));
assign tmp_i4_cast1_fu_1518_p1 = $signed(al1);
assign tmp_i4_fu_1392_p1 = wd1_reg_2930;
assign tmp_i5_fu_1452_p1 = $signed(plt);
assign tmp_i6_fu_1648_p2 = ($signed(p_shl_i2_cast_fu_1644_p1) - $signed(tmp_i4_cast1_fu_1518_p1));
assign tmp_i9_cast_fu_2086_p1 = $signed(nbh);
assign tmp_i9_fu_2102_p2 = ($signed(p_shl_i3_cast_fu_2098_p1) - $signed(tmp_i9_cast_fu_2086_p1));
assign tmp_s_fu_807_p0 = h_ptr_load_reg_2706;
assign tmp_s_fu_807_p1 = tqmf_ptr_load_reg_2701;
assign tmp_s_fu_807_p2 = ($signed(tmp_s_fu_807_p0) * $signed(tmp_s_fu_807_p1));
assign tqmf_d0 = xin2;
assign tqmf_ptr1_0_rec_fu_922_p2 = ($signed(ap_const_lv6_3F) + $signed(tqmf_ptr_0_pn_rec_reg_563));
assign tqmf_ptr_0_rec_cast_fu_752_p1 = tqmf_ptr_0_rec_reg_521;
assign tqmf_ptr_0_sum1_cast_fu_776_p1 = tqmf_ptr_0_sum1_fu_770_p2;
assign tqmf_ptr_0_sum1_fu_770_p2 = (tqmf_ptr_0_rec_reg_521 | ap_const_lv5_1);
assign tqmf_ptr_0_sum_cast_fu_934_p1 = tqmf_ptr_0_sum_fu_928_p2;
assign tqmf_ptr_0_sum_fu_928_p2 = (ap_const_lv6_15 + tqmf_ptr_0_pn_rec_reg_563);
assign wd1_1_fu_2186_p4 = {{nbl_assign_3_fu_2168_p3[ap_const_lv32_A : ap_const_lv32_6]}};
assign wd2_1_cast_fu_1530_p1 = $signed(wd2_fu_1522_p3);
assign wd2_1_fu_1534_p2 = ($signed(ap_const_lv35_0) - $signed(wd2_1_cast_fu_1530_p1));
assign wd2_2_fu_2338_p3 = {{ah1}, {ap_const_lv2_0}};
assign wd2_3_fu_2350_p2 = ($signed(ap_const_lv35_0) - $signed(wd2_5_cast_fu_2346_p1));
assign wd2_5_cast_fu_2346_p1 = $signed(wd2_2_fu_2338_p3);
assign wd2_fu_1522_p3 = {{al1}, {ap_const_lv2_0}};
assign wd3_0_apl1_i1_fu_2546_p3 = ((tmp_101_i1_fu_2541_p2[0:0]===1'b1)? apl1_11_cast_fu_2537_p1: apl1_4_reg_3174);
assign wd3_0_apl1_i_fu_1730_p3 = ((tmp_101_i_fu_1725_p2[0:0]===1'b1)? apl1_10_cast_fu_1721_p1: apl1_reg_2997);
assign wd3_2_fu_2220_p2 = ilb_table_q0 >> tmp_80_i1_cast_cast_fu_2216_p1;
assign wd3_fu_1416_p2 = ilb_table_q0 >> tmp_80_i_cast_cast_fu_1412_p1;
assign wd_fu_2108_p4 = {{tmp_i9_fu_2102_p2[ap_const_lv32_26 : ap_const_lv32_7]}};
assign wl_code_table_address0 = tmp_12_fu_1248_p1;
assign wl_code_table_load_cast_fu_1290_p1 = $signed(wl_code_table_q0);
assign xa_1_cast1_fu_851_p1 = $unsigned(xa_1_fu_845_p2);
assign xa_1_fu_845_p2 = ($signed(xa1_reg_543) + $signed(tmp_6_cast_fu_841_p1));
assign xa_2_fu_816_p2 = ($signed(tmp_2_cast_fu_813_p1) + $signed(xa1_reg_543));
assign xa_cast_fu_734_p1 = xa_fu_728_p2;
assign xa_fu_728_p2 = ($signed(p_shl_cast_fu_712_p1) - $signed(p_shl1_cast_fu_724_p1));
assign xb_1_cast1_fu_899_p1 = $unsigned(xb_1_fu_893_p2);
assign xb_1_fu_893_p2 = ($signed(xb1_reg_553) + $signed(tmp_9_cast_fu_889_p1));
assign xb_2_fu_825_p2 = ($signed(tmp_10_cast_fu_822_p1) + $signed(xb1_reg_553));
assign xb_cast_fu_748_p1 = xb_fu_742_p2;
assign xb_fu_742_p0 = reg_684;
assign xb_fu_742_p2 = ($signed(xb_fu_742_p0) * $signed(-39'h2C));
assign zl_1_fu_1081_p2 = ($signed(tmp_66_i_reg_2842) + $signed(zl1_i_reg_585));
assign zl_3_fu_1883_p2 = ($signed(tmp_66_i3_reg_3056) + $signed(zl1_i1_reg_618));
always @ (posedge ap_clk)
begin
    detl[2:0] <= 3'b000;
    detl[31:15] <= 17'b00000000000000000;
    il[31:6] <= 26'b00000000000000000000000000;
    nbl[31:15] <= 17'b00000000000000000;
    ih[31:2] <= 30'b000000000000000000000000000000;
    deth[2:0] <= 3'b000;
    deth[31:15] <= 17'b00000000000000000;
    nbh[31:15] <= 17'b00000000000000000;
    xa_1_cast1_reg_2731[50] <= 1'b0;
    xb_1_cast1_reg_2741[50] <= 1'b0;
    tmp_i2_cast_reg_2877[2:0] <= 3'b000;
    tmp_i2_cast_reg_2877[46:15] <= 32'b00000000000000000000000000000000;
    tmp_34_cast1_reg_3103[2:0] <= 3'b000;
    tmp_34_cast1_reg_3103[46:15] <= 32'b00000000000000000000000000000000;
end



endmodule //encode


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module encode_upzero (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dlt,
        dlti_address0,
        dlti_ce0,
        dlti_we0,
        dlti_d0,
        dlti_q0,
        dlti_address1,
        dlti_ce1,
        dlti_we1,
        dlti_d1,
        dlti_q1,
        bli_address0,
        bli_ce0,
        bli_we0,
        bli_d0,
        bli_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 13'b1;
parameter    ap_ST_st2_fsm_1 = 13'b10;
parameter    ap_ST_st3_fsm_2 = 13'b100;
parameter    ap_ST_st4_fsm_3 = 13'b1000;
parameter    ap_ST_st5_fsm_4 = 13'b10000;
parameter    ap_ST_st6_fsm_5 = 13'b100000;
parameter    ap_ST_st7_fsm_6 = 13'b1000000;
parameter    ap_ST_st8_fsm_7 = 13'b10000000;
parameter    ap_ST_st9_fsm_8 = 13'b100000000;
parameter    ap_ST_st10_fsm_9 = 13'b1000000000;
parameter    ap_ST_st11_fsm_10 = 13'b10000000000;
parameter    ap_ST_st12_fsm_11 = 13'b100000000000;
parameter    ap_ST_st13_fsm_12 = 13'b1000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_FFFFFF80 = 32'b11111111111111111111111110000000;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] dlt;
output  [2:0] dlti_address0;
output   dlti_ce0;
output   dlti_we0;
output  [31:0] dlti_d0;
input  [31:0] dlti_q0;
output  [2:0] dlti_address1;
output   dlti_ce1;
output   dlti_we1;
output  [31:0] dlti_d1;
input  [31:0] dlti_q1;
output  [2:0] bli_address0;
output   bli_ce0;
output   bli_we0;
output  [31:0] bli_d0;
input  [31:0] bli_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] dlti_address0;
reg dlti_ce0;
reg dlti_we0;
reg[2:0] dlti_address1;
reg dlti_ce1;
reg dlti_we1;
reg[31:0] dlti_d1;
reg[2:0] bli_address0;
reg bli_ce0;
reg bli_we0;
reg[31:0] bli_d0;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm = 13'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_31;
reg   [31:0] reg_165;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_64;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_71;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_79;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_86;
wire   [2:0] dlti_addr_gep_fu_56_p3;
reg   [2:0] dlti_addr_reg_310;
wire   [0:0] tmp_fu_172_p2;
reg   [0:0] tmp_reg_316;
wire  signed [63:0] tmp_s_fu_178_p1;
reg  signed [63:0] tmp_s_reg_320;
wire   [2:0] i_5_fu_188_p2;
reg   [2:0] i_5_reg_328;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_110;
wire   [0:0] exitcond_fu_182_p2;
reg   [2:0] bli_addr_1_reg_338;
wire   [2:0] i_4_fu_206_p2;
reg   [2:0] i_4_reg_346;
reg   [2:0] bli_addr_reg_351;
wire   [0:0] exitcond1_fu_200_p2;
wire   [2:0] dlti_addr_1_gep_fu_95_p3;
reg   [2:0] dlti_addr_1_reg_356;
wire   [2:0] dlti_addr_3_gep_fu_104_p3;
reg   [2:0] dlti_addr_3_reg_362;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_149;
reg   [0:0] tmp_61_reg_373;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_158;
reg   [31:0] dlti_load_2_reg_378;
wire   [2:0] dlti_addr_4_gep_fu_116_p3;
reg   [2:0] dlti_addr_4_reg_383;
wire   [2:0] dlti_addr_5_gep_fu_125_p3;
reg   [2:0] dlti_addr_5_reg_388;
reg   [31:0] dlti_load_4_reg_393;
reg   [2:0] i_1_reg_143;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_173;
reg   [2:0] i_reg_154;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_183;
wire   [63:0] tmp_44_fu_194_p1;
wire   [63:0] tmp_41_fu_212_p1;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_204;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_217;
wire   [31:0] tmp_48_fu_269_p2;
wire  signed [31:0] grp_fu_221_p0;
wire  signed [31:0] grp_fu_221_p1;
wire  signed [63:0] grp_fu_221_p2;
wire   [39:0] p_shl1_fu_245_p3;
wire  signed [39:0] tmp_57_cast_fu_241_p1;
wire  signed [39:0] tmp_47_fu_253_p2;
wire   [31:0] wd2_cast_cast_fu_234_p3;
wire   [31:0] wd3_fu_259_p4;
wire   [39:0] p_shl_fu_280_p3;
wire  signed [39:0] tmp_49_cast_fu_276_p1;
wire  signed [39:0] tmp_42_fu_288_p2;
wire    grp_fu_221_ce;
reg   [12:0] ap_NS_fsm;


encode_mul_32s_32s_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32s_64_3_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_221_p0 ),
    .din1( grp_fu_221_p1 ),
    .ce( grp_fu_221_ce ),
    .dout( grp_fu_221_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & (tmp_fu_172_p2 == ap_const_lv1_0))) begin
        i_1_reg_143 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_1_reg_143 <= i_5_reg_328;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_172_p2 == ap_const_lv1_0))) begin
        i_reg_154 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_reg_154 <= i_4_reg_346;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        reg_165 <= dlti_q1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        reg_165 <= dlti_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_182_p2))) begin
        bli_addr_1_reg_338 <= tmp_44_fu_194_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_fu_200_p2))) begin
        bli_addr_reg_351 <= tmp_41_fu_212_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        dlti_load_2_reg_378 <= dlti_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        dlti_load_4_reg_393 <= dlti_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_reg_316 == ap_const_lv1_0))) begin
        i_4_reg_346 <= i_4_fu_206_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_reg_316 == ap_const_lv1_0))) begin
        i_5_reg_328 <= i_5_fu_188_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_61_reg_373 <= grp_fu_221_p2[ap_const_lv32_3F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_reg_316 <= tmp_fu_172_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & (tmp_fu_172_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_320 <= tmp_s_fu_178_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_79)
begin
    if (ap_sig_bdd_79) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_86)
begin
    if (ap_sig_bdd_86) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_204)
begin
    if (ap_sig_bdd_204) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_31)
begin
    if (ap_sig_bdd_31) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_110)
begin
    if (ap_sig_bdd_110) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_64)
begin
    if (ap_sig_bdd_64) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_149)
begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_158)
begin
    if (ap_sig_bdd_158) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_173)
begin
    if (ap_sig_bdd_173) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_183)
begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_71)
begin
    if (ap_sig_bdd_71) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// bli_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or bli_addr_1_reg_338 or bli_addr_reg_351 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or tmp_41_fu_212_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        bli_address0 = bli_addr_reg_351;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        bli_address0 = bli_addr_1_reg_338;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        bli_address0 = tmp_41_fu_212_p1;
    end else begin
        bli_address0 = 'bx;
    end
end

/// bli_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        bli_ce0 = ap_const_logic_1;
    end else begin
        bli_ce0 = ap_const_logic_0;
    end
end

/// bli_d0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or tmp_48_fu_269_p2 or tmp_42_fu_288_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        bli_d0 = {{tmp_42_fu_288_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        bli_d0 = tmp_48_fu_269_p2;
    end else begin
        bli_d0 = 'bx;
    end
end

/// bli_we0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        bli_we0 = ap_const_logic_1;
    end else begin
        bli_we0 = ap_const_logic_0;
    end
end

/// dlti_address0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st11_fsm_10 or dlti_addr_reg_310 or tmp_reg_316 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_182_p2 or exitcond1_fu_200_p2 or dlti_addr_3_reg_362 or dlti_addr_5_reg_388 or tmp_44_fu_194_p1 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        dlti_address0 = dlti_addr_5_reg_388;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        dlti_address0 = dlti_addr_3_reg_362;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        dlti_address0 = dlti_addr_reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        dlti_address0 = ap_const_lv64_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (((tmp_reg_316 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond_fu_182_p2)) | (~(tmp_reg_316 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_fu_200_p2))))) begin
        dlti_address0 = ap_const_lv64_4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_182_p2))) begin
        dlti_address0 = tmp_44_fu_194_p1;
    end else begin
        dlti_address0 = 'bx;
    end
end

/// dlti_address1 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st11_fsm_10 or dlti_addr_reg_310 or ap_sig_cseq_ST_st2_fsm_1 or dlti_addr_1_reg_356 or dlti_addr_4_reg_383 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        dlti_address1 = dlti_addr_reg_310;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        dlti_address1 = dlti_addr_4_reg_383;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        dlti_address1 = dlti_addr_1_reg_356;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        dlti_address1 = ap_const_lv64_5;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        dlti_address1 = ap_const_lv64_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        dlti_address1 = ap_const_lv64_3;
    end else begin
        dlti_address1 = 'bx;
    end
end

/// dlti_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st11_fsm_10 or tmp_reg_316 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_182_p2 or exitcond1_fu_200_p2 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_182_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (((tmp_reg_316 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond_fu_182_p2)) | (~(tmp_reg_316 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_fu_200_p2)))) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        dlti_ce0 = ap_const_logic_1;
    end else begin
        dlti_ce0 = ap_const_logic_0;
    end
end

/// dlti_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        dlti_ce1 = ap_const_logic_1;
    end else begin
        dlti_ce1 = ap_const_logic_0;
    end
end

/// dlti_d1 assign process. ///
always @ (dlt or reg_165 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st11_fsm_10 or dlti_load_2_reg_378 or dlti_load_4_reg_393 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        dlti_d1 = dlt;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        dlti_d1 = dlti_load_4_reg_393;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        dlti_d1 = dlti_load_2_reg_378;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        dlti_d1 = reg_165;
    end else begin
        dlti_d1 = 'bx;
    end
end

/// dlti_we0 assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        dlti_we0 = ap_const_logic_1;
    end else begin
        dlti_we0 = ap_const_logic_0;
    end
end

/// dlti_we1 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        dlti_we1 = ap_const_logic_1;
    end else begin
        dlti_we1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_reg_316 or exitcond_fu_182_p2 or exitcond1_fu_200_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(tmp_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_fu_200_p2))) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else if ((((tmp_reg_316 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond_fu_182_p2)) | (~(tmp_reg_316 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_fu_200_p2)))) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_110 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_110 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_149 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_158 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_158 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_173 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_173 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_183 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_204 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_204 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_31 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_31 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_64 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_64 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_71 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_71 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_79 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_79 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_86 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_86 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end
assign dlti_addr_1_gep_fu_95_p3 = ap_const_lv64_4;
assign dlti_addr_3_gep_fu_104_p3 = ap_const_lv64_3;
assign dlti_addr_4_gep_fu_116_p3 = ap_const_lv64_2;
assign dlti_addr_5_gep_fu_125_p3 = ap_const_lv64_1;
assign dlti_addr_gep_fu_56_p3 = ap_const_lv64_0;
assign dlti_d0 = reg_165;
assign exitcond1_fu_200_p2 = (i_reg_154 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_fu_182_p2 = (i_1_reg_143 == ap_const_lv3_6? 1'b1: 1'b0);
assign grp_fu_221_ce = ap_const_logic_1;
assign grp_fu_221_p0 = tmp_s_reg_320;
assign grp_fu_221_p1 = reg_165;
assign i_4_fu_206_p2 = (i_reg_154 + ap_const_lv3_1);
assign i_5_fu_188_p2 = (i_1_reg_143 + ap_const_lv3_1);
assign p_shl1_fu_245_p3 = {{bli_q0}, {ap_const_lv8_0}};
assign p_shl_fu_280_p3 = {{bli_q0}, {ap_const_lv8_0}};
assign tmp_41_fu_212_p1 = i_reg_154;
assign tmp_42_fu_288_p2 = ($signed(p_shl_fu_280_p3) - $signed(tmp_49_cast_fu_276_p1));
assign tmp_44_fu_194_p1 = i_1_reg_143;
assign tmp_47_fu_253_p2 = ($signed(p_shl1_fu_245_p3) - $signed(tmp_57_cast_fu_241_p1));
assign tmp_48_fu_269_p2 = (wd2_cast_cast_fu_234_p3 + wd3_fu_259_p4);
assign tmp_49_cast_fu_276_p1 = $signed(bli_q0);
assign tmp_57_cast_fu_241_p1 = $signed(bli_q0);
assign tmp_fu_172_p2 = (dlt == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_s_fu_178_p1 = $signed(dlt);
assign wd2_cast_cast_fu_234_p3 = ((tmp_61_reg_373[0:0]===1'b1)? ap_const_lv32_FFFFFF80: ap_const_lv32_80);
assign wd3_fu_259_p4 = {{tmp_47_fu_253_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
always @ (posedge ap_clk)
begin
    dlti_addr_reg_310[2:0] <= 3'b000;
    dlti_addr_1_reg_356[2:0] <= 3'b100;
    dlti_addr_3_reg_362[2:0] <= 3'b011;
    dlti_addr_4_reg_383[2:0] <= 3'b010;
    dlti_addr_5_reg_388[2:0] <= 3'b001;
end



endmodule //encode_upzero

